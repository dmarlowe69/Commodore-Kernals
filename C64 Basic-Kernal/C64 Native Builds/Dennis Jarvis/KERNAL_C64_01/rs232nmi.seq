.PAGE 'NMI HANDLER'NMI   SEI             ;NO IRQ'S ALLOWED...      JMP (NMINV)     ;...COULD MESS UP CASSETTESNNMI  PHA      TXA      PHA      TYA      PHANNMI10      LDA #$7F        ;DISABLE ALL NMI'S      STA D2ICR      LDY D2ICR       ;CHECK IF REAL NMI...      BMI NNMI20      ;NO...RS232/OTHER;NNMI18      JSR A0INT       ;CHECK IF $A0 IN...NO .Y      BNE NNMI19      ;...NO      JMP ($8002)     ;...YES;; CHECK FOR STOP KEY DOWN;NNMI19      JSR UD60        ;NO .Y      JSR STOP        ;NO .Y      BNE NNMI20      ;NO STOP KEY...TEST FOR RS232;; TIMB - WHERE SYSTEM GOES ON A BRK INSTRUCTION;TIMB  JSR RESTOR      ;RESTORE SYSTEM INDIRECTS      JSR IOINIT      ;RESTORE I/O FOR BASIC      JSR CINT        ;RESTORE SCREEN FOR BASIC      JMP ($A002)     ;...NO, SO BASIC WARM START.SKI 2; DISABLE NMI'S UNTILL READY;  SAVE ON STACK;NNMI20      TYA             ;.Y SAVED THROUGH RESTORE      AND ENABL       ;SHOW ONLY ENABLES      TAX             ;SAVE IN .X FOR LATTER;; T1 NMI CHECK - TRANSMITT A BIT;      AND #$01        ;CHECK FOR T1      BEQ NNMI30      ;NO...;      LDA D2PRA      AND #$FF-$04    ;FIX FOR CURRENT I/O      ORA NXTBIT      ;LOAD DATA AND...      STA D2PRA       ;...SEND IT;      LDA ENABL       ;RESTORE NMI'S      STA D2ICR       ;READY FOR NEXT...;; BECAUSE OF 6526 ICR STRUCTURE...;  HANDLE ANOTHER NMI AS A SUBROUTINE;      TXA             ;TEST FOR ANOTHER NMI      AND #$12        ;TEST FOR T2 OR FLAG      BEQ NNMI25      AND #$02        ;CHECK FOR T2      BEQ NNMI22      ;MUST BE A FLAG;      JSR T2NMI       ;HANDLE A NORMAL BIT IN...      JMP NNMI25      ;...THEN CONTINUE OUTPUT;NNMI22      JSR FLNMI       ;HANDLE A START BIT...;NNMI25      JSR RSTRAB      ;GO CALC INFO (CODE COULD BE IN LINE)      JMP NMIRTI;.SKI 2; T2 NMI CHECK - RECIEVE A BIT;NNMI30      TXA      AND #$02        ;MASK TO T2      BEQ NNMI40      ;NO...;      JSR T2NMI       ;HANDLE INTERRUPT      JMP NMIRTI.SKI 2; FLAG NMI HANDLER - RECIEVE A START BIT;NNMI40      TXA             ;CHECK FOR EDGE      AND #$10        ;ON FLAG...      BEQ NMIRTI      ;NO...;      JSR FLNMI       ;START BIT ROUTINE.SKI 2NMIRTI      LDA ENABL       ;RESTORE NMI'S      STA D2ICRPREND PLA             ;BECAUSE OF MISSING SCREEN EDITOR      TAY      PLA      TAX      PLA      RTI.SKI 4; BAUDO TABLE CONTAINS VALUES;  FOR 1E6/BAUD RATE/2;BAUDO .WOR 10000-CBIT ; 50 BAUD      .WOR 6667-CBIT  ;   75   BAUD      .WOR 4545-CBIT  ;  110   BAUD      .WOR 3715-CBIT  ;  134.6 BAUD      .WOR 3333-CBIT  ;  150   BAUD      .WOR 1667-CBIT  ;  300   BAUD      .WOR 833-CBIT   ;  600   BAUD      .WOR 417-CBIT   ; 1200   BAUD      .WOR 278-CBIT   ; 1800   BAUD      .WOR 208-CBIT   ; 2400   BAUD;; CBIT - AN ADJUSTMENT TO MAKE NEXT T2 HIT NEAR CENTER;   OF THE NEXT BIT.;   APROX THE TIME TO SERVICE A CB1 NMICBIT  =100            ;CYCLES.PAG 'NMI - SUBROUTINES'; T2NMI - SUBROUTINE TO HANDLE AN RS232;  BIT INPUT.;T2NMI LDA D2PRB       ;GET DATA IN      AND #01         ;MASK OFF...      STA INBIT       ;...SAVE FOR LATTER;; UPDATE T2 FOR MID BIT CHECK;   (WORST CASE <213 CYCLES TO HERE);   (CALC 125 CYCLES+43-66 DEAD);      LDA D2T2L       ;CALC NEW TIME & CLR NMI      SBC #22+6      ADC BAUDOF      STA D2T2L      LDA D2T2H      ADC BAUDOF+1      STA D2T2H;      LDA #$11        ;ENABLE TIMER      STA D2CRB;      LDA ENABL       ;RESTORE NMI'S EARLY...      STA D2ICR;      LDA #$FF        ;ENABLE COUNT FROM $FFFF      STA D2T2L      STA D2T2H;      JMP RSRCVR      ;GO SHIFT IN....SKI 3; FLNMI - SUBROUTINE TO HANDLE THE;  START BIT TIMING..;; CHECK FOR NOISE ?;FLNMI LDA M51CTR      ;GET LENGTH TO CHECK FOR      AND #$0F      BNE NNMI42      ;USE TABLES;; GET BAUD RATE FROM USER;      LDA M51AJB      STA D2T2L      LDA M51AJB+1      JMP NNMI50;; USE TABLES;NNMI42      ASL A           ;GET DATA FROM BAUD TABLE      TAX      LDA BAUDO-2,X   ;MOVE TO TIMER      STA D2T2L      LDA BAUDO-1,XNNMI50      STA D2T2H      LDA #$11        ;ENABLE TIMER      STA D2CRB;      LDA #$12        ;DISABLE FLAG, ENABLE T2      EOR ENABL      STA ENABL;ORA #$82;STA D2ICR;      LDA #$FF        ;PRESET FOR COUNT DOWN      STA D2T2L      STA D2T2H;      LDX BITNUM      ;GET #OF BITS IN      STX BITCI       ;PUT IN RCVRCNT      RTS.END; RSR  8/02/80 - ROUTINE FOR PANIC; RSR  8/08/80 - PANIC & STOP KEY; RSR  8/12/80 - CHANGE FOR A0INT A SUBROUTINE; RSR  8/19/80 - ADD RS-232 CHECKS; RSR  8/21/80 - MODIFY RS-232; RSR  8/29/80 - CHANGE PANIC ORDER FOR JACK; RSR  8/30/80 - ADD T2; RSR  9/22/80 - ADD 1800 BAUD OPPS!; RSR 12/08/81 - MODIFY FOR VIC-40 SYSTEM; RSR 12/11/81 - CONTINUE MODIFICATIONS (VIC-40); RSR 12/14/81 - MODIFY FOR 6526 TIMER ADJUST; RSR  2/09/82 - FIX ENABLE FOR FLAG NMI; RSR  2/16/82 - REWRITE FOR 6526 PROBLEMS; RSR  3/11/82 - CHANGE NMI RENABLE, FIX RESTORE; RSR  3/29/82 - ENABLES ARE ALWAYS OR'ED WITH $80