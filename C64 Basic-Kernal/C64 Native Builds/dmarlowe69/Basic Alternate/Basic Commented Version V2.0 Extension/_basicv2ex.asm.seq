*=$E000;********************************; COMMODORE 64 KERNAL ($03) ROM ;; (C) 1982 COMMODORE BUSINESS MACHINES;; CONTINUATION OF EXP FUNCTION;********************************;********************************; PAGE ZERO EQUATES;********************************;ADRAY1 = $03;ADRAY2 = $05;CHARAC = $07;ENDCHR = $08;VERCK  = $0A;TANSGN = $12;CHANNL = $13;LINNUM = $14;TEMPPT = $16;LASTPT = $17;INDEX  = $22;TXTTAB = $2B;VARTAB = $2D;FRETOP = $33;MEMSIZ = $37;FORPNT = $49;DEFPNT = $4E;FOUR6  = $53;JMPER  = $54BASWRK = $57FAC1   = $61FACEXP = $61FACHO  = $62FACSGN = $66SGNFLG = $67BITS   = $68FAC2   = $69ARGEXP = $69ARGHO  = $6AARGSGN = $6EARISGN = $6FFACOV  = $70FBUFPT = $71;CHRGET = $73;CHRGOT = $79;TXTPTR = $7A;********************************; PAGE THREE EQUATES;********************************;IERROR = $0300;IMAIN  = $0302;ICRNCH = $0304;IQPLOP = $0306;IGONE  = $0308;IEVAL  = $030A;;SAREG  = $030C;SXREG  = $030D;SYREG  = $030E;SPREG  = $030F;USRPOK = $0310;USRADD = $0311;********************************; BASIC ROM EQUATES;********************************;WWA376 = $A376 ;READY MESSAGE;XXA408 = $A408;XXA437 = $A437;KKA43A = $A43A;XXA474 = $A474;KKA483 = $A483;KKA52A = $A52A;XXA533 = $A533;KKA57C = $A57C;KKA644 = $A644;KKA663 = $A663;KKA677 = $A677;XXA67A = $A67A;XXA68E = $A68E;ZZA71A = $A71A;KKA7E4 = $A7E4;XXAB1E = $AB1E;XXAD8A = $AD8A;XXAD9E = $AD9E;KKAE86 = $AE86;XXAEFD = $AEFD;XXAF08 = $AF08;;ZZB1AA = $B1AA;XXB248 = $B248;XXB391 = $B391;;XXB6A3 = $B6A3;XXB79E = $B79E;XXB7F7 = $B7F7;XXB849 = $B849;XXB850 = $B850;KKB853 = $B853;XXB867 = $B867;XXB8D7 = $B8D7;WWB9BC = $B9BC;XXBA28 = $BA28;KKBAD4 = $BAD4;KKBAB9 = $BAB9;KKBB07 = $BB07;XXBB0F = $BB0F;XXBBA2 = $BBA2;ZZBBC7 = $BBC7;KKBBCA = $BBCA;XXBBD4 = $BBD4;XXBC0C = $BC0C;KKBC0F = $BC0F;XXBC2B = $BC2B;XXBCCC = $BCCC;XXBDCD = $BDCD;XXBFB4 = $BFB4;ZZBFC4 = $BFC4 ;EXP POLYNOMIAL TABLE;********************************; KERNAL ROM EQUATES;********************************XXEA61 = $EA61;********************************; KERNAL ROM EQUATES;********************************MEMTOP = $FF99MEMBOT = $FF9CSETLFS = $FFBASETNAM = $FFBDOPEN   = $FFC0CLOSE  = $FFC3CHKIN  = $FFC6CHKOUT = $FFC9CLRCHN = $FFCCCHRIN  = $FFCFCHROUT = $FFD2LOAD   = $FFD5SAVE   = $FFD8GETIN  = $FFE4READST = $FFB7       ;READ I/O STATUSIOBASE = $FFF3;********************************; CONTINUATION OF EXP FUNCTION;********************************KKE000 STA JMPER+2       JSR KKBC0F       LDA FACEXP       CMP #$88       BCC XXE00EXXE00B JSR KKBAD4XXE00E JSR XXBCCC       LDA CHARAC       CLC        ADC #$81       BEQ XXE00B       SEC        SBC #$01       PHA        LDX #$05XXE01E LDA ARGEXP,X       LDY FACEXP,X       STA FACEXP,X       STY ARGEXP,X       DEX        BPL XXE01E       LDA JMPER+2       STA FACOV       JSR KKB853       JSR XXBFB4;********************************; EXP POLYNOMIAL TABLE;********************************       LDA #<ZZBFC4 ;#$C4       LDY #>ZZBFC4 ;#$BF       JSR XXE059       LDA #$00       STA ARISGN       PLA        JSR KKBAB9       RTS ;********************************; COMPUTE ODD DEGREES FOR SIN AND ATN;********************************XXE043 STA FBUFPT       STY FBUFPT+1       JSR KKBBCA       LDA #$57      ;'W'       JSR XXBA28       JSR XXE05D       LDA #$57      ;'W'       LDY #$00       JMP XXBA28;********************************; COMPUTE POLYNOMIALS ACCORDING TO TABLE INDEXED BY AY;********************************XXE059 STA FBUFPT       STY FBUFPT+1XXE05D JSR ZZBBC7       LDA (FBUFPT),Y       STA SGNFLG       LDY FBUFPT       INY        TYA        BNE XXE06C       INC FBUFPT+1XXE06C STA FBUFPT       LDY FBUFPT+1XXE070 JSR XXBA28       LDA FBUFPT       LDY FBUFPT+1       CLC        ADC #$05       BCC XXE07D       INY XXE07D STA FBUFPT       STY FBUFPT+1       JSR XXB867       LDA #$5C      ;'\'       LDY #$00       DEC SGNFLG       BNE XXE070       RTS ;********************************; FLOAT NUMBERS FOR RND;********************************ZZE08D .BYTE $98,$35,$44,$7A,$00ZZE092 .BYTE $68,$28,$B1,$46,$00;********************************; RND FUNCTION;********************************ZZE097 JSR XXBC2B       BMI XXE0D3       BNE XXE0BE       JSR IOBASE       STX INDEX       STY INDEX+1       LDY #$04       LDA (INDEX),Y       STA FACHO       INY        LDA (INDEX),Y       STA FACHO+2       LDY #$08       LDA (INDEX),Y       STA FACHO+1       INY        LDA (INDEX),Y       STA FACHO+3       JMP XXE0E3;********************************;;********************************XXE0BE LDA #$8B       LDY #$00       JSR XXBBA2;********************************; FLOAT NUMBERS FOR RND;********************************       LDA #<ZZE08D ;#$8D       LDY #>ZZE08D ;#$E0       JSR XXBA28;********************************; FLOAT NUMBERS FOR RND;********************************       LDA #<ZZE092 ;#$92       LDY #>ZZE092 ;#$E0       JSR XXB867;********************************; ;********************************XXE0D3 LDX FACHO+3       LDA FACHO       STA FACHO+3       STX FACHO       LDX FACHO+1       LDA FACHO+2       STA FACHO+1       STX FACHO+2XXE0E3 LDA #$00       STA FACSGN       LDA FACEXP       STA FACOV       LDA #$80       STA FACEXP       JSR XXB8D7       LDX #$8B       LDY #$00XXE0F6 JMP XXBBD4;********************************; HANDLE ERRORS FOR DIRECT I/O; CALLS FROM BASIC;********************************XXE0F9 CMP #$F0       BNE XXE104       STY MEMSIZ+1       STX MEMSIZ       JMP KKA663;********************************;;********************************XXE104 TAX        BNE XXE109       LDX #$1EXXE109 JMP XXA437;********************************;;********************************KKE10C JSR CHROUT       BCS XXE0F9       RTS ;********************************;;********************************KKE112 JSR CHRIN       BCS XXE0F9       RTS ;********************************;;********************************; DIFF; C64 = $E4AD VIC20 = $FFC9KKE118 JSR XXE4AD       BCS XXE0F9       RTS ;********************************;;********************************KKE11E JSR CHKIN       BCS XXE0F9       RTS ;********************************;;********************************KKE124 JSR GETIN       BCS XXE0F9       RTS ;********************************; SYS COMMAND;********************************ZZE12A JSR XXAD8A       JSR XXB7F7       LDA #>KKE147 ;#$E1       PHA        LDA #<KKE147-1 ;#$46      ;'F'       PHA        LDA SPREG       PHA        LDA SAREG       LDX SXREG       LDY SYREG       PLP        JMP (LINNUM);********************************;;********************************KKE147 PHP        STA SAREG       STX SXREG       STY SYREG       PLA        STA SPREG       RTS ;********************************; SAVE COMMAND;********************************ZZE156 JSR XXE1D4       LDX VARTAB       LDY VARTAB+1       LDA #TXTTAB      ;'+'       JSR SAVE       BCS XXE0F9       RTS ;********************************; VERIFY COMMAND;********************************ZZE165  LDA #$01;********************************       .BYTE $2C;********************************; LOAD COMMAND;********************************ZZE168 LDA #$00       STA VERCK       JSR XXE1D4       LDA VERCK       LDX TXTTAB       LDY TXTTAB+1       JSR LOAD       BCS XXE1D1       LDA VERCK; DIFF; C64 = BEQ $17 VIC20 = BEQ $1A       BEQ XXE195       LDX #$1C       JSR READST       AND #$10; C64 = BNE XXE19E VIC20 = BEQ XXE187; C64 = BNE $17 VIC20 = BEQ $03       BNE XXE19E       LDA TXTPTR       CMP #$02       BEQ XXE194       LDA #<WWA364 ;#$64       LDY #>WWA364 ;#$A3       JMP XXAB1E;********************************;;********************************XXE194 RTS ;********************************;;********************************XXE195 JSR READST       AND #$BF       BEQ XXE1A1       LDX #$1DXXE19E JMP XXA437;********************************;;********************************XXE1A1 LDA TXTPTR+1       CMP #$02       BNE XXE1B5       STX VARTAB       STY VARTAB+1       LDA #<WWA376 ;#$76       LDY #>WWA376 ;#$A3       JSR XXAB1E       JMP KKA52A;********************************;;********************************XXE1B5 JSR XXA68E; DIFF; C64 JSR $A533 VIC20 = NOTHING       JSR XXA533; DIFF; C64 = JMP $A677 VIC20 = JMP $E476       JMP KKA677;********************************; OPEN COMMAND;********************************ZZE1BE JSR XXE219       JSR OPEN       BCS XXE1D1       RTS ;********************************; CLOSE COMMAND;********************************ZZE1C7 JSR XXE219       LDA FORPNT       JSR CLOSE; DIFF; C64 = BCC XXE194 VIC20 = BCC XXE194; C64 = BCC $C3    VIC20 = BCC $C6       BCC XXE194XXE1D1 JMP XXE0F9;********************************; SET PARAMETERS FOR LOAD/VERIFY/SAVE;********************************XXE1D4 LDA #$00       JSR SETNAM       LDX #$01       LDY #$00       JSR SETLFS       JSR XXE206       JSR XXE257       JSR XXE206       JSR XXE200       LDY #$00       STX FORPNT       JSR SETLFS       JSR XXE206       JSR XXE200       TXA        TAY        LDX FORPNT       JMP SETLFS;********************************; SKIP COMMA AND GET INTEGER IN X;********************************XXE200 JSR XXE20E       JMP XXB79E;********************************; GET CHARACTER AND CHECK FOR END OF LINE;********************************XXE206 JSR CHRGOT       BNE XXE20D       PLA        PLA XXE20D RTS ;********************************; CHECK FOR COMMA AND SKIP IT;********************************XXE20E JSR XXAEFDXXE211 JSR CHRGOT       BNE XXE20D       JMP XXAF08;********************************; GET OPEN/CLOSE PARAMETERS;********************************XXE219 LDA #$00       JSR SETNAM       JSR XXE211       JSR XXB79E       STX FORPNT       TXA        LDX #$01       LDY #$00       JSR SETLFS       JSR XXE206       JSR XXE200       STX FORPNT+1       LDY #$00       LDA FORPNT       CPX #$03       BCC XXE23F       DEY XXE23F JSR SETLFS       JSR XXE206       JSR XXE200       TXA        TAY        LDX FORPNT+1       LDA FORPNT       JSR SETLFS       JSR XXE206       JSR XXE20EXXE257 JSR XXAD9E       JSR XXB6A3       LDX INDEX       LDY INDEX+1       JMP SETNAM;********************************; COS FUNCTION;********************************KKE264 LDA #<ZZE2E0      ; LOW  E2E0       LDY #>ZZE2E0      ; HIGH E2E0       JSR XXB867;********************************; SIN FUNCTION;********************************XXE26B JSR XXBC0C       LDA #<ZZE2E5      ; LOW  E2E5       LDY #>ZZE2E5      ; HIGH E2E5       LDX ARGSGN       JSR KKBB07       JSR XXBC0C       JSR XXBCCC       LDA #$00       STA ARISGN       JSR KKB853       LDA #<ZZE2EA      ; LOW  E2EA       LDY #>ZZE2EA      ; HIGH E2EA       JSR XXB850       LDA FACSGN       PHA        BPL XXE29D       JSR XXB849       LDA FACSGN       BMI XXE2A0       LDA TANSGN       EOR #$FF       STA TANSGNXXE29D JSR XXBFB4XXE2A0 LDA #<ZZE2EA      ; LOW  E2EA       LDY #>ZZE2EA      ; HIGH E2EA       JSR XXB867       PLA        BPL XXE2AD       JSR XXBFB4XXE2AD LDA #<ZZE2EF ;#$EF       LDY #>ZZE2EF ;#$E2       JMP XXE043;********************************; TAN FUNCTION;********************************ZZE2B4 JSR KKBBCA       LDA #$00       STA TANSGN       JSR XXE26B       LDX #<DEFPNT ;#$4E      ; LOW  004E       LDY #>DEFPNT ;#$00      ; HIGH 004E       JSR XXE0F6       LDA #<BASWRK ;#$57      ; LOW  0057       LDY #>BASWRK ;#$00      ; HIGH 0057       JSR XXBBA2       LDA #$00       STA FACSGN       LDA TANSGN       JSR XXE2DC       LDA #<DEFPNT ;#$4E      ; LOW  004E       LDY #>DEFPNT ;#$00      ; HIGH 004E       JMP XXBB0F;********************************;;********************************XXE2DC PHA        JMP XXE29D;********************************; FLOAT NUMBERS FOR SIN, COS AND TAN;********************************; 0.5 * PIZZE2E0 .BYTE $81,$49,$0F,$DA,$A2; 2 * PIZZE2E5 .BYTE $83,$49,$0F,$DA,$A2; 0.25 * PIZZE2EA .BYTE $7F,$00,$00,$00,$00;********************************; POLYNOMIAL TABLE;********************************ZZE2EF .BYTE $05  ; DEGREE 6       .BYTE $84,$E6,$1A,$2D,$1B       .BYTE $86,$28,$07,$FB,$F8       .BYTE $87,$99,$68,$89,$01       .BYTE $87,$23,$35,$DF,$E1       .BYTE $86,$A5,$5D,$E7,$28       .BYTE $83,$49,$0F,$DA,$A2;********************************; ATN FUNCTION;********************************KKE30E LDA FACSGN       PHA        BPL XXE316       JSR XXBFB4XXE316 LDA FACEXP       PHA        CMP #$81       BCC XXE324       LDA #<WWB9BC ;#$BC      ; LOW  B9BC       LDY #>WWB9BC ;#$B9      ; HIGH B9BC       JSR XXBB0FXXE324 LDA #<ZZE33E      ; LOW  E33E       LDY #>ZZE33E      ; HIGH E33E       JSR XXE043       PLA        CMP #$81       BCC XXE337       LDA #<ZZE2E0      ; LOW  E2E0       LDY #>ZZE2E0      ; HIGH E2E0       JSR XXB850XXE337 PLA        BPL XXE33D       JMP XXBFB4;********************************;;********************************XXE33D RTS ;********************************; FLOAT NUMBERS FOR ATN; POLYNOMIAL TABLE;********************************ZZE33E .BYTE $0B   ; DEGREE 12       .BYTE $76,$B3,$83,$BD,$D3       .BYTE $79,$1E,$F4,$A6,$F5       .BYTE $7B,$83,$FC,$B0,$10       .BYTE $7C,$0C,$1F,$67,$CA       .BYTE $7C,$DE,$53,$CB,$C1       .BYTE $7D,$14,$64,$70,$4C       .BYTE $7D,$B7,$EA,$51,$7A       .BYTE $7D,$63,$30,$88,$7E       .BYTE $7E,$92,$44,$99,$3A       .BYTE $7E,$4C,$CC,$91,$C7       .BYTE $7F,$AA,$AA,$AA,$13       .BYTE $81,$00,$00,$00,$00;********************************; WARM START ENTRY;********************************; DIFF; MANY DIFFERENCES FROM HERE ON ;BASWRM = *KKE37B JSR CLRCHN       LDA #$00       STA CHANNL       JSR XXA67A       CLI XXE386 LDX #$80       JMP (IERROR)   ; NORMALLY E38B;********************************; HANDLE ERROR MESSAGES;********************************XXE38B TXA        BMI XXE391       JMP KKA43A;********************************XXE391 JMP XXA474;********************************; RESET ROUTINE;********************************;BASCLD = *ZZE394 JSR XXE453       JSR XXE3BF       JSR XXE422       LDX #$FB       TXS        BNE XXE386;********************************; CHARACTER FETCH CODE FOR ZERO PAGE $0073-$008F;********************************XXE3A2 INC TXTPTR       BNE XXE3A8       INC TXTPTR+1XXE3A8 LDA XXEA61-1       CMP #$3A      ; COLON ;':'       BCS XXE3B9       CMP #$20      ; SPACE ' '       BEQ XXE3A2       SEC        SBC #$30      ; '0'       SEC        SBC #$D0XXE3B9 RTS ;********************************; FIRST RND SEED VALUE;********************************WWE3BA .BYTE $80,$4F,$C7,$52,$58;********************************; INITIALISATION OF BASIC;********************************XXE3BF LDA #$4C      ;'L'       STA JMPER       STA USRPOK       LDA #<XXB248 ;#$48      ; LOW  B248       LDY #>XXB248 ;#$B2      ; HIGH B248       STA USRADD       STY USRADD+1       LDA #<XXB391 ;#$91      ; LOW B391       LDY #>XXB391 ;#$B3      ; HIGH B391       STA ADRAY2       STY ADRAY2+1       LDA #<ZZB1AA ;#$AA      ; LOW  B1AA       LDY #>ZZB1AA ;#$B1      ; HIGH B1AA       STA ADRAY1       STY ADRAY1+1       LDX #$1CXXE3E2 LDA XXE3A2,X       STA CHRGET,X       DEX        BPL XXE3E2       LDA #$03       STA FOUR6       LDA #$00       STA BITS       STA CHANNL       STA LASTPT+1       LDX #$01       STX $01FD       STX $01FC       LDX #$19       STX TEMPPT       SEC        JSR MEMBOT       STX TXTTAB       STY TXTTAB+1       SEC        JSR MEMTOP       STX MEMSIZ       STY MEMSIZ+1       STX FRETOP       STY FRETOP+1       LDY #$00       TYA        STA (TXTTAB),Y       INC TXTTAB       BNE XXE421       INC TXTTAB+1XXE421 RTS ;********************************; PRINT BASIC START UP MESSAGES;********************************XXE422 LDA TXTTAB       LDY TXTTAB+1       JSR XXA408       LDA #<ZZE473   ; LOW  E473       LDY #>ZZE473   ; HIGH E473       JSR XXAB1E       LDA MEMSIZ       SEC        SBC TXTTAB       TAX        LDA MEMSIZ+1       SBC TXTTAB+1       JSR XXBDCD       LDA #<ZZE460   ; LOW  E460       LDY #>ZZE460   ; HIGH E460       JSR XXAB1E       JMP KKA644;********************************; VECTORS FOR $0300-$030B;********************************XXE447 .WORD XXE38B ;$E38B       .WORD KKA483 ;$A483       .WORD KKA57C ;$A57C       .WORD ZZA71A ;$A71A       .WORD KKA7E4 ;$A7E4       .WORD KKAE86 ;$AE86;********************************; INITIALIZE VECTORS;********************************XXE453 LDX #$0BXXE455 LDA XXE447,X       STA IERROR,X       DEX        BPL XXE455       RTS ;********************************; STARTUP MESSAGES;********************************ZZE45F .BYTE $00ZZE460 .BYTE ' BASIC BYTES FREE'       .BYTE $0D       .BYTE $00ZZE473 .BYTE $93       .BYTE $0D       .BYTE '    **** COMMODORE 64 BASIC V2 ****'       .BYTE $0D       .BYTE $0D       .BYTE ' 64K RAM SYSTEM  '       .BYTE $00ZZE4AC .BYTE $81;********************************; SET OUTPUT DEVICE;********************************XXE4AD PHA        JSR CHKOUT       TAX        PLA        BCC XXE4B6       TXA XXE4B6 RTS ;********************************; UNUSED;********************************       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA;********************************; RS-232 EQUATES;********************************RINONE = $A9RIPRTY = $AB;********************************; RS-232;********************************XXE4D3 STA RINONE       LDA #$01       STA RIPRTY       RTS ;********************************.END