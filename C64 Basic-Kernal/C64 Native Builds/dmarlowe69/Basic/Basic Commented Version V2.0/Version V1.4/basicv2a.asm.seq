*=$A000;********************************; PAGE ZERO EQUATES;********************************LINNUM = $14TEMPPT = $16LASTPT = $17TEMPST = $19 ;NOT USED IN BASIC ROMINDEX  = $22RESHO  = $26TXTTAB = $2BVARTAB = $2DARYTAB = $2FSTREND = $31FRETOP = $33FRESPC = $35MEMSIZ = $37CURLIN = $39OLDLIN = $3BOLDTXT = $3DDATLIN = $3FDATPRT = $41JMPER  = $54CHRGET = $73CHRGOT = $79POINTB = $7C;********************************; PAGE ONE EQUATES;********************************STACK = $0100 ; PROCESSOR STACK;********************************; PAGE TWO EQUATES;********************************BUF    = $0200LAT    = $0259FAT    = $0263SAT    = $026DKEYD   = $0277MEMSTR = $0281MEMSI2 = $0282TIMOUT = $0285COLOR  = $0286GDCOL  = $0287HIBASE = $0288XMAX   = $0289LSTSHF = $028EKEYLOG = $028FMODE   = $0291AUTODN = $0292;********************************; RS-232 EQUATES;********************************M51CTR = $0293M51CDR = $0294M51AJB = $0295RSSTAT = $0297BITNUM = $0298BAUDOF = $0299RIDBE  = $029BRIDBS  = $029CRODBS  = $029DRODBE  = $029EIRQTMP = $029FENABL  = $02A1CIA1CA = $02A2CIA1IR = $02A3CIA1CB = $02A4NEXSRO = $02A5PALNTS = $02A6;********************************; PAGE THREE EQUATES;********************************IERROR = $0300IMAIN  = $0302ICRNCH = $0304IQPLOP = $0306IGONE  = $0308IEVAL  = $030A;********************************; SYS - USR EQUATES;********************************SAREG  = $030CSXREG  = $030DSYREG  = $030ESPREG  = $030FUSRPOK = $0310USRADD = $0311;********************************; ;********************************CBINV = $0316NMINV = $0318;********************************; KERNAL INDIRECT VECTORS ;********************************IOPNE  = $031AICLOSE = $031CICHKIN = $031EICKOUT = $0320ICLRCH = $0322IBASIN = $0324IBSOUT = $0326ISTOP  = $0328IGETIN = $032AICLALL = $032CUSRCMD = $03EEILOAD  = $0330ISAVE  = $0332;********************************; CASSETTE I/O BUFFER $033C-$03FB ;********************************TBUFER = $033C;********************************; PAGE FOUR EQUATES;********************************VICSCN = $0400;********************************; PAGE FIVE EQUATES;********************************;********************************; PAGE SIX EQUATES;********************************;********************************; PAGE SEVEN EQUATES;********************************;********************************; PAGE EIGHT EQUATES;********************************;********************************; BASIC-KERNAL ROM EQUATES;********************************POLY1  = $E043 ; COMPUTE ODD DEGREES FOR SIN AND ATNKKE112 = $E112 ; CHRINKKE118 = $E118 ; SET OUTPUT DEVICEKKE11E = $E11E ; CHKINKKE124 = $E124 ; GETIN;KKE12A = $E12A ; SYSKKE156 = $E156 ; SAVEKKE165 = $E165 ; VERIFYKKE168 = $E168 ; LOADKKE1BE = $E1BE ; OPENKKE1C7 = $E1C7 ; CLOSE;********************************; KERNAL ROM EQUATES - VECTOR TABLE;********************************SETMSG = $FF90READST = $FFB7CLRCHN = $FFCCRDTIM  = $FFDESTOP   = $FFE1 ; TEST STOP KEYCLALL  = $FFE7 ; CLOSE ALL FILESPLOT   = $FFF0;********************************; KERNAL ROM EQUATES;********************************KERNAL = $E000 ; START OF KERNAL ROMBASCLD = $E394 ; BASIC COLD START ENTRY POINTBASWRM = $E37B ; BASIC WARM START ENTRY POINT;********************************;*** START OF THE BASIC ROM;********************************ZZA000 .WORD BASCLD   ; BASIC COLD START ENTRY POINTZZA002 .WORD BASWRM   ; BASIC WARM START ENTRY POINT;********************************; CBMBASIC;********************************ZZA004 .BYTE 'CBMBASIC';********************************; ADDRESS TABLE FOR COMMANDS; (ADDRESS MINUS 1 USED);********************************ZZA00C .WORD ZZA831-1 ;$A830   ; ENDAAA00E .WORD ZZA742-1 ;$A741   ; FOR       .WORD ZZAD1E-1 ;$AD1D   ; NEXT       .WORD XXA8F8-1 ;$A8F7   ; DATA       .WORD ZZABA5-1 ;$ABA4   ; INPUT#       .WORD ZZABBF-1 ;$ABBE   ; INPUT       .WORD ZZB081-1 ;$B080   ; DIM       .WORD ZZAC06-1 ;$AC05   ; READ       .WORD XXA9A5-1 ;$A9A4   ; LET       .WORD XXA8A0-1 ;$A89F   ; GOTO       .WORD ZZA871-1 ;$A870   ; RUN       .WORD ZZA928-1 ;$A927   ; IF       .WORD XXA81D-1 ;$A81C   ; RESTORE       .WORD ZZA883-1 ;$A882   ; GOSUB       .WORD ZZA8D2-1 ;$A8D1   ; RETURN       .WORD ZZA93B-1 ;$A93A   ; REM       .WORD ZZA82F-1 ;$A82E   ; STOP       .WORD ZZA94B-1 ;$A94A   ; ON       .WORD ZZB82D-1 ;$B82C   ; WAIT       .WORD KKE168-1 ;$E167   ; LOAD       .WORD KKE156-1 ;$E155   ; SAVE       .WORD KKE165-1 ;$E164   ; VERIFY       .WORD ZZB3B3-1 ;$B3B2   ; DEF       .WORD ZZB824-1 ;$B823   ; POKE       .WORD ZZAA80-1 ;$AA7F   ; PRINT#       .WORD XXAAA0-1 ;$AA9F   ; PRINT       .WORD ZZA857-1 ;$A856   ; CONT       .WORD ZZA69C-1 ;$A69B   ; LIST       .WORD ZZA65E-1 ;$A65D   ; CLR       .WORD XXAA86-1 ;$AA85   ; CMD       .WORD KKE12A-1 ;$E129   ; SYS       .WORD KKE1BE-1 ;$E1BD   ; OPEN       .WORD KKE1C7-1 ;$E1C6   ; CLOSE       .WORD XXAB7B-1 ;$AB7A   ; GET       .WORD ZZA642-1 ;$A641   ; NEW;; ADDRESS TABLE FOR FUNCTIONS;ZZA052 .WORD $BC39   ; SGN       .WORD $BCCC   ; INT       .WORD $BC58   ; ABS       .WORD USRPOK  ; USR       .WORD $B37D   ; FRE       .WORD $B39E   ; POS       .WORD $BF71   ; SQR       .WORD $E097   ; RND       .WORD $B9EA   ; LOG       .WORD $BFED   ; EXP       .WORD $E264   ; COS       .WORD $E26B   ; SIN       .WORD $E2B4   ; TAN       .WORD $E30E   ; ATN       .WORD $B80D   ; PEEK       .WORD $B77C   ; LEN       .WORD $B465   ; STR$       .WORD $B7AD   ; VAL       .WORD $B78B   ; ASC       .WORD $B6EC   ; CHR$       .WORD $B700   ; LEFT$       .WORD $B72C   ; RIGHT$       .WORD $B737   ; MID$;********************************; PRIORITY AND ADDRESS TABLE; FOR OPERATORS; (ADDRESS MINUS 1 USED);;*** PRECEDENCE BYTE AND ACTION ADDRESSES; FOR OPERATORS; LIKE THE PRIMARY COMMANDS THESE ARE CALLED; BY PUSHING THE ADDRESS ONTO THE STACK; AND DOING AN RTS, SO AGAIN THE ; ACTUAL ADDRESS -1 NEEDS TO BE PUSHED;********************************XXA080 .BYTE $79XXA081 .WORD XXB86A-1 ;$B869   ; PLUS       .BYTE $79       .WORD KKB853-1 ;$B852   ; MINUS       .BYTE $7B       .WORD ZZBA2B-1 ;$BA2A   ; MULTIPLY       .BYTE $7B       .WORD XXBB12-1 ;$BB11   ; DIVIDE       .BYTE $7F       .WORD ZZBF7B-1 ;$BF7A   ; POWER       .BYTE $50       .WORD ZZAFE9-1 ;$AFE8   ; AND       .BYTE $46       .WORD ZZAFE6-1 ;$AFE5   ; OR       .BYTE $7D       .WORD XXBFB4-1 ;$BFB3   ; NEGATIVE       .BYTE $5A       .WORD ZZAED4-1 ;$AED3   ; NOT       .BYTE $64WWA09C .WORD ZZB016-1 ;$B015   ; GREATER / EQUAL / LESS;********************************; TABLE OF COMMANDS; EACH ENDED WITH A +$80;; *** BASIC KEYWORDS; EACH WORD HAS B7 SET IN IT'S LAST CHARACTER; AS AN END MARKER, EVEN THE ONE CHARACTER; KEYWORDS SUCH AS "<" OR "="; FIRST ARE THE PRIMARY COMMAND KEYWORDS,; ONLY THESE CAN START A STATEMENT;;********************************XXA09E .BYTE $45,$4E,$C4                 ; END       .BYTE $46,$4F,$D2                 ; FOR       .BYTE $4E,$45,$58,$D4             ; NEXT       .BYTE $44,$41,$54,$C1             ; DATA       .BYTE $49,$4E,$50,$55,$54,$A3     ; INPUT#       .BYTE $49,$4E,$50,$55,$D4         ; INPUT       .BYTE $44,$49,$CD                 ; DIM       .BYTE $52,$45,$41,$C4             ; READ       .BYTE $4C,$45,$D4                 ; LET       .BYTE $47,$4F,$54,$CF             ; GOTO       .BYTE $52,$55,$CE                 ; RUN       .BYTE $49,$C6                     ; IF       .BYTE $52,$45,$53,$54,$4F,$52,$C5 ; RESTORE       .BYTE $47,$4F,$53,$55,$C2         ; GOSUB       .BYTE $52,$45,$54,$55,$52,$CE     ; RETURN       .BYTE $52,$45,$CD                 ; REM       .BYTE $53,$54,$4F,$D0             ; STOP       .BYTE $4F,$CE                     ; ON       .BYTE $57,$41,$49,$D4             ; WAIT       .BYTE $4C,$4F,$41,$C4             ; LOAD       .BYTE $53,$41,$56,$C5             ; SAVE       .BYTE $56,$45,$52,$49,$46,$D9     ; VERIFY       .BYTE $44,$45,$C6                 ; DEF       .BYTE $50,$4F,$4B,$C5             ; POKE       .BYTE $50,$52,$49,$4E,$54,$A3     ; PRINT#       .BYTE $50,$52,$49,$4E,$D4         ; PRINT       .BYTE $43,$4F,$4E,$D4             ; CONT       .BYTE $4C,$49,$53,$D4             ; LIST       .BYTE $43,$4C,$D2                 ; CLR       .BYTE $43,$4D,$C4                 ; CMD       .BYTE $53,$59,$D3                 ; SYS       .BYTE $4F,$50,$45,$CE             ; OPEN       .BYTE $43,$4C,$4F,$53,$C5         ; CLOSE       .BYTE $47,$45,$D4                 ; GET       .BYTE $4E,$45,$D7                 ; NEW;********************************; TABLE OF FUNCTIONS; EACH ENDED WITH A +$80;********************************ZZA129 .BYTE $54,$41,$42,$A8         ; TAB(       .BYTE $54,$CF                 ; TO       .BYTE $46,$CE                 ; FN       .BYTE $53,$50,$43,$A8         ; SPC(       .BYTE $54,$48,$45,$CE         ; THEN       .BYTE $4E,$4F,$D4             ; NOT       .BYTE $53,$54,$45,$D0         ; STEP       .BYTE $AB                     ; PLUS       .BYTE $AD                     ; MINUS       .BYTE $AA                     ; MULTIPLY       .BYTE $AF                     ; DIVIDE       .BYTE $DE                     ; POWER       .BYTE $41,$4E,$C4             ; AND       .BYTE $4F,$D2                 ; ON       .BYTE $BE                     ; GREATER       .BYTE $BD                     ; EQUAL       .BYTE $BC                     ; LESS       .BYTE $53,$47,$CE             ; SGN       .BYTE $49,$4E,$D4             ; INT       .BYTE $41,$42,$D3             ; ABS       .BYTE $55,$53,$D2             ; USR       .BYTE $46,$52,$C5             ; FRE       .BYTE $50,$4F,$D3             ; POS       .BYTE $53,$51,$D2             ; SQR       .BYTE $52,$4E,$C4             ; RND       .BYTE $4C,$4F,$C7             ; LOG       .BYTE $45,$58,$D0             ; EXP       .BYTE $43,$4F,$D3             ; COS       .BYTE $53,$49,$CE             ; SIN       .BYTE $54,$41,$CE             ; TAN       .BYTE $41,$54,$CE             ; ATN       .BYTE $50,$45,$45,$CB         ; PEEK       .BYTE $4C,$45,$CE             ; LEN       .BYTE $53,$54,$52,$A4         ; STR$       .BYTE $56,$41,$CC             ; VAL       .BYTE $41,$53,$C3             ; ASC       .BYTE $43,$48,$52,$A4         ; CHR$       .BYTE $4C,$45,$46,$54,$A4     ; LEFT$       .BYTE $52,$49,$47,$48,$54,$A4 ; RIGHT$       .BYTE $4D,$49,$44,$A4         ; MID$;********************************; OTHER COMMANDS;********************************       .BYTE $47,$CF                 ; GO       .BYTE $00;********************************; TABLE OF ERRORS MESSAGES; EACH ENDED WITH A +$80;********************************; TOO MANY FILESXXA19E .BYTE 'TOO MANY FILE'       .BYTE $D3; FILE OPENXXA1AC .BYTE 'FILE OPE'       .BYTE $CE; FILE NOT OPENXXA1B5 .BYTE 'FILE NOT OPE'       .BYTE $CE; FILE NOT FOUNDXXA1C2 .BYTE 'FILE NOT FOUN'       .BYTE $C4; DEVICE NOT PRESENTXXA1D0 .BYTE 'DEVICE NOT PRESEN'       .BYTE $D4; NOT INPUT FILEXXA1E2 .BYTE 'NOT INPUT FIL'       .BYTE $C5; NOT OUTPUT FILEXXA1F0 .BYTE 'NOT OUTPUT FIL'       .BYTE $C5; MISSISNG FILE NAMEXXA1FF .BYTE 'MISSING FILE NAM'       .BYTE $C5; ILLEGAL DEVICE NUMBERXXA210 .BYTE 'ILLEGAL DEVICE NUMBE'       .BYTE $D2; NEXT WITHOUT FORXXA225 .BYTE 'NEXT WITHOUT FO'       .BYTE $D2; SYNTAXXXA235 .BYTE 'SYNTA'       .BYTE $D8; RETURN WITHOUT GOSUBXXA23B .BYTE 'RETURN WITHOUT GOSU'       .BYTE $C2; OUT OF DATAXXA24F .BYTE 'OUT OF DAT'       .BYTE $C1; ILLEGAL QUANTITYXXA25A .BYTE 'ILLEGAL QUANTIT'       .BYTE $D9; OVERFLOWXXA26A .BYTE 'OVERFLO'       .BYTE $D7; OUT OF MEMORYXXA272 .BYTE 'OUT OF MEMOR'       .BYTE $D9; UNDEF'D STATEMENTXXA27F .BYTE 'UNDEF''D STATEMEN'       .BYTE $D4; BAD SUBSCRIPTXXA290 .BYTE 'BAD SUBSCRIP'       .BYTE $D4; REDIM'D ARRAYXXA29D .BYTE 'REDIM''D ARRA'       .BYTE $D9; DIVISION BY ZEROXXA2AA .BYTE 'DIVISION BY ZER'       .BYTE $CF; ILLEGAL DIRECTXXA2BA .BYTE 'ILLEGAL DIREC'       .BYTE $D4; TYPE MISMATCHXXA2C8 .BYTE 'TYPE MISMATC'       .BYTE $C8; STRING TO LONGXXA2D5 .BYTE 'STRING TOO LON'       .BYTE $C7; FILE DATAXXA2E4 .BYTE 'FILE DAT'       .BYTE $C1; FORMULA TOO COMPLEXXXA2ED .BYTE 'FORMULA TOO COMPLE'       .BYTE $D8; CAN'T CONTINUEXXA300 .BYTE 'CAN''T CONTINU'       .BYTE $C5; UNDEF'D FUNCTIONXXA30E .BYTE 'UNDEF''D FUNCTIO'       .BYTE $CE; VERIFYXXA31E .BYTE 'VERIF'       .BYTE $D9; LOADXXA324 .BYTE 'LOA'XXA327 .BYTE $C4;********************************; ERROR MESSAGE ADDRESS LOCATIONS;********************************WWA328 .WORD XXA19E   ; 01 TOO MANY FILES       .WORD XXA1AC   ; 02 FILE OPEN       .WORD XXA1B5   ; 03 FILE NOT OPEN       .WORD XXA1C2   ; 04 FILE NOT FOUND       .WORD XXA1D0   ; 05 DEVICE NOT PRESENT       .WORD XXA1E2   ; 06 NOT INPUT FILE       .WORD XXA1F0   ; 07 NOT OUTPUT FILE       .WORD XXA1FF   ; 08 MISSING FILE NAME       .WORD XXA210   ; 09 ILLEGAL DEVICE NUMBER       .WORD XXA225   ; 0A NEXT WITHOUT FOR       .WORD XXA235   ; 0B SYNTAX       .WORD XXA23B   ; 0C RETURN WITHOUT GOSUB       .WORD XXA24F   ; 0D OUT OF DATA       .WORD XXA25A   ; 0E ILLEGAL QUANTITY       .WORD XXA26A   ; 0F OVERFLOW       .WORD XXA272   ; 10 OUT OF MEMORY       .WORD XXA27F   ; 11 UNDEF'D STATMENT       .WORD XXA290   ; 12 BAD SUBSCRIPT       .WORD XXA29D   ; 13 REDIM'D ARRAY       .WORD XXA2AA   ; 14 DEVISION BY ZERO       .WORD XXA2BA   ; 15 ILLEGAL DIRECT       .WORD XXA2C8   ; 16 TYPE MISMATCH       .WORD XXA2D5   ; 17 STRING TOO LONG       .WORD XXA2E4   ; 18 FILE DATA       .WORD XXA2ED   ; 19 FORMULA TOO COMPLEX       .WORD XXA300   ; 1A CAN'T CONTINUE       .WORD XXA30E   ; 1B UNDEF'D FUNCTION       .WORD XXA31E   ; 1C VERIFY       .WORD XXA324   ; 1D LOAD       .WORD XXA383   ; 1E BREAK;********************************; OTHER MESSAGES;********************************; OKWWA364 .BYTE $0D       .BYTE 'OK'       .BYTE $0D       .BYTE $00; ERRORWWA369 .BYTE '  ERROR'       .BYTE $00; INWWA371 .BYTE ' IN '       .BYTE $00; READY.WWA376 .BYTE $0D       .BYTE $0A       .BYTE 'READY.'       .BYTE $0D       .BYTE $0A       .BYTE $00; BREAKWWA381 .BYTE $0D       .BYTE $0AXXA383 .BYTE 'BREAK'       .BYTE $00       .BYTE $A0;********************************; SEARCH FOR "FOR" BLOCKS ON STACK;; *** SEARCH THE STACK FOR FOR OR GOSUB ACTIVITY; RETURN ZB=1 IF FOR VARIABLE FOUND;********************************XXA38A TSX ;COPY STACK POINTER       INX ;+1 PASS RETURN ADDRESS       INX ;+2 PASS RETURN ADDRESS       INX ;+3 PASS CALLING ROUTINE RETURN ADDRESS       INX ;+4 PASS CALLING ROUTINE RETURN ADDRESSXXA38F LDA STACK+1,X GET THE TOKEN BYTE FROM THE STACK       CMP #$81    ; FOR BLOCK CODE - IS IT THE FOR TOKEN       BNE XXA3B7  ; IF NOT FOR TOKEN JUST EXIT                   ;IT WAS THE FOR TOKEN       LDA $4A     ;GET FOR/NEXT VARIABLE POINTER HIGH BYTE       BNE XXA3A4  ;BRANCH IF NOT NULL       LDA STACK+2,X ;GET FOR VARIABLE POINTER LOW BYTE       STA $49     ;SAVE FOR/NEXT VARIABLE POINTER LOW BYTE       LDA STACK+3,X ;GET FOR VARIABLE POINTER HIGH BYTE       STA $4A     ;SAVE FOR/NEXT VARIABLE POINTER HIGH BYTEXXA3A4 CMP STACK+3,X ;COMPARE VARIABLE POINTER WITH STACKED VARIABLE POINTER                   ;HIGH BYTE       BNE XXA3B0  ;BRANCH IF NO MATCH       LDA $49     ;GET FOR/NEXT VARIABLE POINTER LOW BYTE       CMP STACK+2,X ;COMPARE VARIABLE POINTER WITH STACKED VARIABLE POINTER                   ;LOW BYTE       BEQ XXA3B7  ;EXIT IF MATCH FOUNDXXA3B0 TXA         ;COPY INDEX       CLC         ;CLEAR CARRY FOR ADD       ADC #$12    ;ADD FOR STACK USE SIZE       TAX         ;COPY BACK TO INDEX       BNE XXA38F  ;LOOP IF NOT AT START OF STACKXXA3B7 RTS         ;DONE WITH IT;********************************; MOVE BYTES AFTER CHECK FOR SPACE;********************************XXA3B8 JSR XXA408       STA STREND       STY STREND+1;********************************; MOVE BYTES ROUTINE;  $5F/$60 SOURCE START ADDRESS;  $5A/$5B SOURCE END ADDRESS;  $58/$59 DESTINATION END ADDRESS;********************************XXA3BF SEC        LDA $5A       SBC $5F       STA INDEX       TAY        LDA $5B       SBC $60       TAX        INX        TYA        BEQ XXA3F3       LDA $5A       SEC        SBC INDEX       STA $5A       BCS XXA3DC       DEC $5B       SEC XXA3DC LDA $58       SBC INDEX       STA $58       BCS XXA3EC       DEC $59       BCC XXA3ECXXA3E8 LDA ($5A),Y       STA ($58),YXXA3EC DEY        BNE XXA3E8       LDA ($5A),Y       STA ($58),YXXA3F3 DEC $5B       DEC $59       DEX        BNE XXA3EC       RTS ;********************************; TEST FOR 2 * A BYTES FREE ON STACK;********************************XXA3FB ASL A       ADC #$3E      ;'>'       BCS XXA435       STA INDEX       TSX        CPX INDEX       BCC XXA435       RTS ;********************************; ARRAY AREA OVERFLOW CHECK;********************************XXA408 CPY FRETOP+1       BCC XXA434       BNE XXA412       CMP FRETOP       BCC XXA434XXA412 PHA        LDX #$09       TYA XXA416 PHA        LDA $57,X       DEX        BPL XXA416       JSR XXB526       LDX #$F7XXA421 PLA        STA $61,X       INX        BMI XXA421       PLA        TAY        PLA        CPY FRETOP+1       BCC XXA434       BNE XXA435       CMP FRETOP       BCS XXA435XXA434 RTS ;********************************; OUT OF MEMORY ERROR;********************************XXA435 LDX #$10   ; ERROR NUMBER;********************************; HANDLE ERROR MESSAGES;********************************XXA437 JMP (IERROR)   ; NORMALLY A43A;********************************; STANDARD ERROR MESSAGE HANDLER;********************************KKA43A TXA        ASL A       TAX        LDA XXA327-1,X       STA INDEX       LDA XXA327,X       STA INDEX+1       JSR CLRCHN       LDA #$00       STA $13       JSR XXAAD7       JSR XXAB45       LDY #$00XXA456 LDA (INDEX),Y       PHA        AND #$7F       JSR XXAB47       INY        PLA        BPL XXA456       JSR XXA67A       LDA #<WWA369 ;#$69   ; LOW  A369       LDY #>WWA369 ;#$A3   ; HIGH A369XXA469 JSR XXAB1E       LDY CURLIN+1       INY        BEQ XXA474       JSR XXBDC2XXA474 LDA #<WWA376 ;#$76   ; LOW A376       LDY #>WWA376 ;#$A3   ; HIGH A376       JSR XXAB1E       LDA #$80       JSR SETMSGXXA480 JMP (IMAIN)   ; NORMALLY A483;################################;********************************;; STANDARD WARM START ROUTINE;;********************************;################################KKA483 JSR XXA560       STX $7A       STY $7B       JSR CHRGET       TAX        BEQ XXA480       LDX #$FF       STX CURLIN+1       BCC XXA49C       JSR XXA579       JMP XXA7E1;********************************; HANDLE INSERT/DELETE BASIC LINES;********************************XXA49C JSR XXA96B       JSR XXA579       STY $0B       JSR XXA613       BCC XXA4ED;********************************; DELETE OLD LINE;********************************       LDY #$01       LDA ($5F),Y       STA INDEX+1       LDA VARTAB       STA INDEX       LDA $60       STA INDEX+3       LDA $5F       DEY        SBC ($5F),Y       CLC        ADC VARTAB       STA VARTAB       STA INDEX+2       LDA VARTAB+1       ADC #$FF       STA VARTAB+1       SBC $60       TAX        SEC        LDA $5F       SBC VARTAB       TAY        BCS XXA4D7       INX        DEC INDEX+3XXA4D7 CLC        ADC INDEX       BCC XXA4DF       DEC INDEX+1       CLC XXA4DF LDA (INDEX),Y       STA (INDEX+2),Y       INY        BNE XXA4DF       INC INDEX+1       INC INDEX+3       DEX        BNE XXA4DF;********************************; INSERT NEW LINE;********************************XXA4ED JSR XXA659       JSR XXA533       LDA BUF       BEQ XXA480       CLC        LDA VARTAB       STA $5A       ADC $0B       STA $58       LDY VARTAB+1       STY $5B       BCC XXA508       INY XXA508 STY $59       JSR XXA3B8       LDA LINNUM       LDY LINNUM+1       STA $01FE       STY $01FF       LDA STREND       LDY STREND+1       STA VARTAB       STY VARTAB+1       LDY $0B       DEY XXA522 LDA $01FC,Y       STA ($5F),Y       DEY        BPL XXA522KKA52A JSR XXA659       JSR XXA533       JMP XXA480;********************************; RELINK BASIC PROGRAM;********************************XXA533 LDA TXTTAB       LDY TXTTAB+1       STA INDEX       STY INDEX+1       CLC XXA53C LDY #$01       LDA (INDEX),Y       BEQ XXA55F       LDY #$04XXA544 INY        LDA (INDEX),Y       BNE XXA544       INY        TYA        ADC INDEX       TAX        LDY #$00       STA (INDEX),Y       LDA INDEX+1       ADC #$00       INY        STA (INDEX),Y       STX INDEX       STA INDEX+1       BCC XXA53CXXA55F RTS ;********************************; GET STATEMENT INTO BUFFER;********************************XXA560 LDX #$00XXA562 JSR KKE112       CMP #$0D       BEQ XXA576       STA BUF,X       INX        CPX #$59      ;'Y'       BCC XXA562       LDX #$17   ; ERROR NUMBER       JMP XXA437;********************************XXA576 JMP XXAACA   ; GOTO END OF LINE;********************************; CRUNCH TOKENS;********************************XXA579 JMP (ICRNCH)   ; NORMALLY A57C;********************************; STANDARD TOKEN CRUNCHER;********************************KKA57C LDX $7A       LDY #$04       STY $0FXXA582 LDA BUF,X       BPL XXA58E       CMP #$FF   ; PI       BEQ XXA5C9       INX        BNE XXA582XXA58E CMP #$20      ;' '       BEQ XXA5C9       STA $08       CMP #$22      ;'"'       BEQ XXA5EE       BIT $0F       BVS XXA5C9       CMP #$3F      ;'?'       BNE XXA5A4       LDA #$99      ; PRINT CODE       BNE XXA5C9XXA5A4 CMP #$30      ;'0'       BCC XXA5AC       CMP #$3C      ;'<'       BCC XXA5C9XXA5AC STY $71       LDY #$00       STY $0B       DEY        STX $7A       DEX XXA5B6 INY        INX XXA5B8 LDA BUF,X       SEC        SBC XXA09E,Y       BEQ XXA5B6       CMP #$80       BNE XXA5F5       ORA $0BXXA5C7 LDY $71XXA5C9 INX        INY        STA $01FB,Y       LDA $01FB,Y       BEQ XXA609       SEC        SBC #$3A      ;':'       BEQ XXA5DC       CMP #$49      ; DATA CODE       BNE XXA5DEXXA5DC STA $0FXXA5DE SEC        SBC #$55      ; REM CODE       BNE XXA582       STA $08XXA5E5 LDA BUF,X       BEQ XXA5C9       CMP $08       BEQ XXA5C9XXA5EE INY        STA $01FB,Y       INX        BNE XXA5E5XXA5F5 LDX $7A       INC $0BXXA5F9 INY        LDA XXA09E-1,Y       BPL XXA5F9       LDA XXA09E,Y       BNE XXA5B8       LDA BUF,X       BPL XXA5C7XXA609 STA $01FD,Y       DEC $7B       LDA #$FF       STA $7A       RTS ;********************************; SEARCH FOR A LINE IN A PROGRAM;********************************XXA613 LDA TXTTAB       LDX TXTTAB+1XXA617 LDY #$01       STA $5F       STX $60       LDA ($5F),Y       BEQ XXA640       INY        INY        LDA LINNUM+1       CMP ($5F),Y       BCC XXA641       BEQ XXA62E       DEY        BNE XXA637XXA62E LDA LINNUM       DEY        CMP ($5F),Y       BCC XXA641       BEQ XXA641XXA637 DEY        LDA ($5F),Y       TAX        DEY        LDA ($5F),Y       BCS XXA617XXA640 CLC XXA641 RTS ;********************************; NEW COMMAND;********************************ZZA642 BNE XXA641KKA644 LDA #$00       TAY        STA (TXTTAB),Y       INY        STA (TXTTAB),Y       LDA TXTTAB       CLC        ADC #$02       STA VARTAB       LDA TXTTAB+1       ADC #$00       STA VARTAB+1XXA659 JSR XXA68E       LDA #$00;********************************; CLR COMMAND;********************************ZZA65E BNE XXA68DXXA660 JSR CLALLKKA663 LDA MEMSIZ       LDY MEMSIZ+1       STA FRETOP       STY FRETOP+1       LDA VARTAB       LDY VARTAB+1       STA ARYTAB       STY ARYTAB+1       STA STREND       STY STREND+1KKA677 JSR XXA81D;********************************; RESET STACK AND PROGRAM POINTERS;********************************XXA67A LDX #$19       STX TEMPPT       PLA        TAY        PLA        LDX #$FA       TXS        PHA        TYA        PHA        LDA #$00       STA OLDTXT+1       STA $10XXA68D RTS ;********************************; SET CURRENT CHARACTER POINTER TO START OF BASIC - 1;********************************XXA68E CLC        LDA TXTTAB       ADC #$FF       STA $7A       LDA TXTTAB+1       ADC #$FF       STA $7BXXA69B RTS ;********************************; LIST COMMAND;********************************ZZA69C BCC XXA6A4       BEQ XXA6A4       CMP #$AB       BNE XXA68DXXA6A4 JSR XXA96B       JSR XXA613       JSR CHRGOT       BEQ XXA6BB       CMP #$AB       BNE XXA641       JSR CHRGET       JSR XXA96B       BNE XXA641XXA6BB PLA        PLA        LDA LINNUM       ORA LINNUM+1       BNE XXA6C9       LDA #$FF       STA LINNUM       STA LINNUM+1;********************************; LIST LINES FROM $5F/$60 TO LINNUM/LINNUM+1;********************************XXA6C9 LDY #$01       STY $0F       LDA ($5F),Y       BEQ XXA714       JSR XXA82C       JSR XXAAD7       INY        LDA ($5F),Y       TAX        INY        LDA ($5F),Y       CMP LINNUM+1       BNE XXA6E6       CPX LINNUM       BEQ XXA6E8XXA6E6 BCS XXA714XXA6E8 STY $49       JSR XXBDCD       LDA #$20      ;' 'XXA6EF LDY $49       AND #$7FXXA6F3 JSR XXAB47       CMP #$22      ;'"'       BNE XXA700       LDA $0F       EOR #$FF       STA $0FXXA700 INY        BEQ XXA714       LDA ($5F),Y       BNE XXA717       TAY        LDA ($5F),Y       TAX        INY        LDA ($5F),Y       STX $5F       STA $60       BNE XXA6C9XXA714 JMP $E386;********************************; PRINT TOKENS ROUTINE;********************************XXA717 JMP (IQPLOP)   ; NORMALLY A71A;********************************; STANDARD TOKEN PRINTER;********************************ZZA71A BPL XXA6F3       CMP #$FF       BEQ XXA6F3       BIT $0F       BMI XXA6F3       SEC        SBC #$7F       TAX        STY $49       LDY #$FFXXA72C DEX        BEQ XXA737XXA72F INY        LDA XXA09E,Y       BPL XXA72F       BMI XXA72C;********************************; PRINT KEYWORD;********************************XXA737 INY        LDA XXA09E,Y       BMI XXA6EF       JSR XXAB47       BNE XXA737;********************************; FOR COMMAND;********************************ZZA742 LDA #$80       STA $10       JSR XXA9A5       JSR XXA38A       BNE XXA753       TXA        ADC #$0F       TAX        TXS XXA753 PLA        PLA        LDA #$09       JSR XXA3FB       JSR XXA906       CLC        TYA        ADC $7A       PHA        LDA $7B       ADC #$00       PHA        LDA CURLIN+1       PHA        LDA CURLIN       PHA        LDA #$A4       JSR XXAEFF       JSR XXAD8D       JSR XXAD8A       LDA $66       ORA #$7F       AND $62       STA $62       LDA #$8B   ; LOW  A78B       LDY #$A7   ; HIGH A78B       STA INDEX       STY INDEX+1       JMP XXAE43;********************************;;********************************ZZA78B LDA #$BC   ; LOW  B9BC       LDY #$B9   ; HIGH B9BC       JSR XXBBA2       JSR CHRGOT       CMP #$A9       BNE XXA79F       JSR CHRGET       JSR XXAD8AXXA79F JSR XXBC2B       JSR XXAE38       LDA $4A       PHA        LDA $49       PHA        LDA #$81   ; FOR BLOCK CODE       PHA ;********************************; EXECUTE NEXT STATEMENT;********************************XXA7AE JSR XXA82C       LDA $7A       LDY $7B       CPY #$02       NOP        BEQ XXA7BE       STA OLDTXT       STY OLDTXT+1XXA7BE LDY #$00       LDA ($7A),Y       BNE XXA807       LDY #$02       LDA ($7A),Y       CLC        BNE XXA7CE       JMP XXA84B;********************************;;********************************XXA7CE INY        LDA ($7A),Y       STA CURLIN       INY        LDA ($7A),Y       STA CURLIN+1       TYA        ADC $7A       STA $7A       BCC XXA7E1       INC $7BXXA7E1 JMP (IGONE)   ; NORMALLY A7E4;********************************; EXECUTE A STATEMENT;********************************KKA7E4 JSR CHRGET       JSR XXA7ED       JMP XXA7AE;********************************; EXECUTE COMMAND IN A;********************************XXA7ED BEQ XXA82BXXA7EF SBC #$80       BCC XXA804       CMP #$23      ;'#'       BCS XXA80E       ASL A       TAY        LDA ZZA00C+1,Y       PHA        LDA ZZA00C,Y       PHA        JMP CHRGET;********************************;;********************************XXA804 JMP XXA9A5;********************************XXA807 CMP #$3A      ;':'       BEQ XXA7E1XXA80B JMP XXAF08;********************************;;********************************XXA80E CMP #$4B   ; GO CODE       BNE XXA80B       JSR CHRGET       LDA #$A4   ; TO CODE       JSR XXAEFF       JMP XXA8A0   ; DO GOTO;********************************; RESTORE COMMAND;********************************XXA81D SEC        LDA TXTTAB       SBC #$01       LDY TXTTAB+1       BCS XXA827       DEY XXA827 STA DATPRT       STY DATPRT+1XXA82B RTS ;********************************; STOP COMMAND;********************************XXA82C JSR STOP   ; TEST STOP KEY;********************************; STOP COMMAND;********************************ZZA82F BCS XXA832ZZA831 CLC;********************************; END COMMAND;********************************XXA832 BNE XXA870       LDA $7A       LDY $7B       LDX CURLIN+1       INX        BEQ XXA849       STA OLDTXT       STY OLDTXT+1       LDA CURLIN       LDY CURLIN+1       STA OLDLIN       STY OLDLIN+1XXA849 PLA        PLA XXA84B LDA #<WWA381 ;#$81   ; LOW  A381       LDY #>WWA381 ;#$A3   ; HIGH A381       BCC XXA854       JMP XXA469;********************************;;********************************XXA854 JMP $E386;********************************; CONT COMMAND;********************************ZZA857 BNE XXA870       LDX #$1A   ; ERROR NUMBER       LDY OLDTXT+1       BNE XXA862       JMP XXA437;********************************;;********************************XXA862 LDA OLDTXT       STA $7A       STY $7B       LDA OLDLIN       LDY OLDLIN+1       STA CURLIN       STY CURLIN+1XXA870 RTS ;********************************; RUN COMMAND;********************************ZZA871 PHP        LDA #$00       JSR SETMSG       PLP        BNE XXA87D       JMP XXA659;********************************;;********************************XXA87D JSR XXA660   ; DO CLR       JMP XXA897   ; DO GOTO;********************************; GOSUB COMMAND;********************************ZZA883 LDA #$03       JSR XXA3FB       LDA $7B       PHA        LDA $7A       PHA        LDA CURLIN+1       PHA        LDA CURLIN       PHA        LDA #$8D       PHA XXA897 JSR CHRGOT       JSR XXA8A0       JMP XXA7AE;********************************;;********************************XXA8A0 JSR XXA96B       JSR XXA909       SEC        LDA CURLIN       SBC LINNUM       LDA CURLIN+1       SBC LINNUM+1       BCS XXA8BC       TYA        SEC        ADC $7A       LDX $7B       BCC XXA8C0       INX        BCS XXA8C0XXA8BC LDA TXTTAB       LDX TXTTAB+1XXA8C0 JSR XXA617       BCC XXA8E3       LDA $5F       SBC #$01       STA $7A       LDA $60       SBC #$00       STA $7BXXA8D1 RTS ;********************************;;********************************ZZA8D2 BNE XXA8D1       LDA #$FF       STA $4A       JSR XXA38A       TXS        CMP #$8D       BEQ XXA8EB       LDX #$0C;********************************       .BYTE $2C;********************************XXA8E3 LDX #$11       JMP XXA437;********************************;;********************************XXA8E8 JMP XXAF08;********************************;;********************************XXA8EB PLA        PLA        STA CURLIN       PLA        STA CURLIN+1       PLA        STA $7A       PLA        STA $7B;********************************; DATA;********************************XXA8F8 JSR XXA906XXA8FB TYA        CLC        ADC $7A       STA $7A       BCC XXA905       INC $7BXXA905 RTS ;********************************;;********************************XXA906 LDX #$3A      ;':';********************************       .BYTE $2C;********************************XXA909 LDX #$00       STX $07       LDY #$00       STY $08XXA911 LDA $08       LDX $07       STA $07       STX $08XXA919 LDA ($7A),Y       BEQ XXA905       CMP $08       BEQ XXA905       INY        CMP #$22      ;'"'       BNE XXA919       BEQ XXA911;********************************;;********************************ZZA928 JSR XXAD9E       JSR CHRGOT       CMP #$89       BEQ XXA937       LDA #$A7       JSR XXAEFFXXA937 LDA $61       BNE XXA940;********************************;;********************************ZZA93B JSR XXA909       BEQ XXA8FBXXA940 JSR CHRGOT       BCS XXA948       JMP XXA8A0;********************************;;********************************XXA948 JMP XXA7ED;********************************;;********************************ZZA94B JSR XXB79E       PHA        CMP #$8D       BEQ XXA957XXA953 CMP #$89       BNE XXA8E8XXA957 DEC $65       BNE XXA95F       PLA        JMP XXA7EF;********************************;;********************************XXA95F JSR CHRGET       JSR XXA96B       CMP #$2C      ;','       BEQ XXA957       PLA XXA96A RTS ;********************************;;********************************XXA96B LDX #$00       STX LINNUM       STX LINNUM+1XXA971 BCS XXA96A       SBC #$2F      ;'/'       STA $07       LDA LINNUM+1       STA INDEX       CMP #$19       BCS XXA953       LDA LINNUM       ASL A       ROL INDEX       ASL A       ROL INDEX       ADC LINNUM       STA LINNUM       LDA INDEX       ADC LINNUM+1       STA LINNUM+1       ASL LINNUM       ROL LINNUM+1       LDA LINNUM       ADC $07       STA LINNUM       BCC XXA99F       INC LINNUM+1XXA99F JSR CHRGET       JMP XXA971;********************************;;********************************XXA9A5 JSR XXB08B       STA $49       STY $4A       LDA #$B2       JSR XXAEFF       LDA $0E       PHA        LDA $0D       PHA        JSR XXAD9E       PLA        ROL A       JSR XXAD90       BNE XXA9D9       PLA XXA9C2 BPL XXA9D6       JSR XXBC1B       JSR XXB1BF       LDY #$00       LDA $64       STA ($49),Y       INY        LDA $65       STA ($49),Y       RTS ;********************************;;********************************XXA9D6 JMP XXBBD0;********************************;;********************************XXA9D9 PLA XXA9DA LDY $4A       CPY #$BF       BNE XXAA2C       JSR XXB6A6       CMP #$06       BNE XXAA24       LDY #$00       STY $61       STY $66XXA9ED STY $71       JSR XXAA1D       JSR XXBAE2       INC $71       LDY $71       JSR XXAA1D       JSR XXBC0C       TAX        BEQ XXAA07       INX        TXA        JSR XXBAEDXXAA07 LDY $71       INY        CPY #$06       BNE XXA9ED       JSR XXBAE2       JSR XXBC9B       LDX $64       LDY $63       LDA $65       JMP $FFDB;********************************;;********************************XXAA1D LDA (INDEX),Y       JSR POINTB+4 ;$0080       BCC XXAA27XXAA24 JMP XXB248;********************************;;********************************XXAA27 SBC #$2F      ;'/'       JMP XXBD7E;********************************;;********************************XXAA2C LDY #$02       LDA ($64),Y       CMP FRETOP+1       BCC XXAA4B       BNE XXAA3D       DEY        LDA ($64),Y       CMP FRETOP       BCC XXAA4BXXAA3D LDY $65       CPY VARTAB+1       BCC XXAA4B       BNE XXAA52       LDA $64       CMP VARTAB       BCS XXAA52XXAA4B LDA $64       LDY $65       JMP XXAA68;********************************;;********************************XXAA52 LDY #$00       LDA ($64),Y       JSR XXB475       LDA $50       LDY $51       STA $6F       STY $70       JSR XXB67A       LDA #$61       LDY #$00XXAA68 STA $50       STY $51       JSR XXB6DB       LDY #$00       LDA ($50),Y       STA ($49),Y       INY        LDA ($50),Y       STA ($49),Y       INY        LDA ($50),Y       STA ($49),YXXAA7F RTS ;********************************;;********************************ZZAA80 JSR XXAA86       JMP XXABB5;********************************;;********************************XXAA86 JSR XXB79E       BEQ XXAA90       LDA #$2C      ;','       JSR XXAEFFXXAA90 PHP        STX $13       JSR KKE118       PLP        JMP XXAAA0;********************************;;********************************XXAA9A       JSR XXAB21XXAA9D JSR CHRGOTXXAAA0 BEQ XXAAD7XXAAA2 BEQ XXAAE7       CMP #$A3       BEQ XXAAF8       CMP #$A6       CLC        BEQ XXAAF8       CMP #$2C      ;','       BEQ XXAAE8       CMP #$3B      ;';'       BEQ XXAB13       JSR XXAD9E       BIT $0D       BMI XXAA9A       JSR XXBDDD       JSR XXB487       JSR XXAB21       JSR XXAB3B       BNE XXAA9DXXAACA LDA #$00       STA BUF,X       LDX #$FF       LDY #$01       LDA $13       BNE XXAAE7XXAAD7 LDA #$0D       JSR XXAB47       BIT $13       BPL XXAAE5       LDA #$0A       JSR XXAB47XXAAE5 EOR #$FFXXAAE7 RTS ;********************************;;********************************XXAAE8 SEC        JSR PLOT       TYA        SEC XXAAEE SBC #$0A       BCS XXAAEE       EOR #$FF       ADC #$01       BNE XXAB0EXXAAF8 PHP        SEC        JSR PLOT       STY $09       JSR XXB79B       CMP #$29      ;')'       BNE XXAB5F       PLP        BCC XXAB0F       TXA        SBC $09       BCC XXAB13XXAB0E TAX XXAB0F INX XXAB10 DEX        BNE XXAB19XXAB13 JSR CHRGET       JMP XXAAA2;********************************;;********************************XXAB19 JSR XXAB3B       BNE XXAB10XXAB1E JSR XXB487XXAB21 JSR XXB6A6       TAX        LDY #$00       INX XXAB28 DEX        BEQ XXAAE7       LDA (INDEX),Y       JSR XXAB47       INY        CMP #$0D       BNE XXAB28       JSR XXAAE5       JMP XXAB28;********************************;;********************************XXAB3B LDA $13       BEQ XXAB42       LDA #$20      ;' ';********************************       .BYTE $2C;********************************XXAB42 LDA #$1D;********************************       .BYTE $2C;********************************XXAB45 LDA #$3F      ;'?'XXAB47 JSR $E10C       AND #$FF       RTS ;********************************;;********************************XXAB4D LDA $11       BEQ XXAB62       BMI XXAB57       LDY #$FF       BNE XXAB5BXXAB57 LDA DATLIN       LDY DATLIN+1XXAB5B STA CURLIN       STY CURLIN+1XXAB5F JMP XXAF08;********************************;;********************************XXAB62 LDA $13       BEQ XXAB6B       LDX #$18       JMP XXA437;********************************;;********************************XXAB6B LDA #$0C       LDY #$AD       JSR XXAB1E       LDA OLDTXT       LDY OLDTXT+1       STA $7A       STY $7BXXAB7A RTS ;********************************;;********************************XXAB7B JSR XXB3A6       CMP #$23      ;'#'       BNE XXAB92       JSR CHRGET       JSR XXB79E       LDA #$2C      ;','       JSR XXAEFF       STX $13       JSR KKE11EXXAB92 LDX #$01       LDY #$02       LDA #$00       STA $0201       LDA #$40      ;'@'       JSR XXAC0F       LDX $13       BNE XXABB7XXABA4 RTS ;********************************; INPUT#;********************************ZZABA5 JSR XXB79E       LDA #$2C      ;','       JSR XXAEFF       STX $13       JSR KKE11E       JSR XXABCEXXABB5 LDA $13XXABB7 JSR CLRCHN       LDX #$00       STX $13XXABBE RTS ;********************************; INPUT;********************************ZZABBF CMP #$22      ;'"'       BNE XXABCE       JSR XXAEBD       LDA #$3B      ;';'       JSR XXAEFF       JSR XXAB21XXABCE JSR XXB3A6       LDA #$2C      ;','       STA $01FFXXABD6 JSR XXABF9       LDA $13       BEQ XXABEA       JSR READST       AND #$02       BEQ XXABEA       JSR XXABB5       JMP XXA8F8;********************************;;********************************XXABEA LDA BUF       BNE XXAC0D       LDA $13       BNE XXABD6       JSR XXA906       JMP XXA8FB;********************************;;********************************XXABF9 LDA $13       BNE XXAC03       JSR XXAB45       JSR XXAB3BXXAC03 JMP XXA560;********************************;;********************************ZZAC06 LDX DATPRT       LDY DATPRT+1       LDA #$98;********************************       .BYTE $2C;********************************XXAC0D LDA #$00XXAC0F STA $11       STX $43       STY $44XXAC15 JSR XXB08B       STA $49       STY $4A       LDA $7A       LDY $7B       STA $4B       STY $4C       LDX $43       LDY $44       STX $7A       STY $7B       JSR CHRGOT       BNE XXAC51       BIT $11       BVC XXAC41       JSR KKE124       STA BUF       LDX #$FF       LDY #$01       BNE XXAC4DXXAC41 BMI XXACB8       LDA $13       BNE XXAC4A       JSR XXAB45XXAC4A JSR XXABF9XXAC4D STX $7A       STY $7BXXAC51 JSR CHRGET       BIT $0D       BPL XXAC89       BIT $11       BVC XXAC65       INX        STX $7A       LDA #$00       STA $07       BEQ XXAC71XXAC65 STA $07       CMP #$22      ;'"'       BEQ XXAC72       LDA #$3A      ;':'       STA $07       LDA #$2C      ;','XXAC71 CLC XXAC72 STA $08       LDA $7A       LDY $7B       ADC #$00       BCC XXAC7D       INY XXAC7D JSR XXB48D       JSR XXB7E2       JSR XXA9DA       JMP XXAC91;********************************;;********************************XXAC89       JSR XXBCF3       LDA $0E       JSR XXA9C2XXAC91 JSR CHRGOT       BEQ XXAC9D       CMP #$2C      ;','       BEQ XXAC9D       JMP XXAB4D;********************************;;********************************XXAC9D LDA $7A       LDY $7B       STA $43       STY $44       LDA $4B       LDY $4C       STA $7A       STY $7B       JSR CHRGOT       BEQ XXACDF       JSR XXAEFD       JMP XXAC15;********************************;;********************************XXACB8 JSR XXA906       INY        TAX        BNE XXACD1       LDX #$0D       INY        LDA ($7A),Y       BEQ XXAD32       INY        LDA ($7A),Y       STA DATLIN       INY        LDA ($7A),Y       INY        STA DATLIN+1XXACD1 JSR XXA8FB       JSR CHRGOT       TAX        CPX #$83       BNE XXACB8       JMP XXAC51;********************************;;********************************XXACDF LDA $43       LDY $44       LDX $11       BPL XXACEA       JMP XXA827;********************************;;********************************XXACEA LDY #$00       LDA ($43),Y       BEQ XXACFB       LDA $13       BNE XXACFB       LDA #$FC       LDY #$AC       JMP XXAB1E;********************************;;********************************XXACFB RTS ;********************************;;********************************       .BYTE '?EXTRA IGNORED'       .BYTE $0D       .BYTE $00       .BYTE '?REDO FROM START'       .BYTE $0DXXAD1D .BYTE $00;********************************;;********************************ZZAD1E BNE XXAD24       LDY #$00       BEQ XXAD27XXAD24 JSR XXB08BXXAD27 STA $49       STY $4A       JSR XXA38A       BEQ XXAD35       LDX #$0AXXAD32 JMP XXA437;********************************;;********************************XXAD35 TXS        TXA        CLC        ADC #$04       PHA        ADC #$06       STA INDEX+2       PLA        LDY #$01       JSR XXBBA2       TSX        LDA $0109,X       STA $66       LDA $49       LDY $4A       JSR XXB867       JSR XXBBD0       LDY #$01       JSR XXBC5D       TSX        SEC        SBC $0109,X       BEQ XXAD78       LDA $010F,X       STA CURLIN       LDA $0110,X       STA CURLIN+1       LDA $0112,X       STA $7A       LDA $0111,X       STA $7BXXAD75 JMP XXA7AE;********************************;;********************************XXAD78 TXA        ADC #$11       TAX        TXS        JSR CHRGOT       CMP #$2C      ;','       BNE XXAD75       JSR CHRGET       JSR XXAD24XXAD8A JSR XXAD9EXXAD8D CLC ;********************************       .BYTE $24;********************************XXAD8F SEC XXAD90 BIT $0D       BMI XXAD97       BCS XXAD99XXAD96 RTS ;********************************;;********************************XXAD97       BCS XXAD96XXAD99 LDX #$16       JMP XXA437;********************************;;********************************XXAD9E LDX $7A       BNE XXADA4       DEC $7BXXADA4 DEC $7A       LDX #$00;********************************       .BYTE $24;********************************XXADA9 PHA        TXA        PHA        LDA #$01       JSR XXA3FB       JSR XXAE83       LDA #$00       STA $4DXXADB8 JSR CHRGOTXXADBB SEC        SBC #$B1       BCC XXADD7       CMP #$03       BCS XXADD7       CMP #$01       ROL A       EOR #$01       EOR $4D       CMP $4D       BCC XXAE30       STA $4D       JSR CHRGET       JMP XXADBB;********************************;;********************************XXADD7 LDX $4D       BNE XXAE07       BCS XXAE58       ADC #$07       BCC XXAE58       ADC $0D       BNE XXADE8       JMP XXB63D;********************************;;********************************XXADE8 ADC #$FF       STA INDEX       ASL A       ADC INDEX       TAY XXADF0 PLA        CMP XXA080,Y       BCS XXAE5D       JSR XXAD8DXXADF9 PHA XXADFA JSR XXAE20       PLA        LDY $4B       BPL XXAE19       TAX        BEQ XXAE5B       BNE XXAE66XXAE07 LSR $0D       TXA        ROL A       LDX $7A       BNE XXAE11       DEC $7BXXAE11 DEC $7A       LDY #$1B       STA $4D       BNE XXADF0XXAE19 CMP XXA080,Y       BCS XXAE66       BCC XXADF9XXAE20 LDA XXA081+1,Y       PHA        LDA XXA081,Y       PHA        JSR XXAE33       LDA $4D       JMP XXADA9;********************************;;********************************XXAE30 JMP XXAF08;********************************;;********************************XXAE33 LDA $66       LDX XXA080,YXXAE38 TAY        PLA        STA INDEX       INC INDEX       PLA        STA INDEX+1       TYA        PHA XXAE43 JSR XXBC1B       LDA $65       PHA        LDA $64       PHA        LDA $63       PHA        LDA $62       PHA        LDA $61       PHA        JMP ($0022);********************************;;********************************XXAE58 LDY #$FF       PLA XXAE5B BEQ XXAE80XXAE5D CMP #$64       BEQ XXAE64       JSR XXAD8DXXAE64 STY $4BXXAE66 PLA        LSR A       STA $12       PLA        STA $69       PLA        STA $6A       PLA        STA $6B       PLA        STA $6C       PLA        STA $6D       PLA        STA $6E       EOR $66       STA $6FXXAE80 LDA $61       RTS ;********************************;;********************************XXAE83 JMP (IEVAL);********************************;;********************************KKAE86 LDA #$00       STA $0DXXAE8A JSR CHRGET       BCS XXAE92XXAE8F JMP XXBCF3;********************************;;********************************XXAE92 JSR XXB113       BCC XXAE9A       JMP XXAF28;********************************;;********************************XXAE9A CMP #$FF       BNE XXAEAD       LDA #$A8       LDY #$AE       JSR XXBBA2       JMP CHRGET;********************************;;********************************       .BYTE $82       .BYTE $49       .BYTE $0F       .BYTE $DA       .BYTE $A1;********************************;;********************************XXAEAD CMP #$2E      ;'.'       BEQ XXAE8F       CMP #$AB       BEQ XXAF0D       CMP #$AA       BEQ XXAE8A       CMP #$22      ;'"'       BNE XXAECCXXAEBD LDA $7A       LDY $7B       ADC #$00       BCC XXAEC6       INY XXAEC6 JSR XXB487       JMP XXB7E2;********************************;;********************************XXAECC CMP #$A8       BNE XXAEE3       LDY #$18       BNE XXAF0F;********************************;;********************************ZZAED4 JSR XXB1BF       LDA $65       EOR #$FF       TAY        LDA $64       EOR #$FF       JMP XXB391;********************************;;********************************XXAEE3 CMP #$A5       BNE XXAEEA       JMP XXB3F4;********************************;;********************************XXAEEA CMP #$B4       BCC XXAEF1       JMP XXAFA7;********************************;;********************************XXAEF1 JSR XXAEFA       JSR XXAD9EXXAEF7 LDA #$29      ;')';********************************       .BYTE $2C;********************************XXAEFA LDA #$28      ;'(';********************************       .BYTE $2C;********************************XXAEFD LDA #$2C      ;','XXAEFF LDY #$00       CMP ($7A),Y       BNE XXAF08       JMP CHRGET;********************************;;********************************XXAF08 LDX #$0B       JMP XXA437;********************************;;********************************XXAF0D LDY #$15XXAF0F PLA        PLA        JMP XXADFA;********************************;;********************************XXAF14 SEC        LDA $64       SBC #$00       LDA $65       SBC #$A0       BCC XXAF27       LDA #$A2       SBC $64       LDA #$E3       SBC $65XXAF27 RTS ;********************************;;********************************XXAF28 JSR XXB08B       STA $64       STY $65       LDX $45       LDY $46       LDA $0D       BEQ XXAF5D       LDA #$00       STA $70       JSR XXAF14       BCC XXAF5C       CPX #$54      ;'T'       BNE XXAF5C       CPY #$C9       BNE XXAF5C       JSR XXAF84       STY $5E       DEY        STY $71       LDY #$06       STY $5D       LDY #$24      ;'$'       JSR XXBE68       JMP XXB46F;********************************;;********************************XXAF5C RTS ;********************************;;********************************XXAF5D BIT $0E       BPL XXAF6E       LDY #$00       LDA ($64),Y       TAX        INY        LDA ($64),Y       TAY        TXA        JMP XXB391;********************************;;********************************XXAF6E       JSR XXAF14       BCC XXAFA0       CPX #$54      ;'T'       BNE XXAF92       CPY #$49      ;'I'       BNE XXAFA0       JSR XXAF84       TYA        LDX #$A0       JMP XXBC4F;********************************;;********************************XXAF84 JSR RDTIM       STX $64       STY $63       STA $65       LDY #$00       STY $62       RTS ;********************************;;********************************XXAF92 CPX #$53      ;'S'       BNE XXAFA0       CPY #$54      ;'T'       BNE XXAFA0       JSR READST       JMP XXBC3C;********************************;;********************************XXAFA0 LDA $64       LDY $65       JMP XXBBA2;********************************; ISFUN - DISPATCH AND EVALUATE A FUNCTION;********************************XXAFA7 ASL A       PHA        TAX        JSR CHRGET       CPX #$8F       BCC XXAFD1       JSR XXAEFA       JSR XXAD9E       JSR XXAEFD       JSR XXAD8F       PLA        TAX        LDA $65       PHA        LDA $64       PHA        TXA        PHA        JSR XXB79E       PLA        TAY        TXA        PHA        JMP XXAFD6;********************************;;********************************XXAFD1 JSR XXAEF1       PLA        TAY XXAFD6 LDA $9FEA,Y       STA JMPER+1 ;$55       LDA $9FEB,Y       STA JMPER+2 ;$56       JSR JMPER       JMP XXAD8D;********************************; OR OPERATOR;********************************ZZAFE6  LDY #$FF;********************************       .BYTE $2C;********************************; AND OPERATOR;********************************ZZAFE9 LDY #$00       STY $0B       JSR XXB1BF       LDA $64       EOR $0B       STA $07       LDA $65       EOR $0B       STA $08       JSR XXBBFC       JSR XXB1BF       LDA $65       EOR $0B       AND $08       EOR $0B       TAY        LDA $64       EOR $0B       AND $07       EOR $0B       JMP XXB391;********************************;;********************************ZZB016 JSR XXAD90       BCS XXB02E       LDA $6E       ORA #$7F       AND $6A       STA $6A       LDA #$69       LDY #$00       JSR XXBC5B       TAX        JMP XXB061;********************************;;********************************XXB02E LDA #$00       STA $0D       DEC $4D       JSR XXB6A6       STA $61       STX $62       STY $63       LDA $6C       LDY $6D       JSR XXB6AA       STX $6C       STY $6D       TAX        SEC        SBC $61       BEQ XXB056       LDA #$01       BCC XXB056       LDX $61       LDA #$FFXXB056 STA $66       LDY #$FF       INX XXB05B INY        DEX        BNE XXB066       LDX $66XXB061 BMI XXB072       CLC        BCC XXB072XXB066 LDA ($6C),Y       CMP ($62),Y       BEQ XXB05B       LDX #$FF       BCS XXB072       LDX #$01XXB072 INX        TXA        ROL A       AND $12       BEQ XXB07B       LDA #$FFXXB07B JMP XXBC3C;********************************;;********************************XXB07E JSR XXAEFD;********************************; DIM COMMAND;********************************ZZB081 TAX        JSR XXB090       JSR CHRGOT       BNE XXB07E       RTS ;********************************; GET NAME AND POINTER TO A VARIABLE;********************************XXB08B LDX #$00       JSR CHRGOTXXB090 STX $0CXXB092 STA $45       JSR CHRGOT       JSR XXB113       BCS XXB09FXXB09C JMP XXAF08;********************************;;********************************XXB09F LDX #$00       STX $0D       STX $0E       JSR CHRGET       BCC XXB0AF       JSR XXB113       BCC XXB0BAXXB0AF TAX XXB0B0 JSR CHRGET       BCC XXB0B0       JSR XXB113       BCS XXB0B0XXB0BA CMP #$24      ;'$'       BNE XXB0C4       LDA #$FF       STA $0D       BNE XXB0D4XXB0C4 CMP #$25      ;'%'       BNE XXB0DB       LDA $10       BNE XXB09C       LDA #$80       STA $0E       ORA $45       STA $45XXB0D4 TXA        ORA #$80       TAX        JSR CHRGETXXB0DB STX $46       SEC        ORA $10       SBC #$28      ;'('       BNE XXB0E7       JMP XXB1D1;********************************;;********************************XXB0E7 LDY #$00       STY $10       LDA VARTAB       LDX VARTAB+1XXB0EF STX $60XXB0F1 STA $5F       CPX ARYTAB+1       BNE XXB0FB       CMP ARYTAB       BEQ XXB11DXXB0FB LDA $45       CMP ($5F),Y       BNE XXB109       LDA $46       INY        CMP ($5F),Y       BEQ XXB185       DEY XXB109 CLC        LDA $5F       ADC #$07       BCC XXB0F1       INX        BNE XXB0EF;********************************; CHECK CHARACTER IN A; C=1 IF ALPHABETIC, C=0 IF NOT;********************************XXB113 CMP #$41      ;'A'       BCC XXB11C       SBC #$5B      ;'['       SEC        SBC #$A5XXB11C RTS ;********************************; VARIABLE NOT FOUND;********************************XXB11D PLA        PHA        CMP #$2A      ;'*'       BNE XXB128XXB123 LDA #$13       LDY #$BF       RTS ;********************************;;********************************XXB128 LDA $45       LDY $46       CMP #$54      ;'T'       BNE XXB13B       CPY #$C9       BEQ XXB123       CPY #$49      ;'I'       BNE XXB13BXXB138 JMP XXAF08;********************************;;********************************XXB13B CMP #$53      ;'S'       BNE XXB143       CPY #$54      ;'T'       BEQ XXB138XXB143 LDA ARYTAB       LDY ARYTAB+1       STA $5F       STY $60       LDA STREND       LDY STREND+1       STA $5A       STY $5B       CLC        ADC #$07       BCC XXB159       INY XXB159 STA $58       STY $59       JSR XXA3B8       LDA $58       LDY $59       INY        STA ARYTAB       STY ARYTAB+1       LDY #$00       LDA $45       STA ($5F),Y       INY        LDA $46       STA ($5F),Y       LDA #$00       INY        STA ($5F),Y       INY        STA ($5F),Y       INY        STA ($5F),Y       INY        STA ($5F),Y       INY        STA ($5F),Y;********************************; VARIABLE FOUND;********************************XXB185 LDA $5F       CLC        ADC #$02       LDY $60       BCC XXB18F       INY XXB18F STA $47       STY $48       RTS ;********************************; COMPUTE POINTER TO ARRAY BODY;********************************XXB194 LDA $0B       ASL A       ADC #$05       ADC $5F       LDY $60       BCC XXB1A0       INY XXB1A0 STA $58       STY $59       RTS ;********************************; ; FLOAT NUMBER FOR CONVERSION TO INTEGER;********************************WWB1A5 .BYTE $90       .BYTE $80       .BYTE $00       .BYTE $00       .BYTE $00;********************************; ROUTINE TO CONVERT FLOAT TO FIXED POINT;********************************ZZB1AA JSR XXB1BF       LDA $64       LDY $65       RTS ;********************************; CONVERT VALUE FROM STATEMENT TO INTEGER;********************************XXB1B2 JSR CHRGET       JSR XXAD9EXXB1B8 JSR XXAD8D       LDA $66       BMI XXB1CC;********************************; CONVERT FLOAT NUMBER TO INTEGER;********************************XXB1BF LDA $61       CMP #$90       BCC XXB1CE       LDA #$A5       LDY #$B1       JSR XXBC5BXXB1CC BNE XXB248XXB1CE JMP XXBC9B;********************************; GET POINTER TO DIMENSIONED VARIABLE;********************************XXB1D1 LDA $0C       ORA $0E       PHA        LDA $0D       PHA        LDY #$00XXB1DB TYA        PHA        LDA $46       PHA        LDA $45       PHA        JSR XXB1B2       PLA        STA $45       PLA        STA $46       PLA        TAY        TSX        LDA STACK+2,X       PHA        LDA STACK+1,X       PHA        LDA $64       STA STACK+2,X       LDA $65       STA STACK+1,X       INY        JSR CHRGOT       CMP #$2C      ;','       BEQ XXB1DB       STY $0B       JSR XXAEF7       PLA        STA $0D       PLA        STA $0E       AND #$7F       STA $0C       LDX ARYTAB       LDA ARYTAB+1XXB21C STX $5F       STA $60       CMP STREND+1       BNE XXB228       CPX STREND       BEQ XXB261XXB228 LDY #$00       LDA ($5F),Y       INY        CMP $45       BNE XXB237       LDA $46       CMP ($5F),Y       BEQ XXB24DXXB237 INY        LDA ($5F),Y       CLC        ADC $5F       TAX        INY        LDA ($5F),Y       ADC $60       BCC XXB21CXXB245 LDX #$12   ; ERROR NUMBER;********************************       .BYTE $2C;********************************XXB248 LDX #$0E   ; ERROR NUMBERXXB24A JMP XXA437;********************************;;********************************XXB24D LDX #$13   ; ERROR NUMBER       LDA $0C       BNE XXB24A       JSR XXB194       LDA $0B       LDY #$04       CMP ($5F),Y       BNE XXB245       JMP XXB2EA;********************************; ALLOCATE ARRAY;********************************XXB261 JSR XXB194       JSR XXA408       LDY #$00       STY $72       LDX #$05       LDA $45       STA ($5F),Y       BPL XXB274       DEX XXB274 INY        LDA $46       STA ($5F),Y       BPL XXB27D       DEX        DEX XXB27D STX $71       LDA $0B       INY        INY        INY        STA ($5F),YXXB286 LDX #$0B       LDA #$00       BIT $0C       BVC XXB296       PLA        CLC        ADC #$01       TAX        PLA        ADC #$00XXB296 INY        STA ($5F),Y       INY        TXA        STA ($5F),Y       JSR XXB34C       STX $71       STA $72       LDY INDEX       DEC $0B       BNE XXB286       ADC $59       BCS XXB30B       STA $59       TAY        TXA        ADC $58       BCC XXB2B9       INY        BEQ XXB30BXXB2B9 JSR XXA408       STA STREND       STY STREND+1       LDA #$00       INC $72       LDY $71       BEQ XXB2CDXXB2C8 DEY        STA ($58),Y       BNE XXB2C8XXB2CD DEC $59       DEC $72       BNE XXB2C8       INC $59       SEC        LDA STREND       SBC $5F       LDY #$02       STA ($5F),Y       LDA STREND+1       INY        SBC $60       STA ($5F),Y       LDA $0C       BNE XXB34B       INY;********************************; COMPUTE REFERENCE TO ARRAY ELEMENT;********************************XXB2EA LDA ($5F),Y       STA $0B       LDA #$00       STA $71XXB2F2 STA $72       INY        PLA        TAX        STA $64       PLA        STA $65       CMP ($5F),Y       BCC XXB30E       BNE XXB308       INY        TXA        CMP ($5F),Y       BCC XXB30FXXB308 JMP XXB245;********************************;;********************************XXB30B JMP XXA435;********************************;;********************************XXB30E INY XXB30F LDA $72       ORA $71       CLC        BEQ XXB320       JSR XXB34C       TXA        ADC $64       TAX        TYA        LDY INDEXXXB320 ADC $65       STX $71       DEC $0B       BNE XXB2F2       STA $72       LDX #$05       LDA $45       BPL XXB331       DEX XXB331 LDA $46       BPL XXB337       DEX        DEX XXB337 STX RESHO+2       LDA #$00       JSR XXB355       TXA        ADC $58       STA $47       TYA        ADC $59       STA $48       TAY        LDA $47XXB34B RTS ;********************************; XY = XA = LENGTH * LIMIT FROM ARRAY DATA;********************************XXB34C STY INDEX       LDA ($5F),Y       STA RESHO+2       DEY        LDA ($5F),YXXB355 STA RESHO+3       LDA #$10       STA $5D       LDX #$00       LDY #$00XXB35F TXA        ASL A       TAX        TYA        ROL A       TAY        BCS XXB30B       ASL $71       ROL $72       BCC XXB378       CLC        TXA        ADC RESHO+2       TAX        TYA        ADC RESHO+3       TAY        BCS XXB30BXXB378 DEC $5D       BNE XXB35F       RTS ;********************************; FRE FUNCTION;********************************XXB37D LDA $0D       BEQ XXB384       JSR XXB6A6XXB384 JSR XXB526       SEC        LDA FRETOP       SBC STREND       TAY        LDA FRETOP+1       SBC STREND+1;********************************; ROUTINE TO CONVERT INTEGER TO FLOAT;********************************XXB391 LDX #$00       STX $0D       STA $62       STY $63       LDX #$90       JMP XXBC44;********************************; POS FUNCTION;********************************XXB39E SEC        JSR PLOTXXB3A2 LDA #$00       BEQ XXB391;********************************; CHECK FOR NON-DIRECT MODE;********************************XXB3A6 LDX CURLIN+1       INX        BNE XXB34B       LDX #$15   ; ERROR NUMBER;********************************       .BYTE $2C;********************************XXB3AE LDX #$1B   ; ERROR NUMBER       JMP XXA437;********************************; DEF COMMAND;********************************ZZB3B3 JSR XXB3E1       JSR XXB3A6       JSR XXAEFA       LDA #$80       STA $10       JSR XXB08B       JSR XXAD8D       JSR XXAEF7       LDA #$B2       JSR XXAEFF       PHA        LDA $48       PHA        LDA $47       PHA        LDA $7B       PHA        LDA $7A       PHA        JSR XXA8F8       JMP XXB44F;********************************; GET FUNCTION NAME;********************************XXB3E1 LDA #$A5       JSR XXAEFF       ORA #$80       STA $10       JSR XXB092       STA $4E       STY $4F       JMP XXAD8D;********************************; EXPAND FN CALL;********************************XXB3F4 JSR XXB3E1       LDA $4F       PHA        LDA $4E       PHA        JSR XXAEF1       JSR XXAD8D       PLA        STA $4E       PLA        STA $4F       LDY #$02       LDA ($4E),Y       STA $47       TAX        INY        LDA ($4E),Y       BEQ XXB3AE       STA $48       INY XXB418 LDA ($47),Y       PHA        DEY        BPL XXB418       LDY $48       JSR XXBBD4       LDA $7B       PHA        LDA $7A       PHA        LDA ($4E),Y       STA $7A       INY        LDA ($4E),Y       STA $7B       LDA $48       PHA        LDA $47       PHA        JSR XXAD8A       PLA        STA $4E       PLA        STA $4F       JSR CHRGOT       BEQ XXB449       JMP XXAF08;********************************;;********************************XXB449 PLA        STA $7A       PLA        STA $7BXXB44F LDY #$00       PLA        STA ($4E),Y       PLA        INY        STA ($4E),Y       PLA        INY        STA ($4E),Y       PLA        INY        STA ($4E),Y       PLA        INY        STA ($4E),Y       RTS ;********************************; STR$ FUNCTION;********************************XXB465 JSR XXAD8D       LDY #$00       JSR XXBDDF       PLA        PLA XXB46F LDA #$FF       LDY #$00       BEQ XXB487XXB475 LDX $64       LDY $65       STX $50       STY $51;********************************; ALLOCATE AREA ACCORDING TO A;********************************XXB47D JSR XXB4F4       STX $62       STY $63       STA $61       RTS ;********************************; GET DESCRIPTION OF STRING INTO FLOAT ACCU;********************************XXB487 LDX #$22      ;'"'       STX $07       STX $08XXB48D STA $6F       STY $70       STA $62       STY $63       LDY #$FFXXB497 INY        LDA ($6F),Y       BEQ XXB4A8       CMP $07       BEQ XXB4A4       CMP $08       BNE XXB497XXB4A4 CMP #$22      ;'"'       BEQ XXB4A9XXB4A8 CLC XXB4A9 STY $61       TYA        ADC $6F       STA $71       LDX $70       BCC XXB4B5       INX XXB4B5 STX $72       LDA $70       BEQ XXB4BF       CMP #$02       BNE XXB4CAXXB4BF TYA        JSR XXB475       LDX $6F       LDY $70       JSR XXB688;********************************; SAVE DESCRIPTOR FROM $61-$63 ON STACK;********************************XXB4CA LDX TEMPPT       CPX #$22      ;'"'       BNE XXB4D5       LDX #$19XXB4D2 JMP XXA437;********************************;;********************************XXB4D5 LDA $61       STA $00,X       LDA $62       STA $01,X       LDA $63       STA $02,X       LDY #$00       STX $64       STY $65       STY $70       DEY        STY $0D       STX LASTPT       INX        INX        INX        STX TEMPPT       RTS ;********************************; ALLOCATE NUMBER OF BYTES IN A;********************************XXB4F4 LSR $0FXXB4F6 PHA        EOR #$FF       SEC        ADC FRETOP       LDY FRETOP+1       BCS XXB501       DEY XXB501 CPY STREND+1       BCC XXB516       BNE XXB50B       CMP STREND       BCC XXB516XXB50B STA FRETOP       STY FRETOP+1       STA FRESPC       STY FRESPC+1       TAX        PLA        RTS ;********************************;;********************************XXB516 LDX #$10       LDA $0F       BMI XXB4D2       JSR XXB526       LDA #$80       STA $0F       PLA        BNE XXB4F6;********************************; STRING GARBAGE CLEAN UP;********************************XXB526 LDX MEMSIZ       LDA MEMSIZ+1XXB52A STX FRETOP       STA FRETOP+1       LDY #$00       STY $4F       STY $4E       LDA STREND       LDX STREND+1       STA $5F       STX $60       LDA #$19   ; LOW  0019       LDX #$00   ; HIGH 0019       STA INDEX       STX INDEX+1XXB544 CMP TEMPPT       BEQ XXB54D       JSR XXB5C7       BEQ XXB544XXB54D LDA #$07       STA $53       LDA VARTAB       LDX VARTAB+1       STA INDEX       STX INDEX+1XXB559 CPX ARYTAB+1       BNE XXB561       CMP ARYTAB       BEQ XXB566XXB561 JSR XXB5BD       BEQ XXB559XXB566 STA $58       STX $59       LDA #$03       STA $53XXB56E LDA $58       LDX $59XXB572 CPX STREND+1       BNE XXB57D       CMP STREND       BNE XXB57D       JMP XXB606;********************************;;********************************XXB57D STA INDEX       STX INDEX+1       LDY #$00       LDA (INDEX),Y       TAX        INY        LDA (INDEX),Y       PHP        INY        LDA (INDEX),Y       ADC $58       STA $58       INY        LDA (INDEX),Y       ADC $59       STA $59       PLP        BPL XXB56E       TXA        BMI XXB56E       INY        LDA (INDEX),Y       LDY #$00       ASL A       ADC #$05       ADC INDEX       STA INDEX       BCC XXB5AE       INC INDEX+1XXB5AE LDX INDEX+1XXB5B0 CPX $59       BNE XXB5B8       CMP $58       BEQ XXB572XXB5B8 JSR XXB5C7       BEQ XXB5B0;********************************; CHECK STRING AREA;******************************** XXB5BD LDA (INDEX),Y       BMI XXB5F6       INY        LDA (INDEX),Y       BPL XXB5F6       INY ;********************************; CHECK STRING AREA;********************************XXB5C7 LDA (INDEX),Y       BEQ XXB5F6       INY        LDA (INDEX),Y       TAX        INY        LDA (INDEX),Y       CMP FRETOP+1       BCC XXB5DC       BNE XXB5F6       CPX FRETOP       BCS XXB5F6XXB5DC CMP $60       BCC XXB5F6       BNE XXB5E6       CPX $5F       BCC XXB5F6XXB5E6 STX $5F       STA $60       LDA INDEX       LDX INDEX+1       STA $4E       STX $4F       LDA $53       STA $55XXB5F6 LDA $53       CLC        ADC INDEX       STA INDEX       BCC XXB601       INC INDEX+1XXB601 LDX INDEX+1       LDY #$00       RTS ;********************************; CONTINUATION OF GARBAGE CLEAN UP;********************************XXB606 LDA $4F       ORA $4E       BEQ XXB601       LDA $55       AND #$04       LSR A       TAY        STA $55       LDA ($4E),Y       ADC $5F       STA $5A       LDA $60       ADC #$00       STA $5B       LDA FRETOP       LDX FRETOP+1       STA $58       STX $59       JSR XXA3BF       LDY $55       INY        LDA $58       STA ($4E),Y       TAX        INC $59       LDA $59       INY        STA ($4E),Y       JMP XXB52A;********************************; JOINING STRINGS;********************************XXB63D LDA $65       PHA        LDA $64       PHA        JSR XXAE83       JSR XXAD8F       PLA        STA $6F       PLA        STA $70       LDY #$00       LDA ($6F),Y       CLC        ADC ($64),Y       BCC XXB65D       LDX #$17       JMP XXA437;********************************;;********************************XXB65D JSR XXB475       JSR XXB67A       LDA $50       LDY $51       JSR XXB6AA       JSR XXB68C       LDA $6F       LDY $70       JSR XXB6AA       JSR XXB4CA       JMP XXADB8;********************************; MOVE STRING;********************************XXB67A LDY #$00       LDA ($6F),Y       PHA        INY        LDA ($6F),Y       TAX        INY        LDA ($6F),Y       TAY        PLA ;********************************; MOVE STRING WITH LENGTH A, POINTER IN XY;********************************XXB688 STX INDEX       STY INDEX+1XXB68C TAY        BEQ XXB699       PHA XXB690 DEY        LDA (INDEX),Y       STA (FRESPC),Y       TYA        BNE XXB690       PLA XXB699 CLC        ADC FRESPC       STA FRESPC       BCC XXB6A2       INC FRESPC+1XXB6A2 RTS ;********************************; DE-ALLOCATE TEMPORARY STRING;********************************XXB6A3 JSR XXAD8FXXB6A6 LDA $64       LDY $65XXB6AA STA INDEX       STY INDEX+1       JSR XXB6DB       PHP        LDY #$00       LDA (INDEX),Y       PHA        INY        LDA (INDEX),Y       TAX        INY        LDA (INDEX),Y       TAY        PLA        PLP        BNE XXB6D6       CPY FRETOP+1       BNE XXB6D6       CPX FRETOP       BNE XXB6D6       PHA        CLC        ADC FRETOP       STA FRETOP       BCC XXB6D5       INC FRETOP+1XXB6D5 PLA XXB6D6 STX INDEX       STY INDEX+1       RTS ;********************************; CHECK DESCRIPTOR STACK;********************************XXB6DB CPY LASTPT+1       BNE XXB6EB       CMP LASTPT       BNE XXB6EB       STA TEMPPT       SBC #$03       STA LASTPT       LDY #$00XXB6EB RTS ;********************************; CHR$ FUNCTION;********************************XXB6EC JSR XXB7A1       TXA        PHA        LDA #$01       JSR XXB47D       PLA        LDY #$00       STA ($62),Y       PLA        PLA        JMP XXB4CA;********************************; LEFT$ FUNCTION;********************************XXB700 JSR XXB761       CMP ($50),Y       TYA XXB706 BCC XXB70C       LDA ($50),Y       TAX        TYA XXB70C PHA XXB70D TXA XXB70E PHA        JSR XXB47D       LDA $50       LDY $51       JSR XXB6AA       PLA        TAY        PLA        CLC        ADC INDEX       STA INDEX       BCC XXB725       INC INDEX+1XXB725 TYA        JSR XXB68C       JMP XXB4CA;********************************; RIGHT$ FUNCTIO;********************************XXB72C JSR XXB761       CLC        SBC ($50),Y       EOR #$FF       JMP XXB706;********************************; MID$ FUNCTION;********************************XXB737 LDA #$FF   ; DEFAULT 3 PARAMETER       STA $65       JSR CHRGOT       CMP #$29      ;')'       BEQ XXB748       JSR XXAEFD       JSR XXB79EXXB748 JSR XXB761       BEQ XXB798       DEX        TXA        PHA        CLC        LDX #$00       SBC ($50),Y       BCS XXB70D       EOR #$FF       CMP $65       BCC XXB70E       LDA $65       BCS XXB70E;********************************; GET FIRST 2 PARAMETERS FOR; LEFT$, RIGHT$ AND MID$;********************************XXB761 JSR XXAEF7       PLA        TAY        PLA        STA $55       PLA        PLA        PLA        TAX        PLA        STA $50       PLA        STA $51       LDA $55       PHA        TYA        PHA        LDY #$00       TXA        RTS ;********************************; LEN FUNCTION;********************************XXB77C JSR XXB782       JMP XXB3A2;********************************;;********************************XXB782 JSR XXB6A3       LDX #$00       STX $0D       TAY        RTS ;********************************; ASC FUNCTION;********************************XXB78B JSR XXB782       BEQ XXB798       LDY #$00       LDA (INDEX),Y       TAY        JMP XXB3A2;********************************;;********************************XXB798 JMP XXB248;********************************; FETCH INTEGER VALUE IN X AND CHECK RANGE;********************************XXB79B JSR CHRGETXXB79E JSR XXAD8AXXB7A1 JSR XXB1B8       LDX $64       BNE XXB798       LDX $65       JMP CHRGOT;********************************; VAL FUNCTION;********************************XXB7AD JSR XXB782       BNE XXB7B5       JMP XXB8F7;********************************;;********************************XXB7B5 LDX $7A       LDY $7B       STX $71       STY $72       LDX INDEX       STX $7A       CLC        ADC INDEX       STA INDEX+2       LDX INDEX+1       STX $7B       BCC XXB7CD       INX XXB7CD STX INDEX+3       LDY #$00       LDA (INDEX+2),Y       PHA        TYA        STA (INDEX+2),Y       JSR CHRGOT       JSR XXBCF3       PLA        LDY #$00       STA (INDEX+2),YXXB7E2 LDX $71       LDY $72       STX $7A       STY $7B       RTS ;********************************; GET ADDRESS INTO LINNUM/LINNUM+1 AND INTEGER IN X;********************************XXB7EB JSR XXAD8A       JSR XXB7F7XXB7F1 JSR XXAEFD       JMP XXB79E;********************************; CONVERT FLOAT TI INTEGER IN LINNUM/$1;********************************XXB7F7 LDA $66       BMI XXB798       LDA $61       CMP #$91       BCS XXB798       JSR XXBC9B       LDA $64       LDY $65       STY LINNUM       STA LINNUM+1       RTS ;********************************; PEEK FUNCTIO;********************************XXB80D LDA LINNUM+1       PHA        LDA LINNUM       PHA        JSR XXB7F7       LDY #$00       LDA (LINNUM),Y       TAY        PLA        STA LINNUM       PLA        STA LINNUM+1       JMP XXB3A2;********************************; POKE COMMAND;********************************ZZB824 JSR XXB7EB       TXA        LDY #$00       STA (LINNUM),YXXB82C RTS ;********************************; WAIT COMMAND;********************************ZZB82D JSR XXB7EB       STX $49       LDX #$00       JSR CHRGOT       BEQ XXB83C       JSR XXB7F1XXB83C STX $4A       LDY #$00XXB840 LDA (LINNUM),Y       EOR $4A       AND $49       BEQ XXB840XXB848 RTS ;********************************; ADD 0.5 TO FLOAT ACCU (ROUNDING);********************************XXB849 LDA #$11       LDY #$BF       JMP XXB867;********************************; MINUS OPERATOR;********************************XXB850 JSR XXBA8CKKB853 LDA $66       EOR #$FF       STA $66       EOR $6E       STA $6F       LDA $61       JMP XXB86A;********************************;;********************************XXB862 JSR XXB999       BCC XXB8A3;********************************; ADD FLOAT INDEXED BY AY TO FLOAT ACCU;********************************XXB867 JSR XXBA8C;********************************; PLUS OPERATOR;********************************XXB86A BNE XXB86F       JMP XXBBFC;********************************;;********************************XXB86F LDX $70       STX $56       LDX #$69       LDA $69XXB877 TAY        BEQ XXB848       SEC        SBC $61       BEQ XXB8A3       BCC XXB893       STY $61       LDY $6E       STY $66       EOR #$FF       ADC #$00       LDY #$00       STY $56       LDX #$61       BNE XXB897XXB893 LDY #$00       STY $70XXB897 CMP #$F9       BMI XXB862       TAY        LDA $70       LSR $01,X       JSR XXB9B0XXB8A3 BIT $6F       BPL XXB8FE       LDY #$61       CPX #$69       BEQ XXB8AF       LDY #$69XXB8AF SEC        EOR #$FF       ADC $56       STA $70       LDA $0004,Y       SBC $04,X       STA $65       LDA $0003,Y       SBC $03,X       STA $64       LDA $0002,Y       SBC $02,X       STA $63       LDA $0001,Y       SBC $01,X       STA $62XXB8D2 BCS XXB8D7       JSR XXB947XXB8D7 LDY #$00       TYA        CLC XXB8DB LDX $62       BNE XXB929       LDX $63       STX $62       LDX $64       STX $63       LDX $65       STX $64       LDX $70       STX $65       STY $70       ADC #$08       CMP #$20      ;' '       BNE XXB8DBXXB8F7 LDA #$00XXB8F9 STA $61XXB8FB STA $66       RTS ;********************************; ADD FRACTIONS;********************************XXB8FE ADC $56       STA $70       LDA $65       ADC $6D       STA $65       LDA $64       ADC $6C       STA $64       LDA $63       ADC $6B       STA $63       LDA $62       ADC $6A       STA $62       JMP XXB936;********************************; POSTSHIFT;********************************XXB91D ADC #$01       ASL $70       ROL $65       ROL $64       ROL $63       ROL $62XXB929 BPL XXB91D       SEC        SBC $61       BCS XXB8F7       EOR #$FF       ADC #$01       STA $61XXB936 BCC XXB946XXB938 INC $61       BEQ XXB97E       ROR $62       ROR $63       ROR $64       ROR $65       ROR $70XXB946 RTS ;********************************; NEGATE FLOAT ACCU;********************************XXB947 LDA $66       EOR #$FF       STA $66XXB94D LDA $62       EOR #$FF       STA $62       LDA $63       EOR #$FF       STA $63       LDA $64       EOR #$FF       STA $64       LDA $65       EOR #$FF       STA $65       LDA $70       EOR #$FF       STA $70       INC $70       BNE XXB97D;********************************; INCREMENT FRACTION;********************************XXB96F INC $65       BNE XXB97D       INC $64       BNE XXB97D       INC $63       BNE XXB97D       INC $62XXB97D RTS ;********************************;;********************************XXB97E LDX #$0F   ; ERROR NUMBER       JMP XXA437;********************************; PRESHIFT;********************************XXB983 LDX #$25      ;'%'XXB985 LDY $04,X       STY $70       LDY $03,X       STY $04,X       LDY $02,X       STY $03,X       LDY $01,X       STY $02,X       LDY $68       STY $01,XXXB999 ADC #$08       BMI XXB985       BEQ XXB985       SBC #$08       TAY        LDA $70       BCS XXB9BAXXB9A6 ASL $01,X       BCC XXB9AC       INC $01,XXXB9AC ROR $01,X       ROR $01,XXXB9B0 ROR $02,X       ROR $03,X       ROR $04,X       ROR A       INY        BNE XXB9A6XXB9BA CLC        RTS ;********************************; 1;********************************WWB9BC .BYTE $81       .BYTE $00       .BYTE $00       .BYTE $00       .BYTE $00;********************************; LOG POLYNOMIAL TABLE;********************************WWB9C1 .BYTE $03   ; DEGREE 4       .BYTE $7F       .BYTE $5E       .BYTE $56       .BYTE $CB       .BYTE $79       .BYTE $80       .BYTE $13       .BYTE $9B       .BYTE $0B       .BYTE $64       .BYTE $80       .BYTE $76       .BYTE $38       .BYTE $93       .BYTE $16       .BYTE $82       .BYTE $38       .BYTE $AA       .BYTE $3B       .BYTE $20;********************************; 0,5 * SQR(2);********************************WWB9D6 .BYTE $80       .BYTE $35       .BYTE $04       .BYTE $F3       .BYTE $34;********************************; SQR(2);********************************WWB9DB .BYTE $81       .BYTE $35       .BYTE $04       .BYTE $F3       .BYTE $34;********************************; -0.5;********************************WWB9E0 .BYTE $80       .BYTE $80       .BYTE $00       .BYTE $00       .BYTE $00;********************************; LOG(2);********************************WWB9E5 .BYTE $80       .BYTE $31       .BYTE $72       .BYTE $17       .BYTE $F8;********************************; LOG FUNCTION;********************************XXB9EA JSR XXBC2B       BEQ XXB9F1       BPL XXB9F4XXB9F1 JMP XXB248;********************************;;********************************XXB9F4 LDA $61       SBC #$7F       PHA        LDA #$80       STA $61       LDA #<WWB9D6 ;#$D6   ; LOW  B9D6       LDY #>WWB9D6 ;#$B9   ; HIGH B9D6       JSR XXB867       LDA #<WWB9DB ;#$DB   ; LOW  B9DB       LDY #>WWB9DB ;#$B9   ; HIGH B9DB       JSR XXBB0F       LDA #<WWB9BC ;#$BC   ; LOW  B9BC       LDY #>WWB9BC ;#$B9   ; HIGH B9BC       JSR XXB850       LDA #<WWB9C1 ;#$C1   ; LOW  B9C1       LDY #>WWB9C1 ;#$B9   ; HIGH B9C1       JSR POLY1       LDA #<WWB9E0 ;#$E0   ; LOW  B9E0       LDY #>WWB9E0 ;#$B9   ; HIGH B9E       JSR XXB867       PLA        JSR XXBD7E       LDA #<WWB9E5 ;#$E5   ; LOW  B9E5       LDY #>WWB9E5 ;#$B9   ; HIGH B9E5XXBA28 JSR XXBA8C;********************************; TIMES OPERATOR;********************************ZZBA2B BNE XXBA30       JMP XXBA8B;********************************;;********************************XXBA30 JSR XXBAB7       LDA #$00       STA RESHO       STA RESHO+1       STA RESHO+2       STA RESHO+3       LDA $70       JSR XXBA59       LDA $65       JSR XXBA59       LDA $64       JSR XXBA59       LDA $63       JSR XXBA59       LDA $62       JSR XXBA5E       JMP XXBB8F;********************************;;********************************XXBA59 BNE XXBA5E       JMP XXB983;********************************;;********************************XXBA5E LSR A       ORA #$80XXBA61 TAY        BCC XXBA7D       CLC        LDA RESHO+3       ADC $6D       STA RESHO+3       LDA RESHO+2       ADC $6C       STA RESHO+2       LDA RESHO+1       ADC $6B       STA RESHO+1       LDA RESHO       ADC $6A       STA RESHOXXBA7D ROR RESHO       ROR RESHO+1       ROR RESHO+2       ROR RESHO+3       ROR $70       TYA        LSR A       BNE XXBA61XXBA8B RTS ;********************************; MOVE FLOAT INDEXED BY AY INTO SECOND FLOAT ACCU;********************************XXBA8C STA INDEX       STY INDEX+1       LDY #$04       LDA (INDEX),Y       STA $6D       DEY        LDA (INDEX),Y       STA $6C       DEY        LDA (INDEX),Y       STA $6B       DEY        LDA (INDEX),Y       STA $6E       EOR $66       STA $6F       LDA $6E       ORA #$80       STA $6A       DEY        LDA (INDEX),Y       STA $69       LDA $61       RTS ;********************************; ADD EXPONENTS;********************************XXBAB7 LDA $69KKBAB9 BEQ XXBADA       CLC        ADC $61       BCC XXBAC4       BMI XXBADF       CLC ;********************************       .BYTE $2C;********************************XXBAC4 BPL XXBADA       ADC #$80       STA $61KKBACA BNE XXBACF       JMP XXB8FB;********************************;;********************************XXBACF LDA $6F       STA $66       RTS ;********************************;;********************************KKBAD4 LDA $66       EOR #$FF       BMI XXBADFXXBADA PLA        PLA        JMP XXB8F7;********************************;;********************************XXBADF JMP XXB97E;********************************; MULTIPLY FLOAT ACCU BY 10;********************************XXBAE2 JSR XXBC0C       TAX        BEQ XXBAF8       CLC        ADC #$02       BCS XXBADFXXBAED LDX #$00       STX $6F       JSR XXB877       INC $61       BEQ XXBADFXXBAF8 RTS ;********************************; CONSTANT 10 FOR DIVISION;********************************WWBAF9 .BYTE $84       .BYTE $20       .BYTE $00       .BYTE $00       .BYTE $00;********************************; DIVIDE FLOAT BY 10;********************************XXBAFE JSR XXBC0C       LDA #<WWBAF9 ;#$F9   ; LOW  BAF9       LDY #>WWBAF9 ;#$BA   ; HIGH BAF       LDX #$00KKBB07 STX $6F       JSR XXBBA2       JMP XXBB12;********************************; DIVIDE NUMBER INDEXED BY AY BY FLOAT ACCU;********************************XXBB0F JSR XXBA8C;********************************; DIVIDE OPERATOR;********************************XXBB12 BEQ XXBB8A       JSR XXBC1B       LDA #$00       SEC        SBC $61       STA $61       JSR XXBAB7       INC $61       BEQ XXBADF       LDX #$FC       LDA #$01XXBB29 LDY $6A       CPY $62       BNE XXBB3F       LDY $6B       CPY $63       BNE XXBB3F       LDY $6C       CPY $64       BNE XXBB3F       LDY $6D       CPY $65XXBB3F PHP        ROL A       BCC XXBB4C       INX        STA RESHO+3,X       BEQ XXBB7A       BPL XXBB7E       LDA #$01XXBB4C PLP        BCS XXBB5DXXBB4F ASL $6D       ROL $6C       ROL $6B       ROL $6A       BCS XXBB3F       BMI XXBB29       BPL XXBB3FXXBB5D TAY        LDA $6D       SBC $65       STA $6D       LDA $6C       SBC $64       STA $6C       LDA $6B       SBC $63       STA $6B       LDA $6A       SBC $62       STA $6A       TYA        JMP XXBB4F;********************************;;********************************XXBB7A LDA #$40      ;'@'       BNE XXBB4CXXBB7E ASL A       ASL A       ASL A       ASL A       ASL A       ASL A       STA $70       PLP        JMP XXBB8F;********************************;;********************************XXBB8A LDX #$14   ; ERROR NUMBER       JMP XXA437;********************************;;********************************XXBB8F LDA RESHO       STA $62       LDA RESHO+1       STA $63       LDA RESHO+2       STA $64       LDA RESHO+3       STA $65       JMP XXB8D7;********************************;;********************************XXBBA2 STA INDEX       STY INDEX+1       LDY #$04       LDA (INDEX),Y       STA $65       DEY        LDA (INDEX),Y       STA $64       DEY        LDA (INDEX),Y       STA $63       DEY        LDA (INDEX),Y       STA $66       ORA #$80       STA $62       DEY        LDA (INDEX),Y       STA $61       STY $70       RTS ;********************************; STORE FLOAT ACCU AT $5C-$60;********************************ZZBBC7 LDX #$5C   ; LOW  005C;********************************       .BYTE $2C;********************************; STORE FLOAT ACCU AT $57-$5B;********************************       LDX #$57   ; LOW  0057       LDY #$00   ; HIGH 0057       BEQ XXBBD4;********************************; STORE FLOAT ACCU IN INDEX AT $49/$4A;********************************XXBBD0 LDX $49       LDY $4A;********************************; STORE FLOAT ACCU IN INDEX XY;********************************XXBBD4 JSR XXBC1B       STX INDEX       STY INDEX+1       LDY #$04       LDA $65       STA (INDEX),Y       DEY        LDA $64       STA (INDEX),Y       DEY        LDA $63       STA (INDEX),Y       DEY        LDA $66       ORA #$7F       AND $62       STA (INDEX),Y       DEY        LDA $61       STA (INDEX),Y       STY $70       RTS ;********************************; MOVE SECOND FLOAT ACCU INTO FIRST;********************************XXBBFC LDA $6EXXBBFE STA $66       LDX #$05XXBC02 LDA $68,X       STA $60,X       DEX        BNE XXBC02       STX $70       RTS ;********************************; MOVE ROUNDED FLOAT ACCU INTO SECOND;********************************XXBC0C JSR XXBC1BKKBC0F LDX #$06XXBC11 LDA $60,X       STA $68,X       DEX        BNE XXBC11       STX $70XXBC1A RTS ;********************************; ROUND FLOAT ACCU ACCORDING TO GUARD BIT;********************************XXBC1B LDA $61       BEQ XXBC1A       ASL $70       BCC XXBC1AXXBC23 JSR XXB96F       BNE XXBC1A       JMP XXB938;********************************; GET SIGN OF FLOAT ACCU IN ;********************************XXBC2B LDA $61       BEQ XXBC38XXBC2F LDA $66XXBC31 ROL A       LDA #$FF       BCS XXBC38       LDA #$01XXBC38 RTS ;********************************; SGN FUNCTION;********************************XXBC39 JSR XXBC2B;********************************; MOVE SIGNED NUMBER FROM A INTO FLOAT ACCU;********************************XXBC3C STA $62       LDA #$00       STA $63       LDX #$88XXBC44 LDA $62       EOR #$FF       ROL AXXBC49 LDA #$00       STA $65       STA $64XXBC4F STX $61       STA $70       STA $66       JMP XXB8D2;********************************; ABS FUNCTION;********************************XXBC58 LSR $66       RTS ;********************************; COMPARE FLOAT ACCU TO FLOAT INDEXED BY XY;********************************XXBC5B STA INDEX+2XXBC5D STY INDEX+3       LDY #$00       LDA (INDEX+2),Y       INY        TAX        BEQ XXBC2B       LDA (INDEX+2),Y       EOR $66       BMI XXBC2F       CPX $61       BNE XXBC92       LDA (INDEX+2),Y       ORA #$80       CMP $62       BNE XXBC92       INY        LDA (INDEX+2),Y       CMP $63       BNE XXBC92       INY        LDA (INDEX+2),Y       CMP $64       BNE XXBC92       INY        LDA #$7F       CMP $70       LDA (INDEX+2),Y       SBC $65       BEQ XXBCBAXXBC92 LDA $66       BCC XXBC98       EOR #$FFXXBC98 JMP XXBC31;********************************; CONVERT FLOAT TO A 4 BYTE SIGNED INTEGER;********************************XXBC9B LDA $61       BEQ XXBCE9       SEC        SBC #$A0       BIT $66       BPL XXBCAF       TAX        LDA #$FF       STA $68       JSR XXB94D       TXA XXBCAF       LDX #$61       CMP #$F9       BPL XXBCBB       JSR XXB999       STY $68XXBCBA RTS ;********************************;;********************************XXBCBB TAY        LDA $66       AND #$80       LSR $62       ORA $62       STA $62       JSR XXB9B0       STY $68       RTS ;********************************; INT FUNCTION;********************************XXBCCC LDA $61       CMP #$A0       BCS XXBCF2       JSR XXBC9B       STY $70       LDA $66       STY $66       EOR #$80       ROL A       LDA #$A0       STA $61       LDA $65       STA $07       JMP XXB8D2;********************************; CLEAR FLOAT ACCU;********************************XXBCE9 STA $62       STA $63       STA $64       STA $65       TAY XXBCF2 RTS ;********************************; CONVERT STRING TO FLOAT IN FLOAT ACCU;********************************XXBCF3 LDY #$00       LDX #$0AXXBCF7 STY $5D,X       DEX        BPL XXBCF7       BCC XXBD0D       CMP #$2D      ;'-'       BNE XXBD06       STX $67       BEQ XXBD0AXXBD06 CMP #$2B      ;'+'       BNE XXBD0FXXBD0A JSR CHRGETXXBD0D BCC XXBD6AXXBD0F CMP #$2E      ;'.'       BEQ XXBD41       CMP #$45      ;'E'       BNE XXBD47       JSR CHRGET       BCC XXBD33       CMP #$AB       BEQ XXBD2E       CMP #$2D      ;'-'       BEQ XXBD2E       CMP #$AA       BEQ XXBD30       CMP #$2B      ;'+'       BEQ XXBD30       BNE XXBD35XXBD2E ROR $60XXBD30 JSR CHRGETXXBD33 BCC XXBD91XXBD35 BIT $60       BPL XXBD47       LDA #$00       SEC        SBC $5E       JMP XXBD49;********************************;;********************************XXBD41 ROR $5F       BIT $5F       BVC XXBD0AXXBD47 LDA $5EXXBD49 SEC        SBC $5D       STA $5E       BEQ XXBD62       BPL XXBD5BXXBD52 JSR XXBAFE       INC $5E       BNE XXBD52       BEQ XXBD62XXBD5B JSR XXBAE2       DEC $5E       BNE XXBD5BXXBD62 LDA $67       BMI XXBD67       RTS ;********************************;;********************************XXBD67 JMP XXBFB4;********************************;;********************************XXBD6A PHA        BIT $5F       BPL XXBD71       INC $5DXXBD71 JSR XXBAE2       PLA        SEC        SBC #$30      ;'0'       JSR XXBD7E       JMP XXBD0A;********************************; ADD SIGNED INTEGER FROM A TO FLOAT ACCU;********************************XXBD7E PHA        JSR XXBC0C       PLA        JSR XXBC3C       LDA $6E       EOR $66       STA $6F       LDX $61       JMP XXB86A;********************************; GET EXPONENT OF NUMBER FROM STRING;********************************XXBD91 LDA $5E       CMP #$0A       BCC XXBDA0       LDA #$64       BIT $60       BMI XXBDAE       JMP XXB97E;********************************;;********************************XXBDA0 ASL A       ASL A       CLC        ADC $5E       ASL A       CLC        LDY #$00       ADC ($7A),Y       SEC        SBC #$30      ;'0'XXBDAE STA $5E       JMP XXBD30;********************************; CONSTANTS FOR FLOAT TO STRING CONVERSION;********************************ZZBDB3 .BYTE $9B,$3E,$BC,$1F,$FDWWBDB8 .BYTE $9E,$6E,$6B,$27,$FDWWBDBD .BYTE $9E,$6E,$6B,$28,$00;********************************; PRINT IN FOLLOWED BY LINE NUMBER;********************************XXBDC2 LDA #<WWA371 ;#$71   ; LOW  A371       LDY #>WWA371 ;#$A3   ; HIGH A371       JSR XXBDDA       LDA CURLIN+1       LDX CURLIN;********************************; PRINT NUMBER FROM AX;********************************XXBDCD STA $62       STX $63       LDX #$90       SEC        JSR XXBC49       JSR XXBDDFXXBDDA JMP XXAB1E;********************************; CONVERT NUMBER IN FLOAT ACCU TO STRING;********************************XXBDDD LDY #$01XXBDDF LDA #$20      ;' '       BIT $66       BPL XXBDE7       LDA #$2D      ;'-'XXBDE7       STA $00FF,Y       STA $66       STY $71       INY        LDA #$30      ;'0'       LDX $61       BNE XXBDF8       JMP XXBF04;********************************;;********************************XXBDF8 LDA #$00       CPX #$80       BEQ XXBE00       BCS XXBE09XXBE00 LDA #<WWBDBD ;#$BD   ; LOW  BDBD       LDY #>WWBDBD ;#$BD   ; HIGH BDBD       JSR XXBA28       LDA #$F7XXBE09 STA $5DXXBE0B LDA #<WWBDB8 ;#$B8   ; LOW  BDB8       LDY #>WWBDB8 ;#$BD   ; HIGH BDB8       JSR XXBC5B       BEQ XXBE32       BPL XXBE28XXBE16 LDA #<ZZBDB3 ;#$B3   ; LOW  BDB3       LDY #>ZZBDB3 ;#$BD   ; HIGH BDB3       JSR XXBC5B       BEQ XXBE21       BPL XXBE2FXXBE21 JSR XXBAE2       DEC $5D       BNE XXBE16XXBE28 JSR XXBAFE       INC $5D       BNE XXBE0BXXBE2F JSR XXB849XXBE32 JSR XXBC9B       LDX #$01       LDA $5D       CLC        ADC #$0A       BMI XXBE47       CMP #$0B       BCS XXBE48       ADC #$FF       TAX        LDA #$02XXBE47 SEC XXBE48 SBC #$02       STA $5E       STX $5D       TXA        BEQ XXBE53       BPL XXBE66XXBE53 LDY $71       LDA #$2E      ;'.'       INY        STA $00FF,Y       TXA        BEQ XXBE64       LDA #$30      ;'0'       INY        STA $00FF,YXXBE64 STY $71XXBE66 LDY #$00XXBE68 LDX #$80XXBE6A LDA $65       CLC        ADC XXBF19,Y       STA $65       LDA $64       ADC XXBF18,Y       STA $64       LDA $63       ADC XXBF17,Y       STA $63       LDA $62       ADC XXBF16,Y       STA $62       INX        BCS XXBE8E       BPL XXBE6A       BMI XXBE90XXBE8E BMI XXBE6AXXBE90 TXA        BCC XXBE97       EOR #$FF       ADC #$0AXXBE97 ADC #$2F      ;'/'       INY        INY        INY        INY        STY $47       LDY $71       INY        TAX        AND #$7F       STA $00FF,Y       DEC $5D       BNE XXBEB2       LDA #$2E      ;'.'       INY        STA $00FF,YXXBEB2 STY $71       LDY $47       TXA        EOR #$FF       AND #$80       TAX        CPY #$24      ;'$'       BEQ XXBEC4       CPY #$3C      ;'<'       BNE XXBE6AXXBEC4 LDY $71XXBEC6 LDA $00FF,Y       DEY        CMP #$30      ;'0'       BEQ XXBEC6       CMP #$2E      ;'.'       BEQ XXBED3       INY XXBED3 LDA #$2B      ;'+'       LDX $5E       BEQ XXBF07       BPL XXBEE3       LDA #$00       SEC        SBC $5E       TAX        LDA #$2D      ;'-'XXBEE3 STA STACK+1,Y       LDA #$45      ;'E'       STA STACK,Y       TXA        LDX #$2F      ;'/'       SEC XXBEEF INX        SBC #$0A       BCS XXBEEF       ADC #$3A      ;':'       STA STACK+3,Y       TXA        STA STACK+2,Y       LDA #$00       STA STACK+4,Y       BEQ XXBF0CXXBF04 STA $00FF,YXXBF07 LDA #$00       STA STACK,YXXBF0C LDA #$00   ; LOW  0100       LDY #$01   ; HIGH 0100       RTS ;********************************; 0.5;********************************ZZBF11 .BYTE $80,$00,$00,$00,$00;********************************; DIVISORS FOR DECIMAL CONVERSION;********************************XXBF16 .BYTE $FAXXBF17 .BYTE $0AXXBF18 .BYTE $1FXXBF19 .BYTE $00ZZBF1A .BYTE $00,$98,$96,$80       .BYTE $FF,$F0,$BD,$C0       .BYTE $00,$01,$86,$A0       .BYTE $FF,$FF,$D8,$F0       .BYTE $00,$00,$03,$E8       .BYTE $FF,$FF,$FF,$9C       .BYTE $00,$00,$00,$0A       .BYTE $FF,$FF,$FF,$FF;********************************; DIVISORS FOR TIME CONVERSION;********************************ZZBF3A .BYTE $FF,$DF,$0A,$80       .BYTE $00,$03,$4B,$C0       .BYTE $FF,$FF,$73,$60       .BYTE $00,$00,$0E,$10       .BYTE $FF,$FF,$FD,$A8       .BYTE $00,$00,$00,$3C;********************************; UNUSED; IS THIS SOME VERSION ID?;********************************ZZBF52 .BYTE $EC;********************************; UNUSED;********************************ZZBF53 .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA;********************************; SQR FUNCTION;********************************XXBF71 JSR XXBC0C       LDA #<ZZBF11 ;#$11       LDY #>ZZBF11 ;#$BF       JSR XXBBA2;********************************; POWER OPERATOR;********************************ZZBF7B BEQ XXBFED       LDA $69       BNE XXBF84       JMP XXB8F9;********************************;;********************************XXBF84 LDX #$4E   ; LOW  004E       LDY #$00   ; HIGH 004E       JSR XXBBD4       LDA $6E       BPL XXBF9E       JSR XXBCCC       LDA #$4E   ; LOW  004E       LDY #$00   ; HIGH 004E       JSR XXBC5B       BNE XXBF9E       TYA        LDY $07XXBF9E JSR XXBBFE       TYA        PHA        JSR XXB9EA       LDA #$4E   ; LOW  004E       LDY #$00   ; HIGH 004E       JSR XXBA28       JSR XXBFED       PLA        LSR A       BCC XXBFBE;********************************; MINUS OPERATOR;********************************XXBFB4 LDA $61       BEQ XXBFBE       LDA $66       EOR #$FF       STA $66XXBFBE RTS ;********************************; FLOATING POINT CONSTANDS FOR EXP;; 1/LOG(2);********************************ZZBFBF .BYTE $81,$38,$AA,$3B,$29;********************************; EXP POLYNOMIAL TABLE;********************************ZZBFC4 .BYTE $07   ; DEGREE 8       .BYTE $71,$34,$58,$3E,$56       .BYTE $74,$16,$7E,$B3,$1B       .BYTE $77,$2F,$EE,$E3,$85       .BYTE $7A,$1D,$84,$1C,$2A       .BYTE $7C,$63,$59,$58,$0A       .BYTE $7E,$75,$FD,$E7,$C6       .BYTE $80,$31,$72,$18,$10       .BYTE $81,$00,$00,$00,$00;********************************; EXP COMMAND;********************************XXBFED LDA #<ZZBFBF ;#$BF       LDY #>ZZBFBF ;#$BF       JSR XXBA28       LDA $70       ADC #$50      ;'P'       BCC XXBFFD       JSR XXBC23XXBFFD JMP KERNAL ;$E000;********************************.END