*=$E000;********************************; COMMODORE 64 KERNAL ($03) ROM ;; (C) 1982 COMMODORE BUSINESS MACHINES;;********************************; CONTINUATION OF EXP FUNCTION;********************************       STA $56       JSR $BC0F       LDA $61       CMP #$88       BCC XXE00EXXE00B JSR $BAD4XXE00E JSR $BCCC       LDA $07       CLC        ADC #$81       BEQ XXE00B       SEC        SBC #$01       PHA        LDX #$05XXE01E LDA $69,X       LDY $61,X       STA $61,X       STY $69,X       DEX        BPL XXE01E       LDA $56       STA $70       JSR $B853       JSR $BFB4       LDA #$C4       LDY #$BF       JSR XXE059       LDA #$00       STA $6F       PLA        JSR $BAB9       RTS ;********************************; COMPUTE ODD DEGREES FOR SIN AND ATN;********************************XXE043 STA $71       STY $72       JSR $BBCA       LDA #$57      ;'W'       JSR $BA28       JSR XXE05D       LDA #$57      ;'W'       LDY #$00       JMP $BA28;********************************; COMPUTE POLYNOMIALS ACCORDING TO TABLE INDEXED BY AY;********************************XXE059 STA $71       STY $72XXE05D JSR $BBC7       LDA ($71),Y       STA $67       LDY $71       INY        TYA        BNE XXE06C       INC $72XXE06C STA $71       LDY $72XXE070 JSR $BA28       LDA $71       LDY $72       CLC        ADC #$05       BCC XXE07D       INY XXE07D STA $71       STY $72       JSR $B867       LDA #$5C      ;'\'       LDY #$00       DEC $67       BNE XXE070       RTS ;********************************; FLOAT NUMBERS FOR RND;********************************ZZE08D .BYTE $98,$35,$44,$7A,$00       .BYTE $68,$28,$B1,$46,$00;********************************; RND FUNCTION;********************************ZZE097 JSR $BC2B       BMI XXE0D3       BNE XXE0BE       JSR IOBASE       STX $22       STY $23       LDY #$04       LDA ($22),Y       STA $62       INY        LDA ($22),Y       STA $64       LDY #$08       LDA ($22),Y       STA $63       INY        LDA ($22),Y       STA $65       JMP XXE0E3;********************************;;********************************XXE0BE LDA #$8B       LDY #$00       JSR $BBA2       LDA #$8D       LDY #$E0       JSR $BA28       LDA #$92       LDY #$E0       JSR $B867XXE0D3 LDX $65       LDA $62       STA $65       STX $62       LDX $63       LDA $64       STA $63       STX $64XXE0E3 LDA #$00       STA $66       LDA $61       STA $70       LDA #$80       STA $61       JSR $B8D7       LDX #$8B       LDY #$00XXE0F6 JMP $BBD4;********************************; HANDLE ERRORS FOR DIRECT I/O; CALLS FROM BASIC;********************************XXE0F9 CMP #$F0       BNE XXE104       STY $38       STX $37       JMP $A663;********************************;;********************************XXE104 TAX        BNE XXE109       LDX #$1EXXE109 JMP $A437;********************************;;********************************       JSR CHROUT       BCS XXE0F9       RTS ;********************************;;********************************       JSR CHRIN       BCS XXE0F9       RTS ;********************************;;********************************       JSR XXE4AD       BCS XXE0F9       RTS ;********************************;;********************************       JSR CHKIN       BCS XXE0F9       RTS ;********************************;;********************************       JSR GETIN       BCS XXE0F9       RTS ;********************************; SYS COMMAND;********************************ZZE12A JSR $AD8A       JSR $B7F7       LDA #$E1       PHA        LDA #$46      ;'F'       PHA        LDA $030F       PHA        LDA $030C       LDX $030D       LDY $030E       PLP        JMP ($0014);********************************;;********************************       PHP        STA $030C       STX $030D       STY $030E       PLA        STA $030F       RTS ;********************************; SAVE COMMAND;********************************ZZE156 JSR XXE1D4       LDX $2D       LDY $2E       LDA #$2B      ;'+'       JSR SAVE       BCS XXE0F9       RTS ;********************************; VERIFY COMMAND;********************************ZZE165  LDA #$01       ;BIT $00A9       .BYTE $2C;********************************; LOAD COMMAND;********************************ZZE168 LDA #$00       STA $0A       JSR XXE1D4       LDA $0A       LDX $2B       LDY $2C       JSR LOAD       BCS XXE1D1       LDA $0A       BEQ XXE195       LDX #$1C       JSR READST       AND #$10       BNE XXE19E       LDA $7A       CMP #$02       BEQ XXE194       LDA #$64       LDY #$A3       JMP $AB1E;********************************;;********************************XXE194 RTS ;********************************;;********************************XXE195 JSR READST       AND #$BF       BEQ XXE1A1       LDX #$1DXXE19E JMP $A437;********************************;;********************************XXE1A1 LDA $7B       CMP #$02       BNE XXE1B5       STX $2D       STY $2E       LDA #$76       LDY #$A3       JSR $AB1E       JMP $A52A;********************************;;********************************XXE1B5 JSR $A68E       JSR $A533       JMP $A677;********************************; OPEN COMMAND;********************************ZZE1BE JSR XXE219       JSR OPEN       BCS XXE1D1       RTS ;********************************; CLOSE COMMAND;********************************ZZE1C7 JSR XXE219       LDA $49       JSR CLOSE       BCC XXE194XXE1D1 JMP XXE0F9;********************************; SET PARAMETERS FOR LOAD/VERIFY/SAVE;********************************XXE1D4 LDA #$00       JSR SETNAM       LDX #$01       LDY #$00       JSR SETLFS       JSR XXE206       JSR XXE257       JSR XXE206       JSR XXE200       LDY #$00       STX $49       JSR SETLFS       JSR XXE206       JSR XXE200       TXA        TAY        LDX $49       JMP SETLFS;********************************; SKIP COMMA AND GET INTEGER IN X;********************************XXE200 JSR XXE20E       JMP $B79E;********************************; GET CHARACTER AND CHECK FOR END OF LINE;********************************XXE206 JSR $0079       BNE XXE20D       PLA        PLA XXE20D RTS ;********************************; CHECK FOR COMMA AND SKIP IT;********************************XXE20E JSR $AEFDXXE211 JSR $0079       BNE XXE20D       JMP $AF08;********************************; GET OPEN/CLOSE PARAMETERS;********************************XXE219 LDA #$00       JSR SETNAM       JSR XXE211       JSR $B79E       STX $49       TXA        LDX #$01       LDY #$00       JSR SETLFS       JSR XXE206       JSR XXE200       STX $4A       LDY #$00       LDA $49       CPX #$03       BCC XXE23F       DEY XXE23F JSR SETLFS       JSR XXE206       JSR XXE200       TXA        TAY        LDX $4A       LDA $49       JSR SETLFS       JSR XXE206       JSR XXE20EXXE257 JSR $AD9E       JSR $B6A3       LDX $22       LDY $23       JMP SETNAM;********************************; COS FUNCTION;********************************       ;LDA #$E0      ; LOW  E2E0       ;LDY #$E2      ; HIGH E2E0       LDA #<ZZE2E0      ; LOW  E2E0       LDY #>ZZE2E0      ; HIGH E2E0       JSR $B867;********************************; SIN FUNCTION;********************************XXE26B JSR $BC0C       ;LDA #$E5      ; LOW  E2E5       ;LDY #$E2      ; HIGH E2E5       LDA #<ZZE2E5      ; LOW  E2E5       LDY #>ZZE2E5      ; HIGH E2E5       LDX $6E       JSR $BB07       JSR $BC0C       JSR $BCCC       LDA #$00       STA $6F       JSR $B853       ;LDA #$EA      ; LOW  E2EA       ;LDY #$E2      ; HIGH E2EA       LDA #<ZZE2EA      ; LOW  E2EA       LDY #>ZZE2EA      ; HIGH E2EA       JSR $B850       LDA $66       PHA        BPL XXE29D       JSR $B849       LDA $66       BMI XXE2A0       LDA $12       EOR #$FF       STA $12XXE29D JSR $BFB4;XXE2A0 LDA #$EA      ; LOW  E2EA;       LDY #$E2      ; HIGH E2EAXXE2A0 LDA #<ZZE2EA      ; LOW  E2EA       LDY #>ZZE2EA      ; HIGH E2EA       JSR $B867       PLA        BPL XXE2AD       JSR $BFB4XXE2AD LDA #$EF       LDY #$E2       JMP XXE043;********************************; TAN FUNCTION;********************************ZZE2B4 JSR $BBCA       LDA #$00       STA $12       JSR XXE26B       LDX #$4E      ; LOW  004E       LDY #$00      ; HIGH 004E       JSR XXE0F6       LDA #$57      ; LOW  005F       LDY #$00      ; HIGH 005F       JSR $BBA2       LDA #$00       STA $66       LDA $12       JSR XXE2DC       LDA #$4E      ; LOW  004E       LDY #$00      ; HIGH 004E       JMP $BB0F;********************************;;********************************XXE2DC PHA        JMP XXE29D;********************************; FLOAT NUMBERS FOR SIN, COS AND TAN;********************************; 0.5 * PIZZE2E0 .BYTE $81,$49,$0F,$DA,$A2; 2 * PIZZE2E5 .BYTE $83,$49,$0F,$DA,$A2; 0.25 * PIZZE2EA .BYTE $7F,$00,$00,$00,$00;********************************; POLYNOMIAL TABLE;********************************ZZE2EF .BYTE $05  ; DEGREE 6       .BYTE $84,$E6,$1A,$2D,$1B       .BYTE $86,$28,$07,$FB,$F8       .BYTE $87,$99,$68,$89,$01       .BYTE $87,$23,$35,$DF,$E1       .BYTE $86,$A5,$5D,$E7,$28       .BYTE $83,$49,$0F,$DA,$A2;********************************; ATN FUNCTION;********************************       LDA $66       PHA        BPL XXE316       JSR $BFB4XXE316 LDA $61       PHA        CMP #$81       BCC XXE324       LDA #$BC      ; LOW  B9BC       LDY #$B9      ; HIGH B9BC       JSR $BB0F;XXE324 LDA #$3E      ; LOW  E33E;       LDY #$E3      ; HIGH E33EXXE324 LDA #<ZZE33E      ; LOW  E33E       LDY #>ZZE33E      ; HIGH E33E       JSR XXE043       PLA        CMP #$81       BCC XXE337       ;LDA #$E0      ; LOW  E2E0       ;LDY #$E2      ; HIGH E2E0       LDA #<ZZE2E0      ; LOW  E2E0       LDY #>ZZE2E0      ; HIGH E2E0       JSR $B850XXE337 PLA        BPL XXE33D       JMP $BFB4;********************************;;********************************XXE33D RTS ;********************************; FLOAT NUMBERS FOR ATN; POLYNOMIAL TABLE;********************************ZZE33E .BYTE $0B   ; DEGREE 12       .BYTE $76,$B3,$83,$BD,$D3       .BYTE $79,$1E,$F4,$A6,$F5       .BYTE $7B,$83,$FC,$B0,$10       .BYTE $7C,$0C,$1F,$67,$CA       .BYTE $7C,$DE,$53,$CB,$C1       .BYTE $7D,$14,$64,$70,$4C       .BYTE $7D,$B7,$EA,$51,$7A       .BYTE $7D,$63,$30,$88,$7E       .BYTE $7E,$92,$44,$99,$3A       .BYTE $7E,$4C,$CC,$91,$C7       .BYTE $7F,$AA,$AA,$AA,$13       .BYTE $81,$00,$00,$00,$00;********************************; WARM START ENTRY;********************************       JSR CLRCHN       LDA #$00       STA $13       JSR $A67A       CLI XXE386 LDX #$80       JMP ($0300)   ; NORMALLY E38B;********************************; HANDLE ERROR MESSAGES;********************************XXE38B TXA        BMI XXE391       JMP $A43A;********************************XXE391 JMP $A474;********************************; RESET ROUTINE;********************************ZZE394 JSR XXE453       JSR XXE3BF       JSR XXE422       LDX #$FB       TXS        BNE XXE386;********************************; CHARACTER FETCH CODE FOR ZERO PAGE $0073-$008F;********************************XXE3A2 INC $7A       BNE XXE3A8       INC $7B;XXE3A8 LDA XXEA60XXE3A8 LDA XXEA61-1       CMP #$3A      ; COLON ;':'       BCS XXE3B9       CMP #$20      ; SPACE ' '       BEQ XXE3A2       SEC        SBC #$30      ; '0'       SEC        SBC #$D0XXE3B9 RTS ;********************************; FIRST RND SEED VALUE;********************************       .BYTE $80,$4F,$C7,$52,$58;********************************; INITIALISATION OF BASIC;********************************XXE3BF LDA #$4C      ;'L'       STA $54       STA $0310       LDA #$48      ; LOW  B248       LDY #$B2      ; HIGH B248       STA $0311       STY $0312       LDA #$91      ; LOW B391       LDY #$B3      ; HIGH B391       STA $05       STY $06       LDA #$AA      ; LOW  B1AA       LDY #$B1      ; HIGH B1AA       STA $03       STY $04       LDX #$1CXXE3E2 LDA XXE3A2,X       STA $73,X       DEX        BPL XXE3E2       LDA #$03       STA $53       LDA #$00       STA $68       STA $13       STA $18       LDX #$01       STX $01FD       STX $01FC       LDX #$19       STX $16       SEC        JSR MEMBOT       STX $2B       STY $2C       SEC        JSR MEMTOP       STX $37       STY $38       STX $33       STY $34       LDY #$00       TYA        STA ($2B),Y       INC $2B       BNE XXE421       INC $2CXXE421 RTS ;********************************; PRINT BASIC START UP MESSAGES;********************************XXE422 LDA $2B       LDY $2C       JSR $A408       ;LDA #$73      ; LOW  E473       ;LDY #$E4      ; HIGH E473       LDA #<ZZE473   ; LOW  E473       LDY #>ZZE473   ; HIGH E473       JSR $AB1E       LDA $37       SEC        SBC $2B       TAX        LDA $38       SBC $2C       JSR $BDCD       ;LDA #$60      ; LOW  E460       ;LDY #$E4      ; HIGH E460       LDA #<ZZE460   ; LOW  E460       LDY #>ZZE460   ; HIGH E460       JSR $AB1E       JMP $A644;********************************; VECTORS FOR $0300-$030B;********************************XXE447 .WORD $E38B       .WORD $A483       .WORD $A57C       .WORD $A71A       .WORD $A7E4       .WORD $AE86;********************************; INITIALIZE VECTORS;********************************XXE453 LDX #$0BXXE455 LDA XXE447,X       STA $0300,X       DEX        BPL XXE455       RTS ;********************************; STARTUP MESSAGES;********************************ZZE45F .BYTE $00ZZE460 .TEXT ' BASIC BYTES FREE'       .BYTE $0D       .BYTE $00ZZE473 .BYTE $93       .BYTE $0D       .TEXT '    **** COMMODORE 64 BASIC V2 ****'       .BYTE $0D       .BYTE $0D       .TEXT ' 64K RAM SYSTEM  '       .BYTE $00ZZE4AC .BYTE $81;********************************; SET OUTPUT DEVICE;********************************XXE4AD PHA        JSR CHKOUT       TAX        PLA        BCC XXE4B6       TXA XXE4B6 RTS ;********************************; UNUSED;********************************       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA       .BYTE $AA,$AA,$AA,$AA;********************************XXE4D3 STA $A9       LDA #$01       STA $AB       RTS ;********************************; CLEAR BYTE IN COLOR RAM;********************************XXE4DA LDA $0286       STA ($F3),Y       RTS ;********************************; PAUSE AFTER FINDING A FILE ON CASETTE;********************************XXE4E0 ADC #$02XXE4E2 LDY $91       INY        BNE XXE4EB       CMP $A1       BNE XXE4E2XXE4EB RTS ;********************************; BAUD RATE FACTOR TABLE;********************************       .WORD $2619 ; 50       .WORD $1944 ; 75       .WORD $111A ; 110       .WORD $0DE8 ; 134.5       .WORD $0C70 ; 150       .WORD $0606 ; 300       .WORD $02D1 ; 600       .WORD $0137 ; 1200       .WORD $00AE ; 1800       .WORD $0069 ; 2400;********************************; READ BASE ADDRESS OF I/O DEVICE INTO XY;********************************XXE500 LDX #$00       LDY #$DC       RTS ;********************************; READ SCREEN SIZE;********************************XXE505 LDX #$28      ;'('       LDY #$19       RTS ;********************************; READ/SET XY CURSOR POSITION;********************************XXE50A BCS XXE513       STX $D6       STY $D3       JSR XXE56CXXE513 LDX $D6       LDY $D3       RTS ;********************************; INITIALISE SCREEN AND KEYBOARD;********************************XXE518 JSR XXE5A0       LDA #$00       STA $0291       STA $CF       ;LDA #$48      ; LOW  EB48       LDA #<ZZEB48      ; LOW  EB48       STA $028F       ;LDA #$EB      ; HIGH EB48       LDA #>ZZEB48      ; HIGH EB48       STA $0290       LDA #$0A       STA $0289       STA $028C       LDA #$0E       STA $0286       LDA #$04       STA $028B       LDA #$0C       STA $CD       STA $CCXXE544 LDA $0288       ORA #$80       TAY        LDA #$00       TAX XXE54D STY $D9,X       CLC        ADC #$28      ;'('       BCC XXE555       INY XXE555 INX        CPX #$1A       BNE XXE54D       LDA #$FF       STA $D9,X       LDX #$18XXE560 JSR XXE9FF       DEX        BPL XXE560XXE566 LDY #$00       STY $D3       STY $D6;********************************; SET ADDRESS OF CURENT SCREEN LINE;********************************XXE56C LDX $D6       LDA $D3XXE570 LDY $D9,X       BMI XXE57C       CLC        ADC #$28      ;'('       STA $D3       DEX        BPL XXE570XXE57C JSR XXE9F0       LDA #$27      ;'''       INX XXE582 LDY $D9,X       BMI XXE58C       CLC        ADC #$28      ;'('       INX        BPL XXE582XXE58C STA $D5       JMP XXEA24;********************************;;********************************XXE591 CPX $C9       BEQ XXE598       JMP XXE6ED;********************************XXE598 RTS ;********************************; PADDING;********************************       NOP ;********************************; THIS CODE IS UNUSED BY KERNEL; SINCE NO OTHER PART OF THE; ROM JUMPS TO THIS LOCATION!;********************************       JSR XXE5A0       JMP XXE566;********************************; INITIALISE VIC CHIP;********************************XXE5A0 LDA #$03       STA $9A       LDA #$00       STA $99       LDX #$2F      ;'/'XXE5AA LDA XXECB8,X       STA $CFFF,X       DEX        BNE XXE5AA       RTS ;********************************; GET CHARACTER FROM KEYBOARD BUFFER;********************************XXE5B4 LDY $0277       LDX #$00XXE5B9 LDA $0278,X       STA $0277,X       INX        CPX $C6       BNE XXE5B9       DEC $C6       TYA        CLI        CLC        RTS ;********************************; WAIT FOR RETURN FOR KEYBOARD;********************************XXE5CA JSR XXE716XXE5CD LDA $C6       STA $CC       STA $0292       BEQ XXE5CD       SEI        LDA $CF       BEQ XXE5E7       LDA $CE       LDX $0287       LDY #$00       STY $CF       JSR XXEA13XXE5E7 JSR XXE5B4       CMP #$83       BNE XXE5FE       LDX #$09       SEI        STX $C6XXE5F3 LDA XXECE6,X       STA $0276,X       DEX        BNE XXE5F3       BEQ XXE5CDXXE5FE CMP #$0D       BNE XXE5CA       LDY $D5       STY $D0XXE606 LDA ($D1),Y       CMP #$20      ;' '       BNE XXE60F       DEY        BNE XXE606XXE60F INY        STY $C8       LDY #$00       STY $0292       STY $D3       STY $D4       LDA $C9       BMI XXE63A       LDX $D6       JSR XXE591       CPX $C9       BNE XXE63A       LDA $CA       STA $D3       CMP $C8       BCC XXE63A       BCS XXE65D;********************************; GET CHARACTER FROM DEVICE 0 OR 3;********************************XXE632 TYA        PHA        TXA        PHA        LDA $D0       BEQ XXE5CD;********************************; GET CHARACTER FROM CURRENT SCREEN LINE;********************************XXE63A LDY $D3       LDA ($D1),Y       STA $D7       AND #$3F      ;'?'       ASL $D7       BIT $D7       BPL XXE64A       ORA #$80XXE64A BCC XXE650       LDX $D4       BNE XXE654XXE650 BVS XXE654       ORA #$40      ;'@'XXE654 INC $D3       JSR XXE684       CPY $C8       BNE XXE674XXE65D LDA #$00       STA $D0       LDA #$0D       LDX $99       CPX #$03       BEQ XXE66F       LDX $9A       CPX #$03       BEQ XXE672XXE66F JSR XXE716XXE672 LDA #$0DXXE674 STA $D7       PLA        TAX        PLA        TAY        LDA $D7       CMP #$DE      ; SCREEN PI CODE       BNE XXE682       LDA #$FF      ; PETSCII PI CODEXXE682 CLC        RTS ;********************************; CHECK FOR QUOTE MARK AND SET FLAG;********************************XXE684 CMP #$22      ; QUOTE MARK '"'       BNE XXE690       LDA $D4       EOR #$01       STA $D4       LDA #$22      ; QUOTE MARK '"'XXE690 RTS ;********************************; FILL SCREEN AT CURRENT POSITION;********************************XXE691 ORA #$40      ;'@'XXE693 LDX $C7       BEQ XXE699XXE697 ORA #$80XXE699 LDX $D8       BEQ XXE69F       DEC $D8XXE69F LDX $0286       JSR XXEA13       JSR XXE6B6;********************************; RETURN FROM OUTPUT TO THE SCREEN;********************************XXE6A8 PLA        TAY        LDA $D8       BEQ XXE6B0       LSR $D4XXE6B0 PLA        TAX        PLA        CLC        CLI        RTS ;********************************; GET/INSERT NEW LINE;********************************XXE6B6 JSR XXE8B3       INC $D3       LDA $D5       CMP $D3       BCS XXE700       CMP #$4F      ;'O'       BEQ XXE6F7       LDA $0292       BEQ XXE6CD       JMP XXE967;********************************;;********************************XXE6CD LDX $D6       CPX #$19       BCC XXE6DA       JSR XXE8EA       DEC $D6       LDX $D6XXE6DA ASL $D9,X       LSR $D9,X       INX        LDA $D9,X       ORA #$80       STA $D9,X       DEX        LDA $D5       CLC        ADC #$28      ;'('       STA $D5XXE6ED LDA $D9,X       BMI XXE6F4       DEX        BNE XXE6EDXXE6F4 JMP XXE9F0;********************************;;********************************XXE6F7 DEC $D6       JSR XXE87C       LDA #$00       STA $D3XXE700 RTS ;********************************; MOVE BACKWARDS OVER A LINE BOUNDARY;********************************XXE701 LDX $D6       BNE XXE70B       STX $D3       PLA        PLA        BNE XXE6A8XXE70B DEX        STX $D6       JSR XXE56C       LDY $D5       STY $D3       RTS ;********************************; PUT A CHARACTER TO SCREEN;********************************XXE716 PHA        STA $D7       TXA        PHA        TYA        PHA        LDA #$00       STA $D0       LDY $D3       LDA $D7       BPL XXE72A       JMP XXE7D4;********************************;;********************************XXE72A CMP #$0D      ; RETURN CODE       BNE XXE731       JMP XXE891;********************************;;********************************XXE731 CMP #$20      ;' '       BCC XXE745       CMP #$60       BCC XXE73D       AND #$DF       BNE XXE73FXXE73D AND #$3F      ;'?'XXE73F JSR XXE684       JMP XXE693;********************************;;********************************XXE745 LDX $D8       BEQ XXE74C       JMP XXE697;********************************;;********************************XXE74C CMP #$14      ; DELETE CODE       BNE XXE77E       TYA        BNE XXE759       JSR XXE701       JMP XXE773;********************************;;********************************XXE759 JSR XXE8A1       DEY        STY $D3       JSR XXEA24XXE762 INY        LDA ($D1),Y       DEY        STA ($D1),Y       INY        LDA ($F3),Y       DEY        STA ($F3),Y       INY        CPY $D5       BNE XXE762XXE773 LDA #$20      ; SPACE ' '       STA ($D1),Y       LDA $0286       STA ($F3),Y       BPL XXE7CBXXE77E LDX $D4       BEQ XXE785       JMP XXE697;********************************;;********************************XXE785 CMP #$12      ; REVERSE CODE       BNE XXE78B       STA $C7XXE78B CMP #$13      ; HOME CODE       BNE XXE792       JSR XXE566XXE792 CMP #$1D      ; CSR RIGHT       BNE XXE7AD       INY        JSR XXE8B3       STY $D3       DEY        CPY $D5       BCC XXE7AA       DEC $D6       JSR XXE87C       LDY #$00XXE7A8 STY $D3XXE7AA JMP XXE6A8;********************************;;********************************XXE7AD CMP #$11      ; CSR DOWN       BNE XXE7CE       CLC        TYA        ADC #$28      ;'('       TAY        INC $D6       CMP $D5       BCC XXE7A8       BEQ XXE7A8       DEC $D6XXE7C0 SBC #$28      ;'('       BCC XXE7C8       STA $D3       BNE XXE7C0XXE7C8 JSR XXE87CXXE7CB JMP XXE6A8;********************************;;********************************XXE7CE JSR XXE8CB       JMP XXEC44;********************************; PUT SHIFTED CHARS TO SCREEN;********************************XXE7D4 AND #$7F      ; REMOVE SHIFT BIT       CMP #$7F      ; CODE FOR PI       BNE XXE7DC       LDA #$5E      ; SCREEN PI'^'XXE7DC CMP #$20      ;' '       BCC XXE7E3       JMP XXE691;********************************;;********************************XXE7E3 CMP #$0D     ; SHIFT RETURN       BNE XXE7EA       JMP XXE891;********************************;;********************************XXE7EA LDX $D4       BNE XXE82D       CMP #$14     ; INSERT       BNE XXE829       LDY $D5       LDA ($D1),Y       CMP #$20      ;' '       BNE XXE7FE       CPY $D3       BNE XXE805XXE7FE CPY #$4F      ;'O'       BEQ XXE826       JSR XXE965XXE805 LDY $D5       JSR XXEA24XXE80A DEY        LDA ($D1),Y       INY        STA ($D1),Y       DEY        LDA ($F3),Y       INY        STA ($F3),Y       DEY        CPY $D3       BNE XXE80A       LDA #$20      ;' '       STA ($D1),Y       LDA $0286       STA ($F3),Y       INC $D8XXE826 JMP XXE6A8;********************************;;********************************XXE829 LDX $D8       BEQ XXE832XXE82D ORA #$40      ;'@'       JMP XXE697;********************************;;********************************XXE832 CMP #$11     ; CSR UP       BNE XXE84C       LDX $D6       BEQ XXE871       DEC $D6       LDA $D3       SEC        SBC #$28      ;'('       BCC XXE847       STA $D3       BPL XXE871XXE847 JSR XXE56C       BNE XXE871XXE84C CMP #$12     ; REVERSE OFF       BNE XXE854       LDA #$00       STA $C7XXE854 CMP #$1D     ; CSR LEFT       BNE XXE86A       TYA        BEQ XXE864       JSR XXE8A1       DEY        STY $D3       JMP XXE6A8;********************************;;********************************XXE864 JSR XXE701       JMP XXE6A8;********************************XXE86A CMP #$13     ; CLR CODE       BNE XXE874       JSR XXE544XXE871 JMP XXE6A8;********************************;;********************************XXE874 ORA #$80       JSR XXE8CB       JMP XXEC4F;********************************; SET NEXT LINE NUMBER;********************************XXE87C LSR $C9       LDX $D6XXE880 INX        CPX #$19       BNE XXE888       JSR XXE8EAXXE888 LDA $D9,X       BPL XXE880       STX $D6       JMP XXE56C;********************************; ACTION FOR RETURN;********************************XXE891 LDX #$00       STX $D8       STX $C7       STX $D4       STX $D3       JSR XXE87C       JMP XXE6A8;********************************; MOVE CURSOR TO PREVIOUS LINE IF; AT START OF LINE;********************************XXE8A1 LDX #$02       LDA #$00XXE8A5 CMP $D3       BEQ XXE8B0       CLC        ADC #$28      ;'('       DEX        BNE XXE8A5       RTS ;********************************;;********************************XXE8B0 DEC $D6       RTS ;********************************; MOVE CURSOR TO NEXT LINE IF; AT END OF LINE;********************************XXE8B3 LDX #$02       LDA #$27      ;'''XXE8B7 CMP $D3       BEQ XXE8C2       CLC        ADC #$28      ;'('       DEX        BNE XXE8B7       RTS ;********************************;;********************************XXE8C2 LDX $D6       CPX #$19       BEQ XXE8CA       INC $D6XXE8CA RTS ;********************************; CHECK FOR COLOUR CHANGE CODES;********************************XXE8CB LDX #$0FXXE8CD CMP XXE8DA,X       BEQ XXE8D6       DEX        BPL XXE8CD       RTS ;********************************XXE8D6 STX $0286       RTS ;********************************; COLOUR KEY CODES;********************************XXE8DA .BYTE $90,$05,$1C,$9F,$9C,$1E,$1F,$9E       .BYTE $81,$95,$96,$97,$98,$99,$9A,$9B;********************************; SCROLL SCREEN;********************************XXE8EA LDA $AC       PHA        LDA $AD       PHA        LDA $AE       PHA        LDA $AF       PHA XXE8F6 LDX #$FF       DEC $D6       DEC $C9       DEC $02A5XXE8FF INX        JSR XXE9F0       CPX #$18       BCS XXE913       LDA XXECF1,X       STA $AC       LDA $DA,X       JSR XXE9C8       BMI XXE8FFXXE913 JSR XXE9FF       LDX #$00XXE918 LDA $D9,X       AND #$7F       LDY $DA,X       BPL XXE922       ORA #$80XXE922 STA $D9,X       INX        CPX #$18       BNE XXE918       LDA $F1       ORA #$80       STA $F1       LDA $D9       BPL XXE8F6       INC $D6       INC $02A5       LDA #$7F       STA $DC00       LDA $DC01       CMP #$FB       PHP        LDA #$7F       STA $DC00       PLP        BNE XXE956       LDY #$00XXE94D NOP        DEX        BNE XXE94D       DEY        BNE XXE94D       STY $C6XXE956 LDX $D6XXE958 PLA        STA $AF       PLA        STA $AE       PLA        STA $AD       PLA        STA $AC       RTS ;********************************; INSERT BLANK LINE IN SCREEN;********************************XXE965 LDX $D6XXE967 INX        LDA $D9,X       BPL XXE967       STX $02A5       CPX #$18       BEQ XXE981       BCC XXE981       JSR XXE8EA       LDX $02A5       DEX        DEC $D6       JMP XXE6DA;********************************;;********************************XXE981 LDA $AC       PHA        LDA $AD       PHA        LDA $AE       PHA        LDA $AF       PHA        LDX #$19XXE98F DEX        JSR XXE9F0       CPX $02A5       BCC XXE9A6       BEQ XXE9A6       LDA XXECEF,X       STA $AC       LDA $D8,X       JSR XXE9C8       BMI XXE98FXXE9A6 JSR XXE9FF       LDX #$17XXE9AB CPX $02A5       BCC XXE9BF       LDA $DA,X       AND #$7F       LDY $D9,X       BPL XXE9BA       ORA #$80XXE9BA STA $DA,X       DEX        BNE XXE9ABXXE9BF LDX $02A5       JSR XXE6DA       JMP XXE958;********************************; MOVE ONE SCREEN LINE;********************************XXE9C8 AND #$03       ORA $0288       STA $AD       JSR XXE9E0       LDY #$27      ;'''XXE9D4 LDA ($AC),Y       STA ($D1),Y       LDA ($AE),Y       STA ($F3),Y       DEY        BPL XXE9D4       RTS ;********************************; SET COLOUR AND SCREEN ADDRESSES;********************************XXE9E0 JSR XXEA24       LDA $AC       STA $AE       LDA $AD       AND #$03       ORA #$D8       STA $AF       RTS ;********************************; FETCH SCREEN ADDRESSES;********************************XXE9F0 LDA XXECF0,X       STA $D1       LDA $D9,X       AND #$03       ORA $0288       STA $D2       RTS ;********************************; CLEAR ONE SCREEN LINE;********************************XXE9FF LDY #$27      ;'''       JSR XXE9F0       JSR XXEA24XXEA07 JSR XXE4DA       LDA #$20      ;' '       STA ($D1),Y       DEY        BPL XXEA07       RTS ;********************************; PADDING;********************************       NOP ;********************************; SET CURSOR FLASH TIMING AND COLOUR MEMORY ADDRESSES;********************************XXEA13 TAY        LDA #$02       STA $CD       JSR XXEA24       TYA ;********************************; PUT A CHAR ON THE SCREEN;********************************XXEA1C LDY $D3       STA ($D1),Y       TXA        STA ($F3),Y       RTS ;********************************; SET COLOUR MEMORY ADRESS PARALLEL TO SCREEN;********************************XXEA24 LDA $D1       STA $F3       LDA $D2       AND #$03       ORA #$D8       STA $F4       RTS ;********************************; NORMAL IRQ INTERRUPT;********************************XXEA31 JSR UDTIM ; DO CLOCK       LDA $CC   ; FLASH CURSOR       BNE XXEA61       DEC $CD       BNE XXEA61       LDA #$14       STA $CD       LDY $D3       LSR $CF       LDX $0287       LDA ($D1),Y       BCS XXEA5C       INC $CF       STA $CE       JSR XXEA24       LDA ($F3),Y       STA $0287       LDX $0286       LDA $CEXXEA5C EOR #$80       JSR XXEA1C ; DISPLAY CURSORXXEA61 LDA $01    ; CHECK CASSETTE SENSE       AND #$10       BEQ XXEA71       LDY #$00       STY $C0       LDA $01       ORA #$20      ;' '       BNE XXEA79XXEA71 LDA $C0       BNE XXEA7B       LDA $01       AND #$1FXXEA79 STA $01XXEA7B JSR XXEA87 ; SCAN KEYBOARD       LDA $DC0D       PLA        TAY        PLA        TAX        PLA        RTI ;********************************; SCAN KEYBOARD;********************************XXEA87 LDA #$00       STA $028D       LDY #$40      ;'@'       STY $CB       STA $DC00       LDX $DC01       CPX #$FF       BEQ XXEAFB       TAY        LDA #$81       STA $F5       LDA #$EB       STA $F6       LDA #$FE       STA $DC00XXEAA8 LDX #$08       PHA XXEAAB LDA $DC01       CMP $DC01       BNE XXEAABXXEAB3 LSR A       BCS XXEACC       PHA        LDA ($F5),Y       CMP #$05       BCS XXEAC9       CMP #$03       BEQ XXEAC9       ORA $028D       STA $028D       BPL XXEACBXXEAC9 STY $CBXXEACB PLA XXEACC INY        CPY #$41      ;'A'       BCS XXEADC       DEX        BNE XXEAB3       SEC        PLA        ROL A       STA $DC00       BNE XXEAA8XXEADC PLA        JMP ($028F);********************************;;********************************XXEAE0 LDY $CB       LDA ($F5),Y       TAX        CPY $C5       BEQ XXEAF0       LDY #$10       STY $028C       BNE XXEB26XXEAF0 AND #$7F       BIT $028A       BMI XXEB0D       BVS XXEB42       CMP #$7FXXEAFB BEQ XXEB26       CMP #$14      ; DELETE       BEQ XXEB0D       CMP #$20      ; SPACE       BEQ XXEB0D       CMP #$1D      ; CSR RIGHT/LEFT       BEQ XXEB0D       CMP #$11      ; CSR UP/DOWN       BNE XXEB42XXEB0D LDY $028C       BEQ XXEB17       DEC $028C       BNE XXEB42XXEB17 DEC $028B       BNE XXEB42       LDY #$04       STY $028B       LDY $C6       DEY        BPL XXEB42XXEB26 LDY $CB       STY $C5       LDY $028D       STY $028E       CPX #$FF       BEQ XXEB42       TXA        LDX $C6       CPX $0289       BCS XXEB42       STA $0277,X       INX        STX $C6XXEB42 LDA #$7F       STA $DC00       RTS ;********************************;;********************************ZZEB48 LDA $028D       CMP #$03       BNE XXEB64       CMP $028E       BEQ XXEB42       LDA $0291       BMI XXEB76       LDA $D018       EOR #$02       STA $D018       JMP XXEB76;********************************; SELECT KEYBOARD TABLE;********************************XXEB64 ASL A       CMP #$08       BCC XXEB6B       LDA #$06XXEB6B TAX        LDA XXEB79,X       STA $F5       LDA XXEB7A,X       STA $F6XXEB76 JMP XXEAE0;********************************; TABLE ADDRESSES;********************************XXEB79 .BYTE $81 ; STANDARDXXEB7A .BYTE $EB       .BYTE $C2 ; SHIFT       .BYTE $EB       .BYTE $03 ; COMMODORE KEY       .BYTE $EC       .BYTE $78 ; CONTROL       .BYTE $EC;********************************; STANDARD KEYBOARD TABLE;********************************ZZEB81 .BYTE $14,$0D,$1D,$88,$85,$86,$87,$11       .BYTE $33,$57,$41,$34,$5A,$53,$45,$01       .BYTE $35,$52,$44,$36,$43,$46,$54,$58       .BYTE $37,$59,$47,$38,$42,$48,$55,$56       .BYTE $39,$49,$4A,$30,$4D,$4B,$4F,$4E       .BYTE $2B,$50,$4C,$2D,$2E,$3A,$40,$2C       .BYTE $5C,$2A,$3B,$13,$01,$3D,$5E,$2F       .BYTE $31,$5F,$04,$32,$20,$02,$51,$03       .BYTE $FF;********************************; SHIFT KEYBOARD TABLE;********************************ZZEBC2 .BYTE $94,$8D,$9D,$8C,$89,$8A,$8B,$91       .BYTE $23,$D7,$C1,$24,$DA,$D3,$C5,$01       .BYTE $25,$D2,$C4,$26,$C3,$C6,$D4,$D8       .BYTE $27,$D9,$C7,$28,$C2,$C8,$D5,$D6       .BYTE $29,$C9,$CA,$30,$CD,$CB,$CF,$CE       .BYTE $DB,$D0,$CC,$DD,$3E,$5B,$BA,$3C       .BYTE $A9,$C0,$5D,$93,$01,$3D,$DE,$3F       .BYTE $21,$5F,$04,$22,$A0,$02,$D1,$83       .BYTE $FF;********************************; COMMODORE KEY KEYBOARD TABLE;********************************ZZEC03 .BYTE $94,$8D,$9D,$8C,$89,$8A,$8B,$91       .BYTE $96,$B3,$B0,$97,$AD,$AE,$B1,$01       .BYTE $98,$B2,$AC,$99,$BC,$BB,$A3,$BD       .BYTE $9A,$B7,$A5,$9B,$BF,$B4,$B8,$BE       .BYTE $29,$A2,$B5,$30,$A7,$A1,$B9,$AA       .BYTE $A6,$AF,$B6,$DC,$3E,$5B,$A4,$3C       .BYTE $A8,$DF,$5D,$93,$01,$3D,$DE,$3F       .BYTE $81,$5F,$04,$95,$A0,$02,$AB,$83       .BYTE $FF;********************************; CHECK FOR SPECIAL PETSCII CODES;********************************XXEC44 CMP #$0E       BNE XXEC4F       LDA $D018       ORA #$02       BNE XXEC58XXEC4F CMP #$8E       BNE XXEC5E       LDA $D018       AND #$FDXXEC58 STA $D018XXEC5B JMP XXE6A8;********************************; SHIFT + COMMODORE KEY CHECK;********************************XXEC5E CMP #$08       BNE XXEC69       LDA #$80       ORA $0291       BMI XXEC72XXEC69 CMP #$09       BNE XXEC5B       LDA #$7F       AND $0291XXEC72 STA $0291       JMP XXE6A8;********************************; CONTROL KEYBOARD TABLE;********************************ZZEC78 .BYTE $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF       .BYTE $1C,$17,$01,$9F,$1A,$13,$05,$FF       .BYTE $9C,$12,$04,$1E,$03,$06,$14,$18       .BYTE $1F,$19,$07,$9E,$02,$08,$15,$16       .BYTE $12,$09,$0A,$92,$0D,$0B,$0F,$0E       .BYTE $FF,$10,$0C,$FF,$FF,$1B,$00,$FF       .BYTE $1C,$FF,$1D,$FF,$FF,$1F,$1E,$FF       .BYTE $90,$06,$FF,$05,$FF,$FF,$11,$FFXXECB8 .BYTE $FF;********************************; DEFAULT VALUES FOR VIC CHIP;********************************ZZECB9 .BYTE $00,$00 ; SPRITE 1 X,Y       .BYTE $00,$00 ; SPRITE 2 X,Y       .BYTE $00,$00 ; SPRITE 3 X,Y       .BYTE $00,$00 ; SPRITE 4 X,Y       .BYTE $00,$00 ; SPRITE 5 X,Y       .BYTE $00,$00 ; SPRITE 6 X,Y       .BYTE $00,$00 ; SPRITE 6 X,Y       .BYTE $00,$00 ; SPRITE 8 X,Y       .BYTE $00       .BYTE $9B       .BYTE $37       .BYTE $00       .BYTE $00       .BYTE $00       .BYTE $08ZZECD0 .BYTE $00 ; SPRITE Y EXPAND       .BYTE $14       .BYTE $0F       .BYTE $00       .BYTE $00ZZECD5 .BYTE $00 ; SPRITE MULTI-COLOURZZECD6 .BYTE $00 ; SPRITE MULTI-COLOUR       .BYTE $00       .BYTE $00ZZECD9 .BYTE $0E ; BOARDER COLOURZZECDA .BYTE $06 ; BACKGROUND COLOUR       .BYTE $01       .BYTE $02       .BYTE $03       .BYTE $04ZZECDF .BYTE $00 ; SPRITE COLOUR       .BYTE $01 ; SPRITE COLOUR       .BYTE $02 ; SPRITE COLOUR       .BYTE $03 ; SPRITE COLOUR       .BYTE $04 ; SPRITE COLOUR       .BYTE $05 ; SPRITE COLOUR       .BYTE $06 ; SPRITE COLOURXXECE6 .BYTE $07 ; SPRITE COLOUR;********************************; LOAD;********************************ZZECE7 .BYTE $4C       .BYTE $4F       .BYTE $41       .BYTE $44       .BYTE $0D;********************************; RUN;********************************ZZECEC .BYTE $52       .BYTE $55       .BYTE $4EXXECEF .BYTE $0D;********************************; LOW BYTES OF SCREEN LINE ADDRESSES;********************************XXECF0 .BYTE $00XXECF1 .BYTE $28       .BYTE $50       .BYTE $78       .BYTE $A0       .BYTE $C8       .BYTE $F0       .BYTE $18       .BYTE $40       .BYTE $68       .BYTE $90       .BYTE $B8       .BYTE $E0       .BYTE $08       .BYTE $30       .BYTE $58       .BYTE $80       .BYTE $A8       .BYTE $D0       .BYTE $F8       .BYTE $20       .BYTE $48       .BYTE $70       .BYTE $98       .BYTE $C0;********************************; SEND TALK ON SERIAL BUS;********************************XXED09 ORA #$40      ;'@';********************************       .BYTE $2C;********************************; SEND LISTEN ON SERIAL BUS;********************************XXED0C ORA #$20      ;' '       JSR XXF0A4XXED11 PHA        BIT $94       BPL XXED20       SEC        ROR $A3       JSR XXED40       LSR $94       LSR $A3XXED20 PLA        STA $95       SEI        JSR XXEE97       CMP #$3F      ;'?'       BNE XXED2E       JSR XXEE85XXED2E LDA $DD00       ORA #$08       STA $DD00XXED36 SEI        JSR XXEE8E       JSR XXEE97       JSR XXEEB3;********************************; SEND BYTE FROM $95 ON SERIAL BUS;********************************XXED40 SEI        JSR XXEE97       JSR XXEEA9       BCS XXEDAD       JSR XXEE85       BIT $A3       BPL XXED5AXXED50 JSR XXEEA9       BCC XXED50XXED55 JSR XXEEA9       BCS XXED55XXED5A JSR XXEEA9       BCC XXED5A       JSR XXEE8E       LDA #$08       STA $A5XXED66 LDA $DD00       CMP $DD00       BNE XXED66       ASL A       BCC XXEDB0       ROR $95       BCS XXED7A       JSR XXEEA0       BNE XXED7DXXED7A JSR XXEE97XXED7D JSR XXEE85       NOP        NOP        NOP        NOP        LDA $DD00       AND #$DF       ORA #$10       STA $DD00       DEC $A5       BNE XXED66       LDA #$04       STA $DC07       LDA #$19       STA $DC0F       LDA $DC0DXXED9F LDA $DC0D       AND #$02       BNE XXEDB0       JSR XXEEA9       BCS XXED9F       CLI        RTS ;********************************XXEDAD LDA #$80;********************************       .BYTE $2C;********************************XXEDB0 LDA #$03XXEDB2 JSR XXFE1C       CLI        CLC        BCC XXEE03;********************************; SEND SECONDARY ADDRESS (LISTEN) ON SERIAL BUS;********************************XXEDB9 STA $95       JSR XXED36XXEDBE LDA $DD00       AND #$F7       STA $DD00       RTS ;********************************; SEND SECONDARY ADDRESS (TALK) ON SERIAL BUS;********************************XXEDC7 STA $95       JSR XXED36XXEDCC SEI        JSR XXEEA0       JSR XXEDBE       JSR XXEE85XXEDD6 JSR XXEEA9       BMI XXEDD6       CLI        RTS ;********************************; OUTPUT BYTE ON SERIAL BUS;********************************XXEDDD BIT $94       BMI XXEDE6       SEC        ROR $94       BNE XXEDEBXXEDE6       PHA        JSR XXED40       PLA XXEDEB STA $95       CLC        RTS ;********************************; SEND TALK ON SERIAL BUS;********************************XXEDEF SEI        JSR XXEE8E       LDA $DD00       ORA #$08       STA $DD00       LDA #$5F      ;'_';********************************       .BYTE $2C;********************************; SEND UNLISTEN ON SERIAL BUS;********************************XXEDFE LDA #$3F      ;'?'       JSR XXED11XXEE03 JSR XXEDBEXXEE06 TXA        LDX #$0AXXEE09 DEX        BNE XXEE09       TAX        JSR XXEE85       JMP XXEE97;********************************; INPUT BYTE ON SERIAL BUS;********************************XXEE13 SEI        LDA #$00       STA $A5       JSR XXEE85XXEE1B JSR XXEEA9       BPL XXEE1BXXEE20 LDA #$01       STA $DC07       LDA #$19       STA $DC0F       JSR XXEE97       LDA $DC0DXXEE30 LDA $DC0D       AND #$02       BNE XXEE3E       JSR XXEEA9       BMI XXEE30       BPL XXEE56XXEE3E LDA $A5       BEQ XXEE47       LDA #$02       JMP XXEDB2;********************************XXEE47 JSR XXEEA0       JSR XXEE85       LDA #$40      ;'@'       JSR XXFE1C       INC $A5       BNE XXEE20XXEE56 LDA #$08       STA $A5XXEE5A LDA $DD00       CMP $DD00       BNE XXEE5A       ASL A       BPL XXEE5A       ROR $A4XXEE67 LDA $DD00       CMP $DD00       BNE XXEE67       ASL A       BMI XXEE67       DEC $A5       BNE XXEE5A       JSR XXEEA0       BIT $90       BVC XXEE80       JSR XXEE06XXEE80       LDA $A4       CLI        CLC        RTS ;********************************; SET SERIAL CLOCK LINE LOW;********************************XXEE85 LDA $DD00       AND #$EF       STA $DD00       RTS ;********************************; SET SERIAL CLOCK LINE HIGH;********************************XXEE8E LDA $DD00       ORA #$10       STA $DD00       RTS ;********************************; SET SERIAL DATA LINE LOW;********************************XXEE97 LDA $DD00       AND #$DF       STA $DD00       RTS ;********************************; SET SERIAL DATA LINE HIGH;********************************XXEEA0 LDA $DD00       ORA #$20      ;' '       STA $DD00       RTS ;********************************XXEEA9 LDA $DD00       CMP $DD00       BNE XXEEA9       ASL A       RTS ;********************************; DELAY 1 MILLISECOND;********************************XXEEB3 TXA        LDX #$B8XXEEB6 DEX        BNE XXEEB6       TAX        RTS ;********************************; SET NEXT BIT TO TRANSMIT ON RS-232;********************************XXEEBB LDA $B4       BEQ XXEF06       BMI XXEF00       LSR $B6       LDX #$00       BCC XXEEC8       DEX XXEEC8 TXA        EOR $BD       STA $BD       DEC $B4       BEQ XXEED7XXEED1 TXA        AND #$04       STA $B5       RTS ;********************************XXEED7 LDA #$20      ;' '       BIT $0294       BEQ XXEEF2       BMI XXEEFC       BVS XXEEF6       LDA $BD       BNE XXEEE7XXEEE6 DEX XXEEE7 DEC $B4       LDA $0293       BPL XXEED1       DEC $B4       BNE XXEED1XXEEF2 INC $B4       BNE XXEEE6XXEEF6 LDA $BD       BEQ XXEEE7       BNE XXEEE6XXEEFC BVS XXEEE7       BVC XXEEE6XXEF00 INC $B4       LDX #$FF       BNE XXEED1XXEF06 LDA $0294       LSR A       BCC XXEF13       BIT $DD01       BPL XXEF2E       BVC XXEF31XXEF13 LDA #$00       STA $BD       STA $B5       LDX $0298       STX $B4       LDY $029D       CPY $029E       BEQ XXEF39       LDA ($F9),Y       STA $B6       INC $029D       RTS ;********************************; HANDLE RS-232 ERRORS;********************************XXEF2E LDA #$40      ;'@';       .BYTE $2C;XXEF31 LDA #$10       ORA $0297       STA $0297XXEF39 LDA #$01XXEF3B STA $DD0D       EOR $02A1       ORA #$80       STA $02A1       STA $DD0D       RTS ;********************************; CHECK CONTROL REGISTER;********************************XXEF4A LDX #$09       LDA #$20      ;' '       BIT $0293       BEQ XXEF54       DEX XXEF54 BVC XXEF58       DEX        DEX XXEF58 RTS ;********************************; ADD BIT INPUT ON RS-232 BUS TO WORD BEING INPUT;********************************XXEF59 LDX $A9       BNE XXEF90       DEC $A8       BEQ XXEF97       BMI XXEF70       LDA $A7       EOR $AB       STA $AB       LSR $A7       ROR $AAXXEF6D RTS ;********************************; HANDLE END OF WORD FOR RS-232 INPUT;********************************XXEF6E DEC $A8XXEF70 LDA $A7       BEQ XXEFDB       LDA $0293       ASL A       LDA #$01       ADC $A8       BNE XXEF6D;********************************; ENABLE BYTE RECEPTION;********************************XXEF7E LDA #$90       STA $DD0D       ORA $02A1       STA $02A1       STA $A9       LDA #$02       JMP XXEF3B;********************************; RECEIVER START BIT TEST;********************************XXEF90 LDA $A7       BNE XXEF7E       JMP XXE4D3;********************************; PUT RECEIVED DATA INTO RS-232 BUFFER;********************************XXEF97 LDY $029B       INY        CPY $029C       BEQ XXEFCA       STY $029B       DEY        LDA $AA       LDX $0298XXEFA9 CPX #$09       BEQ XXEFB1       LSR A       INX        BNE XXEFA9XXEFB1 STA ($F7),Y       LDA #$20      ;' '       BIT $0294       BEQ XXEF6E       BMI XXEF6D       LDA $A7       EOR $AB       BEQ XXEFC5       BVS XXEF6D;********************************       .BYTE $2C;********************************XXEFC5 BVC XXEF6D       LDA #$01;********************************       .BYTE $2C;********************************XXEFCA LDA #$04;********************************       .BYTE $2C;********************************XXEFCD LDA #$80;********************************       .BYTE $2C;********************************XXEFD0 LDA #$02       ORA $0297       STA $0297       JMP XXEF7E;********************************XXEFDB LDA $AA       BNE XXEFD0       BEQ XXEFCD;********************************; OUTPUT OF RS-232 DEVICE;********************************XXEFE1 STA $9A       LDA $0294       LSR A       BCC XXF012       LDA #$02       BIT $DD01       BPL XXF00D       BNE XXF012XXEFF2 LDA $02A1       AND #$02       BNE XXEFF2XXEFF9 BIT $DD01       BVS XXEFF9       LDA $DD01       ORA #$02       STA $DD01XXF006 BIT $DD01       BVS XXF012       BMI XXF006XXF00D LDA #$40      ;'@'       STA $0297XXF012 CLC        RTS ;********************************; BUFFER CHAR TO OUTPUT ON RS-232;********************************XXF014 JSR XXF028XXF017 LDY $029E       INY        CPY $029D       BEQ XXF014       STY $029E       DEY        LDA $9E       STA ($F9),YXXF028 LDA $02A1       LSR A       BCS XXF04C       LDA #$10       STA $DD0E       LDA $0299       STA $DD04       LDA $029A       STA $DD05       LDA #$81       JSR XXEF3B       JSR XXEF06       LDA #$11       STA $DD0EXXF04C RTS ;********************************; INITALISE RS-232 INPUT;********************************XXF04D STA $99       LDA $0294       LSR A       BCC XXF07D       AND #$08       BEQ XXF07D       LDA #$02       BIT $DD01       BPL XXF00D       BEQ XXF084XXF062 LDA $02A1       LSR A       BCS XXF062       LDA $DD01       AND #$FD       STA $DD01XXF070 LDA $DD01       AND #$04       BEQ XXF070XXF077 LDA #$90       CLC        JMP XXEF3B;********************************XXF07D LDA $02A1       AND #$12       BEQ XXF077XXF084 CLC        RTS ;********************************; GET NEXT CHARACTER FROM RS-232 INPUT BUFFER;********************************XXF086 LDA $0297       LDY $029C       CPY $029B       BEQ XXF09C       AND #$F7       STA $0297       LDA ($F7),Y       INC $029C       RTS ;********************************XXF09C ORA #$08       STA $0297       LDA #$00       RTS ;********************************; PROTECT SERIAL/CASETTE ROUTINE FROM RS-232 NMI'S;********************************XXF0A4 PHA        LDA $02A1       BEQ XXF0BBXXF0AA LDA $02A1       AND #$03       BNE XXF0AA       LDA #$10       STA $DD0D       LDA #$00       STA $02A1XXF0BB PLA        RTS ;********************************; KERNAL I/O MESSAGES; I/O ERROR;********************************XXF0BD .BYTE $0D       .TEXT 'I/O ERROR '       .BYTE $A3ZZF0C9       .BYTE $0D       .TEXT 'SEARCHING'       .BYTE $A0ZZF0D4 .TEXT 'FOR'       .BYTE $A0ZZF0D8 .BYTE $0D       .TEXT 'PRESS PLAY ON TAP'       .BYTE $C5ZZF0EB .TEXT 'PRESS RECORD & PLAY ON TAP'       .BYTE $C5ZZF106 .BYTE $0D       .TEXT 'LOADIN'       .BYTE $C7ZZF10E .BYTE $0D       .TEXT 'SAVING'       .BYTE $A0ZZF116 .BYTE $0D       .TEXT 'VERIFYIN'       .BYTE $C7ZZF120 .BYTE $0D       .TEXT 'FOUND'       .BYTE $A0ZZF127 .BYTE $0D       .TEXT 'OK'       .BYTE $8D;********************************; PRINT KERNAL MESSAGE INDEXED BY Y;********************************XXF12B BIT $9D       BPL XXF13CXXF12F LDA XXF0BD,Y       PHP        AND #$7F       JSR CHROUT       INY        PLP        BPL XXF12FXXF13C       CLC        RTS ;********************************; GET A CHARACTER;********************************XXF13E LDA $99       BNE XXF14A       LDA $C6       BEQ XXF155       SEI        JMP XXE5B4;********************************XXF14A CMP #$02       BNE XXF166XXF14E STY $97       JSR XXF086       LDY $97XXF155 CLC        RTS ;********************************; INPUT A CHARACTER;********************************XXF157 LDA $99       BNE XXF166       LDA $D3       STA $CA       LDA $D6       STA $C9       JMP XXE632;********************************;;********************************XXF166 CMP #$03       BNE XXF173       STA $D0       LDA $D5       STA $C8       JMP XXE632;********************************;;********************************XXF173 BCS XXF1AD       CMP #$02       BEQ XXF1B8       STX $97       JSR XXF199       BCS XXF196       PHA        JSR XXF199       BCS XXF193       BNE XXF18D       LDA #$40      ;'@'       JSR XXFE1CXXF18D DEC $A6       LDX $97       PLA        RTS ;********************************;;********************************XXF193 TAX        PLA        TXA XXF196 LDX $97       RTS ;********************************; READ A BYTE FROM CASSETTE BUFFER;********************************XXF199 JSR XXF80D       BNE XXF1A9       JSR XXF841       BCS XXF1B4       LDA #$00       STA $A6       BEQ XXF199XXF1A9 LDA ($B2),Y       CLC        RTS ;********************************;;********************************XXF1AD LDA $90       BEQ XXF1B5XXF1B1 LDA #$0DXXF1B3 CLC XXF1B4 RTS ;********************************; READ A BYTE FROM SERIAL BUS;********************************XXF1B5 JMP XXEE13;********************************; READ A BYTE FROM RS-232 BUS;********************************XXF1B8 JSR XXF14E       BCS XXF1B4       CMP #$00       BNE XXF1B3       LDA $0297       AND #$60       BNE XXF1B1       BEQ XXF1B8;********************************; OUTPUT A CHARACTER;********************************XXF1CA PHA        LDA $9A       CMP #$03       BNE XXF1D5       PLA        JMP XXE716;********************************;;********************************XXF1D5 BCC XXF1DB       PLA        JMP XXEDDD;********************************;;********************************XXF1DB LSR A       PLA XXF1DD STA $9E       TXA        PHA        TYA        PHA        BCC XXF208       JSR XXF80D       BNE XXF1F8       JSR XXF864       BCS XXF1FD       LDA #$02       LDY #$00       STA ($B2),Y       INY        STY $A6XXF1F8 LDA $9E       STA ($B2),YXXF1FC CLC XXF1FD PLA        TAY        PLA        TAX        LDA $9E       BCC XXF207       LDA #$00XXF207 RTS ;********************************;;********************************XXF208 JSR XXF017       JMP XXF1FC;********************************; SET INPUT DEVICE;********************************XXF20E JSR XXF30F       BEQ XXF216       JMP XXF701;********************************;;********************************XXF216 JSR XXF31F       LDA $BA       BEQ XXF233       CMP #$03       BEQ XXF233       BCS XXF237       CMP #$02       BNE XXF22A       JMP XXF04D;********************************;;********************************XXF22A LDX $B9       CPX #$60       BEQ XXF233       JMP XXF70A;********************************;;********************************XXF233 STA $99       CLC        RTS ;********************************; SET SERIAL BUS INPUT DEVICE;********************************XXF237 TAX        JSR XXED09       LDA $B9       BPL XXF245       JSR XXEDCC       JMP XXF248;********************************;;********************************XXF245 JSR XXEDC7XXF248 TXA        BIT $90       BPL XXF233       JMP XXF707;********************************; SET OUTPUT DEVICE;********************************XXF250 JSR XXF30F       BEQ XXF258       JMP XXF701;********************************;;********************************XXF258 JSR XXF31F       LDA $BA       BNE XXF262XXF25F JMP XXF70D;********************************;;********************************XXF262 CMP #$03       BEQ XXF275       BCS XXF279       CMP #$02       BNE XXF26F       JMP XXEFE1;********************************;;********************************XXF26F LDX $B9       CPX #$60       BEQ XXF25FXXF275 STA $9A       CLC        RTS ;********************************; SET SERIAL BUS OUTPUT DEVICE;********************************XXF279 TAX        JSR XXED0C       LDA $B9       BPL XXF286       JSR XXEDBE       BNE XXF289XXF286 JSR XXEDB9XXF289 TXA        BIT $90       BPL XXF275       JMP XXF707;********************************; CLOSE A FILE;********************************XXF291 JSR XXF314       BEQ XXF298       CLC        RTS ;********************************;;********************************XXF298 JSR XXF31F       TXA        PHA XXF29D LDA $BA       BEQ XXF2F1       CMP #$03       BEQ XXF2F1       BCS XXF2EE       CMP #$02       BNE XXF2C8       PLA        JSR XXF2F2       JSR XXF483       JSR XXFE27       LDA $F8       BEQ XXF2BA       INY XXF2BA LDA $FA       BEQ XXF2BF       INY XXF2BF LDA #$00       STA $F8       STA $FA       JMP XXF47D;********************************; CLOSE CASSETTE DEVICE;********************************XXF2C8 LDA $B9       AND #$0F       BEQ XXF2F1       JSR XXF7D0       LDA #$00       SEC        JSR XXF1DD       JSR XXF864       BCC XXF2E0       PLA        LDA #$00       RTS ;********************************;;********************************XXF2E0 LDA $B9       CMP #$62       BNE XXF2F1       LDA #$05       JSR XXF76A       JMP XXF2F1;********************************; CLOSE SERIAL BUS DEVICE;********************************XXF2EE JSR XXF642XXF2F1 PLA ;********************************; REORGANIZE FILE TABLES;********************************XXF2F2 TAX        DEC $98       CPX $98       BEQ XXF30D       LDY $98       LDA $0259,Y       STA $0259,X       LDA $0263,Y       STA $0263,X       LDA $026D,Y       STA $026D,XXXF30D CLC        RTS ;********************************; CHECK X AGAINST LOGICAL FILE TABLE;********************************XXF30F LDA #$00       STA $90       TXA XXF314 LDX $98XXF316 DEX        BMI XXF32E       CMP $0259,X       BNE XXF316       RTS ;********************************; SET FILE PARAMETERS DEPENDING ON X;********************************XXF31F LDA $0259,X       STA $B8       LDA $0263,X       STA $BA       LDA $026D,X       STA $B9XXF32E RTS ;********************************; CLOSE ALL FILES;********************************XXF32F LDA #$00       STA $98;********************************; RESTORE I/O TO DEFAULT DEVICES;********************************XXF333 LDX #$03       CPX $9A       BCS XXF33C       JSR XXEDFEXXF33C CPX $99       BCS XXF343       JSR XXEDEFXXF343 STX $9A       LDA #$00       STA $99       RTS ;********************************; OPEN A FILE;********************************XXF34A LDX $B8       BNE XXF351       JMP XXF70A;********************************;;********************************XXF351 JSR XXF30F       BNE XXF359       JMP XXF6FE;********************************;;********************************XXF359 LDX $98       CPX #$0A       BCC XXF362       JMP XXF6FB;********************************;;********************************XXF362 INC $98       LDA $B8       STA $0259,X       LDA $B9       ORA #$60       STA $B9       STA $026D,X       LDA $BA       STA $0263,X       BEQ XXF3D3       CMP #$03       BEQ XXF3D3       BCC XXF384       JSR XXF3D5       BCC XXF3D3XXF384 CMP #$02       BNE XXF38B       JMP XXF409;********************************; OPEN FOR CASSETTE DEVICE;********************************XXF38B JSR XXF7D0       BCS XXF393       JMP XXF713;********************************;;********************************XXF393 LDA $B9       AND #$0F       BNE XXF3B8       JSR XXF817       BCS XXF3D4       JSR XXF5AF       LDA $B7       BEQ XXF3AF       JSR XXF7EA       BCC XXF3C2       BEQ XXF3D4XXF3AC JMP XXF704;********************************;;********************************XXF3AF JSR XXF72C       BEQ XXF3D4       BCC XXF3C2       BCS XXF3AC;********************************; OPEN CASSETTE FOR INPUT;********************************XXF3B8 JSR XXF838       BCS XXF3D4       LDA #$04       JSR XXF76AXXF3C2 LDA #$BF       LDY $B9       CPY #$60       BEQ XXF3D1       LDY #$00       LDA #$02       STA ($B2),Y       TYA XXF3D1 STA $A6XXF3D3 CLC XXF3D4 RTS ;********************************; OPEN FOR SERIAL BUS DEVICES;********************************XXF3D5 LDA $B9       BMI XXF3D3       LDY $B7       BEQ XXF3D3       LDA #$00       STA $90       LDA $BA       JSR XXED0C       LDA $B9       ORA #$F0       JSR XXEDB9       LDA $90       BPL XXF3F6       PLA        PLA        JMP XXF707;********************************;;********************************XXF3F6 LDA $B7       BEQ XXF406       LDY #$00XXF3FC LDA ($BB),Y       JSR XXEDDD       INY        CPY $B7       BNE XXF3FCXXF406 JMP XXF654;********************************; OPEN RS-232 DEVICE;********************************XXF409 JSR XXF483       STY $0297XXF40F CPY $B7       BEQ XXF41D       LDA ($BB),Y       STA $0293,Y       INY        CPY #$04       BNE XXF40FXXF41D JSR XXEF4A       STX $0298       LDA $0293       AND #$0F       BEQ XXF446       ASL A       TAX        LDA $02A6       BNE XXF43A       LDY XXFEC1,X       LDA XXFEC0,X       JMP XXF440;********************************;;********************************XXF43A LDY XXE4EB,X       ;LDA XXE4EA,X       LDA XXE4EB-1,XXXF440 STY $0296       STA $0295XXF446 LDA $0295       ASL A       JSR XXFF2E       LDA $0294       LSR A       BCC XXF45C       LDA $DD01       ASL A       BCS XXF45C       JSR XXF00DXXF45C LDA $029B       STA $029C       LDA $029E       STA $029D       JSR XXFE27       LDA $F8       BNE XXF474       DEY        STY $F8       STX $F7XXF474 LDA $FA       BNE XXF47D       DEY        STY $FA       STX $F9XXF47D SEC        LDA #$F0       JMP XXFE2D;********************************; INITIALIZE CIA2;********************************XXF483 LDA #$7F       STA $DD0D       LDA #$06       STA $DD03       STA $DD01       LDA #$04       ORA $DD00       STA $DD00       LDY #$00       STY $02A1       RTS ;********************************; LOAD RAM FROM A DEVICE;********************************XXF49E STX $C3       STY $C4       JMP ($0330) ; NORMALLY F4A5;********************************; STANDARD LOAD RAM ENTRY;********************************XXF4A5 STA $93       LDA #$00       STA $90       LDA $BA       BNE XXF4B2XXF4AF JMP XXF713;********************************;;********************************XXF4B2 CMP #$03       BEQ XXF4AF       BCC XXF533       LDY $B7       BNE XXF4BF       JMP XXF710;********************************;;********************************XXF4BF LDX $B9       JSR XXF5AF       LDA #$60       STA $B9       JSR XXF3D5       LDA $BA       JSR XXED09       LDA $B9       JSR XXEDC7       JSR XXEE13       STA $AE       LDA $90       LSR A       LSR A       BCS XXF530       JSR XXEE13       STA $AF       TXA        BNE XXF4F0       LDA $C3       STA $AE       LDA $C4       STA $AFXXF4F0 JSR XXF5D2XXF4F3 LDA #$FD       AND $90       STA $90       JSR STOP       BNE XXF501       JMP XXF633;********************************;;********************************XXF501 JSR XXEE13       TAX        LDA $90       LSR A       LSR A       BCS XXF4F3       TXA        LDY $93       BEQ XXF51C       LDY #$00       CMP ($AE),Y       BEQ XXF51E       LDA #$10       JSR XXFE1C;********************************       .BYTE $2C;********************************XXF51C STA ($AE),YXXF51E INC $AE       BNE XXF524       INC $AFXXF524 BIT $90       BVC XXF4F3       JSR XXEDEF       JSR XXF642       BCC XXF5A9XXF530 JMP XXF704;********************************;;********************************XXF533 LSR A       BCS XXF539       JMP XXF713;********************************;;********************************XXF539 JSR XXF7D0       BCS XXF541       JMP XXF713;********************************;;********************************XXF541 JSR XXF817       BCS XXF5AE       JSR XXF5AFXXF549 LDA $B7       BEQ XXF556       JSR XXF7EA       BCC XXF55D       BEQ XXF5AE       BCS XXF530XXF556 JSR XXF72C       BEQ XXF5AE       BCS XXF530XXF55D LDA $90       AND #$10       SEC        BNE XXF5AE       CPX #$01       BEQ XXF579       CPX #$03       BNE XXF549XXF56C LDY #$01       LDA ($B2),Y       STA $C3       INY        LDA ($B2),Y       STA $C4XXF577 BCS XXF57DXXF579 LDA $B9       BNE XXF56CXXF57D LDY #$03       LDA ($B2),Y       LDY #$01       SBC ($B2),Y       TAX        LDY #$04       LDA ($B2),Y       LDY #$02       SBC ($B2),Y       TAY        CLC        TXA        ADC $C3       STA $AE       TYA        ADC $C4       STA $AF       LDA $C3       STA $C1       LDA $C4       STA $C2       JSR XXF5D2       JSR XXF84A;********************************       .BYTE $24;********************************XXF5A9 CLC        LDX $AE       LDY $AFXXF5AE RTS ;********************************; HANDLE MESSAGES FOR LOADING;********************************XXF5AF LDA $9D       BPL XXF5D1       LDY #$0C       JSR XXF12F       LDA $B7       BEQ XXF5D1       LDY #$17       JSR XXF12FXXF5C1 LDY $B7       BEQ XXF5D1       LDY #$00XXF5C7 LDA ($BB),Y       JSR CHROUT       INY        CPY $B7       BNE XXF5C7XXF5D1 RTS ;********************************; DO LOAD/VERIFY MESSAGE;********************************XXF5D2 LDY #$49      ;'I'       LDA $93       BEQ XXF5DA       LDY #$59      ;'Y'XXF5DA JMP XXF12B;********************************; SAVE RAM TO A DEVICE;********************************XXF5DD STX $AE       STY $AF       TAX        LDA $00,X       STA $C1       LDA $01,X       STA $C2       JMP ($0332) ; NORMALLY F5ED;********************************; STANDARD SAVE RAM ENTRY;********************************XXF5ED LDA $BA       BNE XXF5F4XXF5F1 JMP XXF713;XXF5F4 CMP #$03       BEQ XXF5F1       BCC XXF659       LDA #$61       STA $B9       LDY $B7       BNE XXF605       JMP XXF710;XXF605 JSR XXF3D5       JSR XXF68F       LDA $BA       JSR XXED0C       LDA $B9       JSR XXEDB9       LDY #$00       JSR XXFB8E       LDA $AC       JSR XXEDDD       LDA $AD       JSR XXEDDDXXF624 JSR XXFCD1       BCS XXF63F       LDA ($AC),Y       JSR XXEDDD       JSR STOP       BNE XXF63AXXF633 JSR XXF642       LDA #$00       SEC        RTS ;XXF63A JSR XXFCDB       BNE XXF624XXF63F JSR XXEDFE;********************************; CLOSE SERIAL BUS DEVICE;********************************XXF642 BIT $B9       BMI XXF657       LDA $BA       JSR XXED0C       LDA $B9       AND #$EF       ORA #$E0       JSR XXEDB9XXF654 JSR XXEDFEXXF657 CLC       RTS;********************************;;********************************XXF659 LSR A       BCS XXF65F       JMP XXF713;********************************; SAVE RAM TO CASSETTE;********************************XXF65F JSR XXF7D0       BCC XXF5F1       JSR XXF838       BCS XXF68E       JSR XXF68F       LDX #$03       LDA $B9       AND #$01       BNE XXF676       LDX #$01XXF676 TXA        JSR XXF76A       BCS XXF68E       JSR XXF867       BCS XXF68E       LDA $B9       AND #$02       BEQ XXF68D       LDA #$05       JSR XXF76A;********************************       .BYTE $24;********************************XXF68D CLC XXF68E RTS ;********************************; DO SAVING MESSAGE AND FILENAME;********************************XXF68F LDA $9D       BPL XXF68E       LDY #$51      ;'Q'       JSR XXF12F       JMP XXF5C1;********************************; INCREMENT REAL TIME CLOCK;********************************XXF69B LDX #$00       INC $A2       BNE XXF6A7       INC $A1       BNE XXF6A7       INC $A0XXF6A7 SEC        LDA $A2       SBC #$01       LDA $A1       SBC #$1A       LDA $A0       SBC #$4F      ;'O'       BCC XXF6BC       STX $A0       STX $A1       STX $A2XXF6BC LDA $DC01       CMP $DC01       BNE XXF6BC       TAX        BMI XXF6DA       LDX #$BD       STX $DC00XXF6CC LDX $DC01       CPX $DC01       BNE XXF6CC       STA $DC00       INX        BNE XXF6DCXXF6DA STA $91XXF6DC RTS ;********************************; READ REAL TIME CLOCK;********************************XXF6DD SEI        LDA $A2       LDX $A1       LDY $A0;********************************; SET REAL TIME CLOCK;********************************XXF6E4 SEI        STA $A2       STX $A1       STY $A0       CLI        RTS ;********************************; TEST STOP KEY;********************************XXF6ED LDA $91       CMP #$7F       BNE XXF6FA       PHP        JSR CLRCHN       STA $C6       PLP XXF6FA RTS ;********************************; HANDLE I/O ERRORS;********************************XXF6FB LDA #$01 ; TOO MANY FILES;       .BYTE $2C;XXF6FE LDA #$02 ; FILE OPEN;       .BYTE $2C;XXF701 LDA #$03 ; FILE NOT OPEN;       .BYTE $2C;XXF704 LDA #$04 ; FILE NOT FOUND;       .BYTE $2C;XXF707 LDA #$05 ; DEVICE NOT PRESENT;       .BYTE $2C;XXF70A LDA #$06 ; NOT INPUT FILE;       .BYTE $2C;XXF70D LDA #$07 ; NOT OUTPUT FILE;       .BYTE $2C;XXF710 LDA #$08 ; FILE NAME MISSING;       .BYTE $2C;XXF713 LDA #$09 ; ILLEGAL DEVICE NO.       PHA        JSR CLRCHN       LDY #$00       BIT $9D       BVC XXF729       JSR XXF12F       PLA        PHA        ORA #$30      ;'0'       JSR CHROUTXXF729 PLA        SEC        RTS ;********************************; GET NEXT FILE HEADER FROM CASSETTE;********************************XXF72C LDA $93       PHA        JSR XXF841       PLA        STA $93       BCS XXF769       LDY #$00       LDA ($B2),Y       CMP #$05       BEQ XXF769       CMP #$01       BEQ XXF74B       CMP #$03       BEQ XXF74B       CMP #$04       BNE XXF72CXXF74B TAX        BIT $9D       BPL XXF767       LDY #$63       JSR XXF12F       LDY #$05XXF757 LDA ($B2),Y       JSR CHROUT       INY        CPY #$15       BNE XXF757       LDA $A1       JSR XXE4E0       NOP XXF767       CLC        DEY XXF769 RTS ;********************************; WRITE A SPECIAL BLOCK TO CASSETTE WITH CODE IN A;********************************XXF76A STA $9E       JSR XXF7D0       BCC XXF7CF       LDA $C2       PHA        LDA $C1       PHA        LDA $AF       PHA        LDA $AE       PHA        LDY #$BF       LDA #$20      ;' 'XXF781 STA ($B2),Y       DEY        BNE XXF781       LDA $9E       STA ($B2),Y       INY        LDA $C1       STA ($B2),Y       INY        LDA $C2       STA ($B2),Y       INY        LDA $AE       STA ($B2),Y       INY        LDA $AF       STA ($B2),Y       INY        STY $9F       LDY #$00       STY $9EXXF7A5 LDY $9E       CPY $B7       BEQ XXF7B7       LDA ($BB),Y       LDY $9F       STA ($B2),Y       INC $9E       INC $9F       BNE XXF7A5XXF7B7 JSR XXF7D7       LDA #$69       STA $AB       JSR XXF86B       TAY        PLA        STA $AE       PLA        STA $AF       PLA        STA $C1       PLA        STA $C2       TYA XXF7CF RTS ;********************************; SET TAPE BUFFER POINTER IN XY;********************************XXF7D0 LDX $B2       LDY $B3       CPY #$02       RTS ;********************************; SET CASSETTE BUFFER TO I/O AREA;********************************XXF7D7 JSR XXF7D0       TXA        STA $C1       CLC        ADC #$C0       STA $AE       TYA        STA $C2       ADC #$00       STA $AF       RTS ;********************************; SEARCH TAPE FOR A FILE NAME;********************************XXF7EA JSR XXF72C       BCS XXF80C       LDY #$05       STY $9F       LDY #$00       STY $9EXXF7F7 CPY $B7       BEQ XXF80B       LDA ($BB),Y       LDY $9F       CMP ($B2),Y       BNE XXF7EA       INC $9E       INC $9F       LDY $9E       BNE XXF7F7XXF80B CLC XXF80C RTS ;********************************; ADD 1 TO TAPE INDEX AND TEST FOR OVERFLOW;********************************XXF80D JSR XXF7D0       INC $A6       LDY $A6       CPY #$C0       RTS ;********************************; HANDLE MESSAGES AND; TEST CASSETTE BUTTONS FOR READ;********************************XXF817 JSR XXF82E       BEQ XXF836       LDY #$1BXXF81E JSR XXF12FXXF821 JSR XXF8D0       JSR XXF82E       BNE XXF821       LDY #$6A       JMP XXF12F;********************************; TEST SENSE LINE FOR A BUTTON; DEPRESSED ON CASSETTE;********************************XXF82E LDA #$10       BIT $01       BNE XXF836       BIT $01XXF836 CLC        RTS ;********************************; SET MESSAGES AND TEST CASSETTE LINE; FOR INPUT;********************************XXF838 JSR XXF82E       BEQ XXF836       LDY #$2E      ;'.'       BNE XXF81E;********************************; READ A BLOCK FROM CASSETTE;********************************XXF841 LDA #$00       STA $90       STA $93       JSR XXF7D7XXF84A JSR XXF817       BCS XXF86E       SEI        LDA #$00       STA $AA       STA $B4       STA $B0       STA $9E       STA $9F       STA $9C       LDA #$90       LDX #$0E       BNE XXF875;********************************; WRITE A BLOCK FROM CASSETTE;********************************XXF864 JSR XXF7D7XXF867 LDA #$14       STA $ABXXF86B JSR XXF838XXF86E BCS XXF8DC       SEI        LDA #$82       LDX #$08;********************************; COMMON CODE FOR CASSETTE READ AND WRITE;********************************XXF875 LDY #$7F       STY $DC0D       STA $DC0D       LDA $DC0E       ORA #$19       STA $DC0F       AND #$91       STA $02A2       JSR XXF0A4       LDA $D011       AND #$EF       STA $D011       LDA $0314       STA $029F       LDA $0315       STA $02A0       JSR XXFCBD       LDA #$02       STA $BE       JSR XXFB97       LDA $01       AND #$1F       STA $01       STA $C0       LDX #$FFXXF8B5 LDY #$FFXXF8B7 DEY        BNE XXF8B7       DEX        BNE XXF8B5       CLI XXF8BE LDA $02A0       CMP $0315       CLC        BEQ XXF8DC       JSR XXF8D0       JSR XXF6BC       JMP XXF8BE;********************************; HANDLE STOP KEY DURING CASSETTE OPERATIONS;********************************XXF8D0 JSR STOP       CLC        BNE XXF8E1       JSR XXFC93       SEC        PLA        PLA XXF8DC LDA #$00       STA $02A0XXF8E1 RTS ;********************************; SCHEDULE CIA1 TIMER A DEPENDING ON X;********************************XXF8E2 STX $B1       LDA $B0       ASL A       ASL A       CLC        ADC $B0       CLC        ADC $B1       STA $B1       LDA #$00       BIT $B0       BMI XXF8F7       ROL AXXF8F7       ASL $B1       ROL A       ASL $B1       ROL A       TAX XXF8FE LDA $DC06       CMP #$16       BCC XXF8FE       ADC $B1       STA $DC04       TXA        ADC $DC07       STA $DC05       LDA $02A2       STA $DC0E       STA $02A4       LDA $DC0D       AND #$10       BEQ XXF92A       LDA #$F9       PHA        LDA #$2A      ;'*'       PHA        JMP XXFF43;********************************XXF92A CLI        RTS ;********************************; CASSETTE READ IRQ ROUTINE;********************************XXF92C LDX $DC07       LDY #$FF       TYA        SBC $DC06       CPX $DC07       BNE XXF92C       STX $B1       TAX        STY $DC06       STY $DC07       LDA #$19       STA $DC0F       LDA $DC0D       STA $02A3       TYA        SBC $B1       STX $B1       LSR A       ROR $B1       LSR A       ROR $B1       LDA $B0       CLC        ADC #$3C      ;'<'       CMP $B1       BCS XXF9AC       LDX $9C       BEQ XXF969       JMP XXFA60;XXF969 LDX $A3       BMI XXF988       LDX #$00       ADC #$30      ;'0'       ADC $B0       CMP $B1       BCS XXF993       INX        ADC #$26      ;'&'       ADC $B0       CMP $B1       BCS XXF997       ADC #$2C      ;','       ADC $B0       CMP $B1       BCC XXF98BXXF988 JMP XXFA10;XXF98B LDA $B4       BEQ XXF9AC       STA $A8       BNE XXF9ACXXF993 INC $A9       BCS XXF999XXF997 DEC $A9XXF999 SEC        SBC #$13       SBC $B1       ADC $92       STA $92       LDA $A4       EOR #$01       STA $A4       BEQ XXF9D5       STX $D7XXF9AC LDA $B4       BEQ XXF9D2       LDA $02A3       AND #$01       BNE XXF9BC       LDA $02A4       BNE XXF9D2XXF9BC LDA #$00       STA $A4       STA $02A4       LDA $A3       BPL XXF9F7       BMI XXF988XXF9C9 LDX #$A6       JSR XXF8E2       LDA $9B       BNE XXF98BXXF9D2 JMP XXFEBC;XXF9D5 LDA $92       BEQ XXF9E0       BMI XXF9DE       DEC $B0;********************************       .BYTE $2C;********************************XXF9DE INC $B0XXF9E0 LDA #$00       STA $92       CPX $D7       BNE XXF9F7       TXA        BNE XXF98B       LDA $A9       BMI XXF9AC       CMP #$10       BCC XXF9AC       STA $96       BCS XXF9ACXXF9F7 TXA        EOR $9B       STA $9B       LDA $B4       BEQ XXF9D2       DEC $A3       BMI XXF9C9       LSR $D7       ROR $BF       LDX #$DA       JSR XXF8E2       JMP XXFEBC;XXFA10 LDA $96       BEQ XXFA18       LDA $B4       BEQ XXFA1FXXFA18 LDA $A3       BMI XXFA1F       JMP XXF997;XXFA1F LSR $B1       LDA #$93       SEC        SBC $B1       ADC $B0       ASL A       TAX        JSR XXF8E2       INC $9C       LDA $B4       BNE XXFA44       LDA $96       BEQ XXFA5D       STA $A8       LDA #$00       STA $96       LDA #$81       STA $DC0D       STA $B4XXFA44 LDA $96       STA $B5       BEQ XXFA53       LDA #$00       STA $B4       LDA #$01       STA $DC0DXXFA53 LDA $BF       STA $BD       LDA $A8       ORA $A9       STA $B6XXFA5D JMP XXFEBC;********************************; RECEIVE NEXT BYTE FROM CASSETTE;********************************XXFA60 JSR XXFB97       STA $9C       LDX #$DA       JSR XXF8E2       LDA $BE       BEQ XXFA70       STA $A7XXFA70 LDA #$0F       BIT $AA       BPL XXFA8D       LDA $B5       BNE XXFA86       LDX $BE       DEX        BNE XXFA8A       LDA #$08       JSR XXFE1C       BNE XXFA8AXXFA86 LDA #$00       STA $AAXXFA8A JMP XXFEBC;XXFA8D BVS XXFAC0       BNE XXFAA9       LDA $B5       BNE XXFA8A       LDA $B6       BNE XXFA8A       LDA $A7       LSR A       LDA $BD       BMI XXFAA3       BCC XXFABA       CLC XXFAA3 BCS XXFABA       AND #$0F       STA $AAXXFAA9 DEC $AA       BNE XXFA8A       LDA #$40      ;'@'       STA $AA       JSR XXFB8E       LDA #$00       STA $AB       BEQ XXFA8AXXFABA LDA #$80       STA $AA       BNE XXFA8AXXFAC0 LDA $B5       BEQ XXFACE       LDA #$04       JSR XXFE1C       LDA #$00       JMP XXFB4A;XXFACE JSR XXFCD1       BCC XXFAD6       JMP XXFB48;XXFAD6 LDX $A7       DEX        BEQ XXFB08       LDA $93       BEQ XXFAEB       LDY #$00       LDA $BD       CMP ($AC),Y       BEQ XXFAEB       LDA #$01       STA $B6XXFAEB LDA $B6       BEQ XXFB3A       LDX #$3D      ;'='       CPX $9E       BCC XXFB33       LDX $9E       LDA $AD       STA $0101,X       LDA $AC       STA $0100,X       INX        INX        STX $9E       JMP XXFB3A;XXFB08 LDX $9F       CPX $9E       BEQ XXFB43       LDA $AC       CMP $0100,X       BNE XXFB43       LDA $AD       CMP $0101,X       BNE XXFB43       INC $9F       INC $9F       LDA $93       BEQ XXFB2F       LDA $BD       LDY #$00       CMP ($AC),Y       BEQ XXFB43       INY        STY $B6XXFB2F LDA $B6       BEQ XXFB3AXXFB33 LDA #$10       JSR XXFE1C       BNE XXFB43XXFB3A LDA $93       BNE XXFB43       TAY        LDA $BD       STA ($AC),YXXFB43 JSR XXFCDB       BNE XXFB8BXXFB48 LDA #$80XXFB4A STA $AA       SEI        LDX #$01       STX $DC0D       LDX $DC0D       LDX $BE       DEX        BMI XXFB5C       STX $BEXXFB5C DEC $A7       BEQ XXFB68       LDA $9E       BNE XXFB8B       STA $BE       BEQ XXFB8BXXFB68 JSR XXFC93       JSR XXFB8E       LDY #$00       STY $ABXXFB72 LDA ($AC),Y       EOR $AB       STA $AB       JSR XXFCDB       JSR XXFCD1       BCC XXFB72       LDA $AB       EOR $BD       BEQ XXFB8B       LDA #$20      ;' '       JSR XXFE1CXXFB8B JMP XXFEBC;********************************; MOVE SAVE/LOAD ADDRESS INTO $AC/$AD;********************************XXFB8E LDA $C2       STA $AD       LDA $C1       STA $AC       RTS ;********************************; INITALISE CASSETTE READ/WRITE VARIABLES;********************************XXFB97 LDA #$08       STA $A3       LDA #$00       STA $A4       STA $A8       STA $9B       STA $A9       RTS ;********************************; SCHEDULE CIA1 TIMER B AND; INVERT CASETTE WRITE LINE;********************************XXFBA6 LDA $BD       LSR A       LDA #$60       BCC XXFBAFXXFBAD LDA #$B0XXFBAF LDX #$00XXFBB1 STA $DC06       STX $DC07       LDA $DC0D       LDA #$19       STA $DC0F       LDA $01       EOR #$08       STA $01       AND #$08       RTS ;********************************; IRQ ROUTINE FOR CASSETTE WRITE B;********************************XXFBC8 SEC        ROR $B6       BMI XXFC09XXFBCD LDA $A8       BNE XXFBE3       LDA #$10       LDX #$01       JSR XXFBB1       BNE XXFC09       INC $A8       LDA $B6       BPL XXFC09       JMP XXFC57;XXFBE3 LDA $A9       BNE XXFBF0       JSR XXFBAD       BNE XXFC09       INC $A9       BNE XXFC09XXFBF0 JSR XXFBA6       BNE XXFC09       LDA $A4       EOR #$01       STA $A4       BEQ XXFC0C       LDA $BD       EOR #$01       STA $BD       AND #$01       EOR $9B       STA $9BXXFC09 JMP XXFEBC;XXFC0C LSR $BD       DEC $A3       LDA $A3       BEQ XXFC4E       BPL XXFC09XXFC16 JSR XXFB97       CLI        LDA $A5       BEQ XXFC30       LDX #$00       STX $D7       DEC $A5       LDX $BE       CPX #$02       BNE XXFC2C       ORA #$80XXFC2C STA $BD       BNE XXFC09XXFC30 JSR XXFCD1       BCC XXFC3F       BNE XXFBC8       INC $AD       LDA $D7       STA $BD       BCS XXFC09XXFC3F LDY #$00       LDA ($AC),Y       STA $BD       EOR $D7       STA $D7       JSR XXFCDB       BNE XXFC09XXFC4E LDA $9B       EOR #$01       STA $BDXXFC54 JMP XXFEBC;XXFC57 DEC $BE;       BNE XXFC5E       JSR XXFCCAXXFC5E LDA #$50      ;'P'       STA $A7       LDX #$08       SEI        JSR XXFCBD       BNE XXFC54;********************************; IRQ ROUTINE FOR CASSETTE WRITE A;********************************XXFC6A LDA #$78       JSR XXFBAF       BNE XXFC54       DEC $A7       BNE XXFC54       JSR XXFB97       DEC $AB       BPL XXFC54       LDX #$0A       JSR XXFCBD       CLI        INC $AB       LDA $BE       BEQ XXFCB8       JSR XXFB8E       LDX #$09       STX $A5       STX $B6       BNE XXFC16;********************************; SWITCH FROM CASSETTE IRQ TO DEFAULT IRQ;********************************XXFC93 PHP        SEI        LDA $D011       ORA #$10       STA $D011       JSR XXFCCA       LDA #$7F       STA $DC0D       JSR XXFDDD       LDA $02A0       BEQ XXFCB6       STA $0315       LDA $029F       STA $0314XXFCB6 PLP        RTS ;********************************; TERMINATE CASSETTE I/O;********************************XXFCB8 JSR XXFC93       BEQ XXFC54;********************************; SET IRQ VECTOR DEPENDING ON X;;XXFD92   8D 82 02   STA $0282;            +1 +2        +1+2;********************************;XXFCBD LDA XXFD93,XXXFCBD LDA ZZFD92+1,X       STA $0314       ;LDA XXFD94,X       LDA ZZFD92+2,X       STA $0315       RTS ;********************************; STOP CASSETTE MOTOR;********************************XXFCCA LDA $01       ORA #$20      ;' '       STA $01       RTS ;********************************; COMPARE $AC/$AD WITH $AE/$AF;********************************XXFCD1 SEC        LDA $AC       SBC $AE       LDA $AD       SBC $AF       RTS ;********************************; INCREMENT $AC/$AD;********************************XXFCDB INC $AC       BNE XXFCE1       INC $ADXXFCE1 RTS ;********************************; RESET ROUTINE;********************************XXFCE2 LDX #$FF       SEI        TXS        CLD        JSR XXFD02       BNE XXFCEF       JMP ($8000) ; START CARTRIDGE;XXFCEF STX $D016       JSR XXFDA3       JSR XXFD50       JSR XXFD15       JSR XXFF5B       CLI        JMP ($A000) ; START BASIC;********************************; CHECK FOR A CARTRIDGE;********************************XXFD02 LDX #$05XXFD04 LDA XXFD0F,X       CMP $8003,X       BNE XXFD0F       DEX        BNE XXFD04XXFD0F RTS ;********************************; CBM80 - AUTOSTART CARTRIDGE ID;********************************       .BYTE $C3       .BYTE $C2       .BYTE $CD       .TEXT '80';********************************; RESTORE I/O VECTORS;********************************XXFD15 LDX #$30      ;'0'       LDY #$FD       CLC ;********************************; SET I/O VECTORS DEPENDING ON XY;********************************XXFD1A STX $C3       STY $C4       LDY #$1FXXFD20 LDA $0314,Y       BCS XXFD27       LDA ($C3),YXXFD27 STA ($C3),Y       STA $0314,Y       DEY        BPL XXFD20       RTS ;********************************; VECTORS FOR OS AT $0314-$0333;********************************       .WORD $EA31 ; IRQ       .WORD $FE66 ; BRK       .WORD $FE47 ; NMI       .WORD $F34A ; OPEN       .WORD $F291 ; CLOSE       .WORD $F20E ; SET INPUT DEV       .WORD $F250 ; SET OUTPUT DEV       .WORD $F333 ; RESTORE I/O       .WORD $F157 ; INPUT       .WORD $F1CA ; OUTPUT       .WORD $F6ED ; TEST STOP KEY       .WORD $F13E ; GET       .WORD $F32F ; ABORT I/O       .WORD $FE66 ; UNUSED (BRK)       .WORD $F4A5 ; LOAD RAM       .WORD $F5ED ; SAVE RAM;********************************; INITALIZE MEMORY POINTERS;********************************XXFD50 LDA #$00       TAY XXFD53 STA $0002,Y       STA $0200,Y       STA $0300,Y       INY        BNE XXFD53       LDX #$3C      ;'<'       LDY #$03       STX $B2       STY $B3       TAY        LDA #$03       STA $C2XXFD6C INC $C2XXFD6E LDA ($C1),Y       TAX        LDA #$55      ;'U'       STA ($C1),Y       CMP ($C1),Y       BNE XXFD88       ROL A       STA ($C1),Y       CMP ($C1),Y       BNE XXFD88       TXA        STA ($C1),Y       INY        BNE XXFD6E       BEQ XXFD6CXXFD88 TYA        TAX        LDY $C2       CLC        JSR XXFE2D       LDA #$08ZZFD92       STA $0282       LDA #$04       STA $0288       RTS ;********************************; IRQ VECTORS;********************************       .WORD $FC6A ; CASSETTE WRITE A       .WORD $FBCD ; CASSETTE WRITE B       .WORD $EA31 ; STANDARD IRQ       .WORD $F92C ; CASSETTE READ;********************************; INITALIAZE I/O DEVICES;********************************XXFDA3 LDA #$7F       STA $DC0D       STA $DD0D       STA $DC00       LDA #$08       STA $DC0E       STA $DD0E       STA $DC0F       STA $DD0F       LDX #$00       STX $DC03       STX $DD03       STX $D418       DEX        STX $DC02       LDA #$07       STA $DD00       LDA #$3F      ;'?'       STA $DD02       LDA #$E7       STA $01       LDA #$2F      ;'/'       STA $00;********************************; INITALISE TAL1/TAH1 FPR 1/60 OF A SECOND;********************************XXFDDD LDA $02A6       BEQ XXFDEC       LDA #$25      ;'%'       STA $DC04       LDA #$40      ;'@'       JMP XXFDF3;XXFDEC LDA #$95       STA $DC04       LDA #$42      ;'B'XXFDF3 STA $DC05       JMP XXFF6E;********************************; INITALIZE FILE NAME PARAMETERS;********************************XXFDF9 STA $B7       STX $BB       STY $BC       RTS ;********************************; INITIALIZE FILE PARAMETERS;********************************XXFE00 STA $B8       STX $BA       STY $B9       RTS ;********************************; READ I/O STATUS WORD;********************************XXFE07 LDA $BA       CMP #$02       BNE XXFE1A       LDA $0297       PHA        LDA #$00       STA $0297       PLA        RTS ;********************************; CONTROL KERNEL MESSAGES;********************************XXFE18 STA $9D;********************************; READ ST;********************************XXFE1A LDA $90;********************************; ADD A TO ST;********************************XXFE1C ORA $90       STA $90       RTS ;********************************; SET TIMEOUT ON SERAIL BUS;********************************XXFE21 STA $0285       RTS ;********************************; READ/SET TOP OF MEMORY;********************************XXFE25 BCC XXFE2DXXFE27 LDX $0283       LDY $0284XXFE2D STX $0283       STY $0284       RTS ;********************************; READ/SET BOTTOM OF MEMORY;********************************XXFE34 BCC XXFE3C       LDX $0281       LDY $0282XXFE3C STX $0281       STY $0282       RTS ;********************************; NMI ENTRY;********************************XXFE43 SEI        JMP ($0318) ; NORMALLY FE47;********************************; STANDARD NMI ROUTINE;********************************XXFE47 PHA        TXA        PHA        TYA        PHA        LDA #$7F       STA $DD0D       LDY $DD0D       BMI XXFE72       JSR XXFD02       BNE XXFE5E       JMP ($8002) ; CARTRIDGE WARM START;********************************XXFE5E JSR XXF6BC       JSR STOP       BNE XXFE72;********************************; BRK ROUTINE;********************************XXFE66 JSR XXFD15       JSR XXFDA3       JSR XXE518       JMP ($A002);********************************; INTERNAL NMI;********************************XXFE72 TYA        AND $02A1       TAX        AND #$01       BEQ XXFEA3       LDA $DD00       AND #$FB       ORA $B5       STA $DD00       LDA $02A1       STA $DD0D       TXA        AND #$12       BEQ XXFE9D       AND #$02       BEQ XXFE9A       JSR XXFED6       JMP XXFE9D;XXFE9A JSR XXFF07XXFE9D JSR XXEEBB       JMP XXFEB6;XXFEA3 TXA        AND #$02       BEQ XXFEAE       JSR XXFED6       JMP XXFEB6;XXFEAE TXA        AND #$10       BEQ XXFEB6       JSR XXFF07XXFEB6 LDA $02A1       STA $DD0DXXFEBC PLA        TAY        PLA        TAX XXFEC0 PLA XXFEC1 RTI ;********************************; BAUD RATE TABLES;********************************       .WORD $27C1 ; 50       .WORD $1A3E ; 75       .WORD $11C5 ; 110       .WORD $0E74 ; 134.5       .WORD $0CED ; 150       .WORD $0645 ; 300       .WORD $02F0 ; 600       .WORD $0146 ; 1200       .WORD $00B8 ; 1800       .WORD $0071 ; 2400;********************************; INPUT NEXT BIT ON RS-232 AND SCHEDULE TB2;********************************XXFED6 LDA $DD01       AND #$01       STA $A7       LDA $DD06       SBC #$1C       ADC $0299       STA $DD06       LDA $DD07       ADC $029A       STA $DD07       LDA #$11       STA $DD0F       LDA $02A1       STA $DD0D       LDA #$FF       STA $DD06       STA $DD07       JMP XXEF59;********************************; SCHEDULE TB2 USING BAUD RATE FACTOR;********************************XXFF07 LDA $0295       STA $DD06       LDA $0296       STA $DD07       LDA #$11       STA $DD0F       LDA #$12       EOR $02A1       STA $02A1       LDA #$FF       STA $DD06       STA $DD07       LDX $0298       STX $A8       RTS ;********************************; CONTINUATION OF BAUD RATE CALCULATION;********************************XXFF2E TAX        LDA $0296       ROL A       TAY        TXA        ADC #$C8       STA $0299       TYA        ADC #$00       STA $029A       RTS ;********************************; PADDING;********************************       NOP        NOP ;********************************;;********************************XXFF43 PHP        PLA        AND #$EF       PHA ;********************************; IRQ ENTRY POINT;********************************XXFF48 PHA        TXA        PHA        TYA        PHA        TSX        LDA $0104,X       AND #$10       BEQ XXFF58       JMP ($0316) ; NORMALLY FE66;********************************XXFF58 JMP ($0314) ; NORMALLY EA31;********************************; ADDITION TO I/O DEVICE INITALISATION;********************************XXFF5B JSR XXE518XXFF5E LDA $D012       BNE XXFF5E       LDA $D019       AND #$01       STA $02A6       JMP XXFDDD;********************************; END OF SCHEDULING TA FOR 1/60 SECOND IRQ'S;********************************XXFF6E LDA #$81       STA $DC0D       LDA $DC0E       AND #$80       ORA #$11       STA $DC0E       JMP XXEE8E;********************************; KERNAL VERSION NUMBER;********************************IDBYTE .BYTE $03 ; KERNAL VERSION NUMBER;********************************; KERNAL VECTORS;********************************CINT   JMP XXFF5B;IOINIT JMP XXFDA3;RAMTAS JMP XXFD50;RESTOR JMP XXFD15;VECTOR JMP XXFD1A;SETMSG JMP XXFE18;SECOND JMP XXEDB9;TKSA   JMP XXEDC7;MEMTOP JMP XXFE25;MEMBOT JMP XXFE34;SCNKEY JMP XXEA87;SETTMO JMP XXFE21;ACPTR  JMP XXEE13;CIOUT  JMP XXEDDD;UNTLK  JMP XXEDEF;UNLSN  JMP XXEDFE;LISTEN JMP XXED0C;TALK   JMP XXED09;READST JMP XXFE07 ; READ I/O STATUS WORD;SETLFS JMP XXFE00 ; SET FILE PARAMETERS;SETNAM JMP XXFDF9 ; SET FILENAME PARAMETERS;OPEN   JMP ($031A) ; (F34A) OPEN A FILE;CLOSE  JMP ($031C) ; (F291) CLOSE A FILE;CHKIN  JMP ($031E) ; (F20E) SET INPUT DEVICE;CHKOUT JMP ($0320) ; (F250) SET OUTPUT DEVICE;CLRCHN JMP ($0322) ; (F333) RESTORE I/O DEVICES TO DEFAULT;CHRIN  JMP ($0324) ; (F157) INPUT CHAR ON CURRENT DEVICE;CHROUT JMP ($0326) ; (F1CA) OUTPUT CHAR ON CURRENT DEVICE;LOAD   JMP XXF49E ; LOAD RAM FROM DEVICE;SAVE   JMP XXF5DD ; SAVE RAM TO DEVICE;SETTIM JMP XXF6E4 ; (F6ED) CHECK STOP KEY;RDTIM  JMP XXF6DD ; (F6ED) CHECK STOP KEY;STOP   JMP ($0328) ; (F6ED) CHECK STOP KEY;GETIN  JMP ($032A) ; (F13E) GET A CHARACTER;CLALL  JMP ($032C) ; (F32F) CLOSE ALL CHANNELS AND FILES;UDTIM  JMP XXF69B ; INCREMENT REAL TIME CLOCK;SCREEN JMP XXE505 ; READ ORGANISATION OF SCREEN INTO XY;PLOT   JMP XXE50A ; READ/SET XY CURSOR POSITION;IOBASE JMP XXE500 ; READ BASE ADDRESS OF I/O DEVICES;********************************; UNUSED;********************************       .BYTE $52,$52,$42,$59;********************************; INTERRRUPT VECTORS;********************************NMIVEC .WORD $FE43 ; NMI VECTORRESVEC .WORD $FCE2 ; NMI VECTORIRQVEC .WORD $FF48 ; NMI VECTOR;********************************.END